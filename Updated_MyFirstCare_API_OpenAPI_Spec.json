{
  "openapi": "3.1.0",
  "info": {
    "title": "My FirstCare Opera Panel",
    "description": "\n# My FirstCare Opera Panel API\n\nA comprehensive Medical IoT Device Management System for healthcare institutions.\n\n## Features\n\n### üè• **Device Management**\n- **AVA4 Devices**: Blood pressure, glucose monitoring\n- **Kati Watches**: Continuous vital sign monitoring \n- **Qube-Vital**: Advanced medical sensors\n\n### üë• **Patient Management**\n- Complete patient profiles and medical history\n- Real-time device data integration\n- Multi-hospital support\n- **Raw Document Access**: 431 patients with 269 fields per document\n\n### üìã **Raw Patient Document Analysis**\nAccess complete MongoDB patient documents with comprehensive field analysis:\n\n#### **Core Patient Fields (269 total)**:\n- **Demographics**: `first_name`, `last_name`, `gender`, `birth_date`, `id_card`, `phone`\n- **Location**: `address_1`, `address_2`, `province_code`, `district_code`, `sub_district_code`\n- **Medical IDs**: `amy_id`, `hn_id_no`, `patient_id`\n- **Emergency Contacts**: `emergency_contact_name`, `emergency_contact_phone`\n\n#### **Medical Device Integration (MAC Addresses)**:\n- **AVA4 Devices**: `ava_mac_address`, `ava_box_id`, `ava_sim_card`\n- **Blood Pressure**: `blood_pressure_mac_address`\n- **Blood Glucose**: `blood_glucose_mac_address`\n- **Temperature**: `body_temperature_mac_address`\n- **Pulse Oximetry**: `fingertip_pulse_oximeter_mac_address`\n- **Smartwatches**: `watch_mac_address`\n- **Cholesterol**: `cholesterol_mac_address`\n\n#### **Medical Alert Thresholds**:\n- **Blood Pressure**: `bp_sbp_above`, `bp_sbp_below`, `bp_dbp_above`, `bp_dbp_below`\n- **Blood Sugar**: `glucose_normal_before`, `glucose_normal_after`\n- **Temperature**: `temperature_normal_above`, `temperature_normal_below`\n- **SPO2**: `spo2_normal_above`, `spo2_normal_below`\n- **Cholesterol**: `cholesterol_above`, `cholesterol_below`\n\n#### **Medical History Fields**:\n- **Vital Signs**: Blood pressure, temperature, SPO2, heart rate\n- **Lab Results**: Creatinine, cholesterol, BUN levels\n- **Body Metrics**: Weight, BMI, body composition\n- **Medication**: Current medications, allergies, dosages\n- **Activity**: Sleep data, step counts, exercise patterns\n\n#### **Raw Document Endpoints**:\n- `GET /admin/patients-raw-documents` - Admin access to raw patient documents\n- `GET /api/ava4/patients/raw-documents` - AVA4 specific raw patient data\n- `GET /api/ava4/sub-devices/raw-documents` - Raw device documents with patient linkages\n\n### üîê **Security & Authentication**\n- **JWT-based Authentication**: All protected endpoints require Bearer tokens\n- **Stardust-V1 Integration**: Centralized authentication system\n- **FHIR R5 Audit Logging**: Complete audit trail\n- **Role-based Access Control**: Fine-grained permissions\n\n### üìä **Analytics & Monitoring**\n- Real-time dashboards\n- Performance metrics\n- Alert management\n- Medical trend analysis\n\n## Data Structure Analysis\n\n### **Patient Document Structure (431 Documents)**\nEach patient document contains **269 fields** including:\n\n1. **Core Demographics** (15 fields): Name, contact, identification\n2. **Medical Device MAC Addresses** (12 fields): IoT device integration\n3. **Alert Thresholds** (24 fields): Customizable medical alert limits\n4. **Medical History Integration** (50+ fields): Historical data references\n5. **Hospital Integration** (10 fields): Multi-hospital support\n6. **Audit Fields** (8 fields): Created, updated, deleted tracking\n7. **Additional Medical Data** (150+ fields): Comprehensive health metrics\n\n### **Raw Document Analysis Features**\n- **Field Type Analysis**: Automatic detection of data types per field\n- **Sample Value Extraction**: Preview of actual field values\n- **ObjectId Identification**: MongoDB relationship mapping\n- **Field Usage Statistics**: Count of populated fields across documents\n- **JSON Structure Preservation**: Complete document hierarchy maintained\n\n## Authentication\n\nMost endpoints require authentication using JWT Bearer tokens:\n\n1. **Obtain Token**: Use `/auth/login` with valid credentials\n2. **Use Token**: Include `Authorization: Bearer <token>` header\n3. **Refresh Token**: Use `/auth/refresh` when token expires\n\n### Public Endpoints (No Authentication Required)\n- `GET /` - API information\n- `GET /health` - System health check\n- `GET /docs` - API documentation\n- `GET /api/kati/test` - Kati API test endpoint\n- `POST /auth/login` - Authentication login\n- `POST /auth/refresh` - Token refresh\n\n### Protected Endpoints (Authentication Required)\n- All `/admin/*` endpoints\n- All `/api/*/devices` endpoints  \n- All `/api/*/data` endpoints\n- `/auth/me` - Current user information\n\n### **Raw Patient Document Endpoints** (Authentication Required)\n- `GET /admin/patients` - Complete patient documents (269 fields)\n- `GET /admin/patients-raw-documents` - Raw document analysis\n- `GET /api/ava4/patients/raw-documents` - AVA4 patient raw data\n- `GET /api/ava4/sub-devices/raw-documents` - Device-patient linkages\n\n## Error Handling\n\nThe API uses structured error responses with:\n- Consistent error codes and messages\n- Request ID tracking\n- Detailed field validation\n- Security event logging\n\n## Rate Limiting & Security\n\n- Brute force detection\n- SQL injection monitoring  \n- Request rate limiting\n- Comprehensive audit logging\n\n## Database Statistics\n\n- **431 Patients** with complete medical profiles\n- **269 Fields per Patient Document** \n- **6,898 Medical Records** across 14 collections\n- **Real-time IoT Device Integration**\n- **FHIR R5 Compliant Audit Logging**\n\n\n## üìä **Advanced Analytics & Reporting**\n\n### **Healthcare Analytics Engine**\n- **Patient Analytics**: Demographics, risk assessment, population health insights\n- **Vital Signs Analysis**: Statistical analysis, trend detection, anomaly detection\n- **Health Risk Predictions**: Multi-factor scoring, ML-based predictions\n- **Device Analytics**: Utilization tracking, compliance monitoring\n\n### **Data Visualization System**\n- **Chart Data**: Chart.js compatible formats for dashboards\n- **Multiple Chart Types**: Line, bar, pie, scatter, gauge, area charts\n- **Medical Color Schemes**: Risk level indicators and accessibility\n- **Real-time Data**: Live dashboard updates\n\n### **Automated Reporting Engine**\n- **Scheduled Reports**: Daily, weekly, monthly, quarterly reporting\n- **9 Report Types**: Patient reports, hospital performance, risk assessments\n- **Multiple Formats**: JSON, HTML, CSV, PDF (future), Excel (future)\n- **Email Delivery**: SMTP integration with professional templates\n- **Template Management**: Create, update, schedule reports\n\n### **Analytics Features**\n- **Medical Thresholds**: Blood pressure, heart rate, temperature, SpO2 classifications\n- **Anomaly Detection**: Z-score based statistical outlier detection\n- **Predictive Modeling**: Health event predictions and trend forecasting\n- **Performance Optimization**: Redis caching, database indexing\n",
    "contact": {
      "name": "My FirstCare Development Team",
      "url": "https://my-firstcare.com/",
      "email": "support@my-firstcare.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://my-firstcare.com/license"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5054",
      "description": "Development server"
    },
    {
      "url": "https://stardust.my-firstcare.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/auth/simple-login": {
      "post": {
        "tags": [
          "authentication",
          "Authentication"
        ],
        "summary": "Simple Login",
        "description": "Simple test login endpoint",
        "operationId": "simple_login_auth_simple_login_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "authentication",
          "Authentication"
        ],
        "summary": "Login",
        "description": "Login endpoint - Fixed implementation",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                },
                "example": {
                  "success": true,
                  "message": "Login successful",
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "token_type": "bearer",
                  "user": {
                    "username": "admin",
                    "role": "admin",
                    "full_name": "Administrator"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid credentials"
                }
              }
            }
          },
          "503": {
            "description": "Authentication service unavailable",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Authentication service unavailable: Connection timeout"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "authentication",
          "Authentication"
        ],
        "summary": "Refresh Token",
        "description": "Refresh token endpoint - Fixed implementation",
        "operationId": "refresh_token_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                },
                "example": {
                  "success": true,
                  "message": "Token refreshed successfully",
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "token_type": "bearer",
                  "user": {}
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid refresh token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "authentication",
          "Authentication"
        ],
        "summary": "Get Me",
        "description": "Get comprehensive current user info from Stardust-V1 JWT",
        "operationId": "get_me_auth_me_get",
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Comprehensive user information retrieved successfully from Stardust-V1 JWT",
                  "data": {
                    "username": "admin",
                    "role": "admin",
                    "full_name": "Administrator",
                    "email": "admin@my-firstcare.com",
                    "phone": "+66-XXX-XXX-XXXX",
                    "permissions": [
                      "read",
                      "write",
                      "admin"
                    ],
                    "authentication_source": "Stardust-V1",
                    "token_type": "JWT",
                    "system_access": {
                      "can_access_admin": true,
                      "can_modify_data": true,
                      "can_view_data": true,
                      "is_superadmin": false
                    }
                  },
                  "request_id": "d4e5f6g7-h8i9-0123-defg-456789012345",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid or expired token"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/data": {
      "post": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Receive Ava4 Data",
        "description": "Receive data from AVA4 device",
        "operationId": "receive_ava4_data_api_ava4_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ava4DataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ava4DataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/devices": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Get Ava4 Devices",
        "description": "Get AVA4 devices",
        "operationId": "get_ava4_devices_api_ava4_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/devices/{device_id}": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Get Ava4 Device",
        "description": "Get specific AVA4 device",
        "operationId": "get_ava4_device_api_ava4_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Delete Ava4 Device",
        "description": "Soft delete AVA4 device",
        "operationId": "delete_ava4_device_api_ava4_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/patient-info": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Get Patient Info By Mac",
        "description": "Get patient basic information by AVA4 device MAC address for device mapping",
        "operationId": "get_patient_info_by_mac_api_ava4_patient_info_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mac_address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Get Ava4 Sub Devices",
        "description": "Get AVA4 sub-devices (medical devices) connected to a specific AVA4 box",
        "operationId": "get_ava4_sub_devices_api_ava4_sub_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mac_address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Register Ava4 Sub Device",
        "description": "Register a new AVA4 sub-device (medical device) for a patient",
        "operationId": "register_ava4_sub_device_api_ava4_sub_devices_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mac_address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          },
          {
            "name": "device_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Name"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Model"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/test-medical-devices/{patient_id}": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Test Medical Devices",
        "description": "Test endpoint to check medical devices for a specific patient",
        "operationId": "test_medical_devices_api_ava4_test_medical_devices__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices/{patient_id}/{device_type}": {
      "put": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Update Ava4 Sub Device",
        "description": "Update an AVA4 sub-device for a patient",
        "operationId": "update_ava4_sub_device_api_ava4_sub_devices__patient_id___device_type__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "device_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          },
          {
            "name": "mac_address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          },
          {
            "name": "device_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Device Name"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Model"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Unregister Ava4 Sub Device",
        "description": "Unregister an AVA4 sub-device from a patient",
        "operationId": "unregister_ava4_sub_device_api_ava4_sub_devices__patient_id___device_type__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "device_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices/analytics": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Get Ava4 Sub Device Analytics",
        "description": "Get analytics for AVA4 sub-devices",
        "operationId": "get_ava4_sub_device_analytics_api_ava4_sub_devices_analytics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/sub-devices/discovery": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Discover Ava4 Sub Devices",
        "description": "Discover available AVA4 sub-devices for registration",
        "operationId": "discover_ava4_sub_devices_api_ava4_sub_devices_discovery_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "box_mac_address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Box Mac Address"
            }
          },
          {
            "name": "scan_duration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Scan Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices/raw-documents": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Get Raw Amy Devices Documents",
        "description": "Get raw documents to examine structure and relationships - supports both devices and patients",
        "operationId": "get_raw_amy_devices_documents_api_ava4_sub_devices_raw_documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "data_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Type of data: 'devices' or 'patients'",
              "default": "devices",
              "title": "Data Type"
            },
            "description": "Type of data: 'devices' or 'patients'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices/patient-relationship/{patient_id}": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Analyze Patient Device Relationship",
        "description": "Analyze the complete relationship between a patient and their devices",
        "operationId": "analyze_patient_device_relationship_api_ava4_sub_devices_patient_relationship__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/debug-patient-query/{patient_id}": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Debug Patient Query",
        "description": "Debug endpoint to test patient_id queries",
        "operationId": "debug_patient_query_api_ava4_debug_patient_query__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/medical-history/collections": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device",
          "Medical History"
        ],
        "summary": "Get Medical History Collections Overview",
        "description": "## Medical History Collections Overview\n    \n    Get comprehensive information about all medical history collections in the system.\n    \n    ### Features:\n    - **Collection Statistics**: Record counts, status, and metadata\n    - **Data Fields**: Available fields for each collection type\n    - **System Overview**: Total records and active collections\n    - **Real-time Data**: Live collection statistics\n    \n    ### Collections Included:\n    - Blood Pressure Histories\n    - Blood Sugar Histories  \n    - Body Data Histories\n    - Temperature Data Histories\n    - SPO2 Histories\n    - Sleep Data Histories\n    - Step Histories\n    - Medication Histories\n    - Allergy Histories\n    - And more...\n    \n    ### Response Data:\n    - `summary`: Overall system statistics\n    - `collections`: Detailed collection information\n    - `top_collections`: Most active collections by record count\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_medical_history_collections_api_ava4_medical_history_collections_get",
        "responses": {
          "200": {
            "description": "Medical history collections retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalHistoryCollectionsResponse"
                },
                "example": {
                  "success": true,
                  "message": "Medical history collections retrieved successfully",
                  "data": {
                    "summary": {
                      "total_collections": 13,
                      "total_records": 56219,
                      "active_collections": 13,
                      "empty_collections": 0
                    },
                    "collections": {
                      "blood_pressure_histories": {
                        "name": "Blood Pressure History",
                        "record_count": 21542,
                        "status": "active",
                        "data_fields": [
                          "systolic",
                          "diastolic",
                          "pulse"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/medical-history/patient/{patient_id}": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device",
          "Medical History"
        ],
        "summary": "Get Patient Medical History",
        "description": "## Patient Medical History Retrieval\n    \n    Get comprehensive medical history for a specific patient across all data types.\n    \n    ### Features:\n    - **Complete Medical Records**: All medical data types for the patient\n    - **Flexible Filtering**: Filter by collection type, date range\n    - **Pagination Support**: Efficient handling of large datasets\n    - **Multi-Collection Data**: Blood pressure, temperature, SPO2, etc.\n    - **Structured Response**: Organized by medical data type\n    \n    ### Query Parameters:\n    - `collection_type`: Filter by specific medical data type (optional)\n    - `limit`: Number of records per collection (default: 100)\n    - `skip`: Number of records to skip (default: 0)\n    - `date_from`: Start date filter (ISO format, optional)\n    - `date_to`: End date filter (ISO format, optional)\n    \n    ### Medical Data Types:\n    - `blood_pressure_histories`: Blood pressure readings\n    - `temprature_data_histories`: Temperature measurements\n    - `spo2_histories`: Oxygen saturation levels\n    - `blood_sugar_histories`: Blood glucose readings\n    - `sleep_data_histories`: Sleep tracking data\n    - `step_histories`: Physical activity data\n    - And more...\n    \n    ### Response Structure:\n    - `summary`: Patient overview and record counts\n    - `medical_history`: Organized data by collection type\n    - `pagination`: Current pagination status\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_patient_medical_history_api_ava4_medical_history_patient__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "collection_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific medical data type",
              "title": "Collection Type"
            },
            "description": "Filter by specific medical data type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of records per collection",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of records per collection"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date filter (ISO format)",
              "title": "Date From"
            },
            "description": "Start date filter (ISO format)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date filter (ISO format)",
              "title": "Date To"
            },
            "description": "End date filter (ISO format)"
          }
        ],
        "responses": {
          "200": {
            "description": "Patient medical history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientMedicalHistoryResponse"
                },
                "example": {
                  "success": true,
                  "message": "Patient medical history retrieved successfully",
                  "data": {
                    "summary": {
                      "patient_id": "622035a5fd26d7b6d9b7730c",
                      "total_records": 2853,
                      "collections_with_data": 4,
                      "date_range": {
                        "from": "2022-01-01T00:00:00Z",
                        "to": "2024-12-31T23:59:59Z"
                      }
                    },
                    "medical_history": {
                      "temprature_data_histories": {
                        "count": 2574,
                        "records": [
                          {
                            "temprature_data": 36.5,
                            "temprature_import_date": "2024-01-15T10:30:00Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Patient not found"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/medical-history/trends/{patient_id}": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device",
          "Medical History"
        ],
        "summary": "Get Patient Medical Trends Analysis",
        "description": "## Medical Trends Analysis\n    \n    Analyze medical trends and patterns for a specific patient over time.\n    \n    ### Features:\n    - **Statistical Analysis**: Min, max, average, latest values\n    - **Time-based Trends**: Configurable time periods\n    - **Multiple Metrics**: Support for various medical data types\n    - **Trend Visualization**: Data ready for charts and graphs\n    - **Historical Analysis**: Long-term health monitoring\n    \n    ### Supported Metric Types:\n    - `blood_pressure`: Systolic, diastolic, pulse readings\n    - `blood_sugar`: Fasting, post-meal glucose levels\n    - `temperature`: Body temperature measurements\n    - `spo2`: Oxygen saturation and pulse rate\n    - `body_data`: Weight, BMI, body composition\n    - `sleep`: Sleep duration and quality metrics\n    - `steps`: Physical activity tracking\n    - `creatinine`: Kidney function markers\n    - `lipid`: Cholesterol and lipid profiles\n    \n    ### Query Parameters:\n    - `metric_type`: Type of medical data to analyze (required)\n    - `days`: Number of days to analyze (default: 30, max: 3650)\n    \n    ### Response Analytics:\n    - `total_readings`: Number of data points analyzed\n    - `date_range`: Time period covered\n    - `statistics`: Statistical analysis per metric\n    - `trends`: Time-series data for visualization\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_patient_medical_trends_api_ava4_medical_history_trends__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "metric_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metric Type"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 3650,
              "minimum": 1,
              "description": "Number of days to analyze",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Medical trends analysis completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalTrendsResponse"
                },
                "example": {
                  "success": true,
                  "message": "Medical trends analysis completed successfully",
                  "data": {
                    "analytics": {
                      "total_readings": 34115,
                      "date_range": {
                        "start": "2022-10-10T11:51:45.234672",
                        "end": "2025-07-06T11:51:45.234672",
                        "days": 1000
                      },
                      "statistics": {
                        "temprature_data": {
                          "count": 34115,
                          "min": 21.6,
                          "max": 44.2,
                          "avg": 36.34,
                          "latest": 36.6,
                          "unit": "¬∞C"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid metric type or parameters"
          },
          "404": {
            "description": "Patient not found"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/medical-history/analytics": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device",
          "Medical History"
        ],
        "summary": "Get System-Wide Medical Analytics",
        "description": "## System-Wide Medical Analytics\n    \n    Get comprehensive analytics and insights across all medical history collections.\n    \n    ### Features:\n    - **System Overview**: Total records, collections, and patients\n    - **Collection Statistics**: Record counts and status per collection\n    - **Data Quality Metrics**: Active vs inactive collections\n    - **Performance Insights**: Top collections by activity\n    - **Real-time Data**: Live system statistics\n    \n    ### Analytics Included:\n    - Total medical records across all collections\n    - Number of patients with medical data\n    - Collection-wise record distribution\n    - Data quality and completeness metrics\n    - Top performing collections\n    \n    ### Response Structure:\n    - `summary`: High-level system statistics\n    - `collections`: Detailed collection analytics\n    - `top_collections`: Most active collections ranked\n    \n    ### Use Cases:\n    - System monitoring and health checks\n    - Data quality assessment\n    - Performance optimization\n    - Resource planning\n    - Compliance reporting\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_medical_history_analytics_api_ava4_medical_history_analytics_get",
        "responses": {
          "200": {
            "description": "System-wide medical analytics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalAnalyticsResponse"
                },
                "example": {
                  "success": true,
                  "message": "Medical history analytics retrieved successfully",
                  "data": {
                    "summary": {
                      "total_collections": 13,
                      "active_collections": 13,
                      "total_medical_records": 56219,
                      "patients_with_medical_data": 246
                    },
                    "collections": {
                      "blood_pressure_histories": {
                        "record_count": 21542,
                        "status": "active",
                        "last_updated": "2024-01-15T10:30:00Z"
                      }
                    },
                    "top_collections": [
                      [
                        "temprature_data_histories",
                        34115
                      ],
                      [
                        "blood_pressure_histories",
                        21542
                      ]
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/medical-history/analytics/{patient_id}": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Get Patient Medical Analytics",
        "description": "Get comprehensive medical analytics for a specific patient",
        "operationId": "get_patient_medical_analytics_api_ava4_medical_history_analytics__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/patients/raw-documents": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device",
          "AVA4 Device",
          "Raw Documents"
        ],
        "summary": "Get Raw Patient Documents (AVA4)",
        "description": "## AVA4 Raw Patient Document Analysis\n    \n    Access complete MongoDB patient documents for AVA4 device integration analysis.\n    \n    ### Features:\n    - **Complete Patient Structure**: All 269 fields per patient document\n    - **AVA4 Device Integration**: Focus on AVA4-related patient fields\n    - **Field Analysis**: Automatic data type detection and statistics\n    - **Sample Values**: Preview of actual field content\n    - **Standard Field Detection**: Identification of core patient fields vs extended data\n    - **Pagination Support**: Handle large document sets efficiently\n    \n    ### Key AVA4 Integration Fields:\n    \n    #### **AVA4 Device Identifiers**:\n    - `ava_mac_address`: Primary AVA4 device MAC address\n    - `ava_box_id`: AVA4 box/gateway identifier\n    - `ava_sim_card`: SIM card information for connectivity\n    - `ava_box_version`: Device firmware/software version\n    \n    #### **Medical Device MAC Addresses**:\n    - `blood_pressure_mac_address`: BP monitor MAC address\n    - `blood_glucose_mac_address`: Glucose meter MAC address\n    - `body_temperature_mac_address`: Temperature sensor MAC address\n    - `fingertip_pulse_oximeter_mac_address`: SPO2 sensor MAC address\n    - `cholesterol_mac_address`: Cholesterol meter MAC address\n    \n    #### **Medical Alert Thresholds for AVA4**:\n    - **Blood Pressure**: `bp_sbp_above`, `bp_sbp_below`, `bp_dbp_above`, `bp_dbp_below`\n    - **Blood Sugar**: `glucose_normal_before`, `glucose_normal_after`\n    - **Temperature**: `temperature_normal_above`, `temperature_normal_below`\n    - **SPO2**: `spo2_normal_above`, `spo2_normal_below`\n    \n    ### Query Parameters:\n    - `limit`: Number of documents to return (1-50, default: 5)\n    - `skip`: Number of documents to skip for pagination\n    - `patient_id`: Filter by specific patient ObjectId\n    - `include_deleted`: Include soft-deleted patients (default: false)\n    \n    ### Response Features:\n    - **Raw Documents**: Complete MongoDB structure preserved\n    - **Field Analysis**: Data type detection and usage statistics per field\n    - **Standard Field Detection**: Identifies core vs extended patient fields\n    - **Sample Values**: Up to 3 sample values per field for preview\n    - **Pagination Info**: Total count and navigation details\n    \n    ### AVA4 Use Cases:\n    - **Device Configuration**: Map patient thresholds to AVA4 alerts\n    - **Patient Device Linking**: Associate patients with AVA4 devices\n    - **Medical Integration**: Understand patient medical data structure\n    - **Alert Setup**: Configure AVA4 medical alerts based on patient data\n    - **Data Migration**: Map existing patient data to AVA4 format\n    \n    ### Standard Patient Fields (29 core fields):\n    `_id`, `first_name`, `last_name`, `nickname`, `gender`, `birth_date`, `id_card`, \n    `phone`, `email`, `address`, `province_code`, `district_code`, `sub_district_code`, \n    `postal_code`, `emergency_contact_name`, `emergency_contact_phone`, \n    `emergency_contact_relationship`, `blood_type`, `height`, `weight`, `bmi`, \n    `watch_mac_address`, `ava_mac_address`, `new_hospital_ids`, `created_at`, \n    `updated_at`, `is_active`, `is_deleted`\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_raw_patient_documents_api_ava4_patients_raw_documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Number of raw documents to return",
              "default": 5,
              "title": "Limit"
            },
            "description": "Number of raw documents to return"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of documents to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of documents to skip"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific patient ID",
              "title": "Patient Id"
            },
            "description": "Filter by specific patient ID"
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include soft-deleted patients",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include soft-deleted patients"
          }
        ],
        "responses": {
          "200": {
            "description": "Raw patient documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "success": true,
                  "message": "Raw patient documents retrieved successfully",
                  "data": {
                    "raw_documents": [
                      {
                        "_id": "620c83a78ae03f05312cb9b5",
                        "first_name": "TEST 001",
                        "last_name": "Patient 1",
                        "phone": "789456789",
                        "ava_mac_address": "AA:BB:CC:DD:EE:FF",
                        "ava_box_id": "AVA4-001",
                        "blood_pressure_mac_address": "11:22:33:44:55:66",
                        "blood_glucose_mac_address": "",
                        "bp_sbp_above": 140,
                        "bp_sbp_below": 90,
                        "bp_dbp_above": 90,
                        "bp_dbp_below": 60,
                        "glucose_normal_before": 100,
                        "glucose_normal_after": 140,
                        "created_at": "2022-02-16T04:55:03.469000",
                        "hospital_data": [],
                        "amy_id": "AMY001"
                      }
                    ],
                    "total_count": 431,
                    "returned_count": 1,
                    "field_analysis": {
                      "_id": {
                        "count": 1,
                        "sample_values": [
                          "620c83a78ae03f05312cb9b5"
                        ],
                        "is_standard_field": true,
                        "data_type": "str"
                      },
                      "ava_mac_address": {
                        "count": 1,
                        "sample_values": [
                          "AA:BB:CC:DD:EE:FF"
                        ],
                        "is_standard_field": true,
                        "data_type": "str"
                      },
                      "bp_sbp_above": {
                        "count": 1,
                        "sample_values": [
                          140
                        ],
                        "is_standard_field": false,
                        "data_type": "int"
                      }
                    },
                    "standard_patient_fields": [
                      "_id",
                      "first_name",
                      "last_name",
                      "ava_mac_address"
                    ],
                    "pagination": {
                      "limit": 5,
                      "skip": 0,
                      "has_more": true
                    },
                    "filters": {
                      "include_deleted": false
                    },
                    "metadata": {
                      "collection": "patients",
                      "query_filter": "{'is_deleted': {'$ne': True}}",
                      "timestamp": "2024-01-15T10:30:00.000000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid patient ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/test-patient-raw": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Test Patient Raw Endpoint",
        "description": "Simple test endpoint for patient raw data",
        "operationId": "test_patient_raw_endpoint_api_ava4_test_patient_raw_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/patients-raw": {
      "get": {
        "tags": [
          "ava4",
          "AVA4 Device"
        ],
        "summary": "Get Raw Patients Simple",
        "description": "Get raw patient documents - simplified version",
        "operationId": "get_raw_patients_simple_api_ava4_patients_raw_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 5,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/kati/data": {
      "post": {
        "tags": [
          "kati",
          "Kati Watch"
        ],
        "summary": "Receive Kati Data",
        "description": "Receive data from Kati Watch",
        "operationId": "receive_kati_data_api_kati_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KatiDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KatiDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/kati/test": {
      "get": {
        "tags": [
          "kati",
          "Kati Watch"
        ],
        "summary": "Test Endpoint",
        "description": "Simple test endpoint",
        "operationId": "test_endpoint_api_kati_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/kati/test-auth": {
      "get": {
        "tags": [
          "kati",
          "Kati Watch"
        ],
        "summary": "Test Auth Endpoint",
        "description": "Test endpoint that requires authentication",
        "operationId": "test_auth_endpoint_api_kati_test_auth_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/kati/devices": {
      "get": {
        "tags": [
          "kati",
          "Kati Watch"
        ],
        "summary": "Get Kati Devices",
        "description": "Get Kati Watch devices",
        "operationId": "get_kati_devices_api_kati_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/kati/devices/{device_id}": {
      "get": {
        "tags": [
          "kati",
          "Kati Watch"
        ],
        "summary": "Get Kati Device",
        "description": "Get specific Kati Watch device",
        "operationId": "get_kati_device_api_kati_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "kati",
          "Kati Watch"
        ],
        "summary": "Delete Kati Device",
        "description": "Soft delete Kati Watch device",
        "operationId": "delete_kati_device_api_kati_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/kati/patient-info": {
      "get": {
        "tags": [
          "kati",
          "Kati Watch"
        ],
        "summary": "Get Patient Info By Imei",
        "description": "Get patient basic information by Kati watch IMEI for device mapping",
        "operationId": "get_patient_info_by_imei_api_kati_patient_info_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "imei",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "description": "Kati watch IMEI",
              "title": "Imei"
            },
            "description": "Kati watch IMEI"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Patient Info By Imei Api Kati Patient Info Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/data": {
      "post": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Receive Qube Vital Data",
        "description": "Receive data from Qube-Vital device",
        "operationId": "receive_qube_vital_data_api_qube_vital_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QubeVitalDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QubeVitalDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/qube-vital/devices": {
      "get": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Get Qube Vital Devices",
        "description": "Get Qube-Vital devices",
        "operationId": "get_qube_vital_devices_api_qube_vital_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Create Qube Vital Device",
        "description": "Create a new Qube-Vital device",
        "operationId": "create_qube_vital_device_api_qube_vital_devices_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QubeVitalDeviceCreate"
              },
              "example": {
                "imei_of_hv01_box": "868334037510868",
                "device_name": "Qube-Vital-ICU-001",
                "model": "HV01-2024",
                "hospital_id": "507f1f77bcf86cd799439012",
                "location": "ICU Room 1",
                "status": "active",
                "is_active": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Qube-Vital device created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Qube-Vital device created successfully",
                  "data": {
                    "device_id": "507f1f77bcf86cd799439015",
                    "imei_of_hv01_box": "868334037510868",
                    "device_name": "Qube-Vital-ICU-001",
                    "model": "HV01-2024",
                    "status": "active"
                  },
                  "request_id": "i9j0k1l2-m3n4-5678-ijkl-901234567890",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "400": {
            "description": "Device with IMEI already exists or invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Hospital not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/devices/table": {
      "get": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Get Qube Vital Devices Table",
        "description": "Get Qube-Vital devices in table format with pagination and filtering",
        "operationId": "get_qube_vital_devices_table_api_qube_vital_devices_table_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "title": "Limit"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hospital Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "columns",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Columns"
            }
          },
          {
            "name": "export_format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Export Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Qube-Vital devices table retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Qube-Vital devices table retrieved successfully",
                  "data": {
                    "table": {
                      "data": [
                        {
                          "device_id": "507f1f77bcf86cd799439015",
                          "device_name": "Qube-Vital-ICU-001",
                          "imei_of_hv01_box": "868334037510868",
                          "model": "HV01-2024",
                          "status": "active",
                          "hospital_info": {
                            "hospital_id": "507f1f77bcf86cd799439012",
                            "hospital_name": "Bangkok General Hospital",
                            "location": "Bangkok"
                          }
                        }
                      ],
                      "columns": ["device_name", "imei_of_hv01_box", "model", "status", "hospital_info"],
                      "available_columns": ["device_id", "device_name", "imei_of_hv01_box", "model", "hospital_info", "location", "status", "is_active", "created_at", "updated_at"]
                    },
                    "pagination": {
                      "page": 1,
                      "limit": 25,
                      "total": 42,
                      "total_pages": 2,
                      "has_next": true,
                      "has_prev": false
                    }
                  },
                  "request_id": "j0k1l2m3-n4o5-6789-jklm-012345678901",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/devices/{device_id}": {
      "get": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Get Qube Vital Device",
        "description": "Get specific Qube-Vital device",
        "operationId": "get_qube_vital_device_api_qube_vital_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Update Qube Vital Device",
        "description": "Update an existing Qube-Vital device",
        "operationId": "update_qube_vital_device_api_qube_vital_devices__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QubeVitalDeviceUpdate"
              },
              "example": {
                "device_name": "Updated Qube-Vital Device",
                "location": "ICU Room 2 - Updated",
                "status": "maintenance",
                "is_active": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Qube-Vital device updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Qube-Vital device updated successfully",
                  "data": {
                    "device_id": "507f1f77bcf86cd799439015",
                    "device_name": "Updated Qube-Vital Device",
                    "location": "ICU Room 2 - Updated",
                    "status": "maintenance",
                    "is_active": false,
                    "updated_at": "2025-07-07T07:08:07.633870Z"
                  },
                  "request_id": "k1l2m3n4-o5p6-7890-klmn-123456789012",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "400": {
            "description": "No changes provided or invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Device not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Delete Qube Vital Device",
        "description": "Delete (soft delete) a Qube-Vital device",
        "operationId": "delete_qube_vital_device_api_qube_vital_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/devices/{device_id}/hospital": {
      "put": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Assign Device To Hospital",
        "description": "Assign a Qube-Vital device to a hospital",
        "operationId": "assign_device_to_hospital_api_qube_vital_devices__device_id__hospital_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hospital Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/analytics/hospitals": {
      "get": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Get Hospital Analytics",
        "description": "Get hospital analytics for Qube-Vital devices",
        "operationId": "get_hospital_analytics_api_qube_vital_analytics_hospitals_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/qube-vital/hospital-info": {
      "get": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Get Hospital Info By Device",
        "description": "Get hospital information by Qube-Vital device IMEI for hospital mapping",
        "operationId": "get_hospital_info_by_device_api_qube_vital_hospital_info_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "imei",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Imei"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/hospitals/{hospital_id}/devices": {
      "get": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Get Hospital Devices",
        "description": "Get all Qube-Vital devices assigned to a specific hospital",
        "operationId": "get_hospital_devices_api_qube_vital_hospitals__hospital_id__devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hospital Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/hospitals": {
      "get": {
        "tags": [
          "qube-vital",
          "Qube-Vital"
        ],
        "summary": "Get Hospitals With Devices",
        "description": "Get hospitals with their Qube-Vital device counts",
        "operationId": "get_hospitals_with_devices_api_qube_vital_hospitals_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "include_device_count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Device Count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/patients/{patient_id}/medical-devices": {
      "get": {
        "tags": [
          "patient-devices",
          "Patient Medical Devices"
        ],
        "summary": "Get Patient Medical Devices",
        "description": "Get all medical devices registered to a specific patient",
        "operationId": "get_patient_medical_devices_api_patients__patient_id__medical_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "include_device_info",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Device Info"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient medical devices retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Patient medical devices retrieved successfully",
                  "data": {
                    "patient_id": "622035a5fd26d7b6d9b7730c",
                    "registered_devices": [
                      {
                        "device_type": "bps",
                        "device_name": "Blood Pressure Monitor",
                        "mac_address": "AA:BB:CC:DD:EE:FF"
                      },
                      {
                        "device_type": "gluc",
                        "device_name": "Glucose Meter",
                        "mac_address": "11:22:33:44:55:66"
                      }
                    ],
                    "device_count": 2,
                    "patient_info": {
                      "name": "John Doe",
                      "hn": "HN001234",
                      "phone": "+66-XXX-XXX-XXXX"
                    }
                  },
                  "request_id": "f6g7h8i9-j0k1-2345-fghi-678901234567",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "patient-devices",
          "Patient Medical Devices"
        ],
        "summary": "Register Patient Medical Devices",
        "description": "Register medical devices to a patient (create new registry)",
        "operationId": "register_patient_medical_devices_api_patients__patient_id__medical_devices_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientDeviceRegistry"
              },
              "example": {
                "user_id": "67208370e6938c0337c6da09",
                "group": "ICU-Ward-A",
                "mac_bps": "AA:BB:CC:DD:EE:FF",
                "mac_gluc": "11:22:33:44:55:66",
                "mac_gw": "FF:EE:DD:CC:BB:AA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient medical device registry created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Registry already exists or MAC address conflicts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "patient-devices",
          "Patient Medical Devices"
        ],
        "summary": "Update Patient Medical Devices",
        "description": "Update medical devices registry for a patient",
        "operationId": "update_patient_medical_devices_api_patients__patient_id__medical_devices_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientDeviceRegistryUpdate"
              },
              "example": {
                "mac_bps": "AA:BB:CC:DD:EE:00",
                "mac_chol": "22:33:44:55:66:77"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient medical device registry updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "MAC address conflicts or no changes provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Patient or registry not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/patients/{patient_id}/medical-devices/{device_type}": {
      "delete": {
        "tags": [
          "patient-devices",
          "Patient Medical Devices"
        ],
        "summary": "Unregister Patient Device",
        "description": "Unregister a specific device type from a patient",
        "operationId": "unregister_patient_device_api_patients__patient_id__medical_devices__device_type__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "device_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type",
              "enum": ["gateway", "bps", "body_temp", "watch", "oxymeter", "weight", "gluc", "chol", "ua", "dusun_bps", "mgss_oxymeter", "salt_meter"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Device unregistered successfully from patient",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid device type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Patient, registry, or device not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/patients/medical-devices/table": {
      "get": {
        "tags": [
          "patient-devices",
          "Patient Medical Devices"
        ],
        "summary": "Get Patient Devices Table",
        "description": "Get patient medical device registries in table format",
        "operationId": "get_patient_devices_table_api_patients_medical_devices_table_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "columns",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Columns"
            }
          },
          {
            "name": "export_format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Export Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient medical device registries table retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Patient medical device registries table retrieved successfully",
                  "data": {
                    "table": {
                      "data": [
                        {
                          "patient_info": {
                            "patient_id": "622035a5fd26d7b6d9b7730c",
                            "name": "John Doe",
                            "hn": "HN001234"
                          },
                          "device_count": 3,
                          "registered_devices": [
                            {
                              "device_type": "bps",
                              "device_name": "Blood Pressure Monitor",
                              "mac_address": "AA:BB:CC:DD:EE:FF"
                            }
                          ]
                        }
                      ],
                      "columns": ["patient_info", "device_count", "registered_devices"],
                      "available_columns": ["patient_info", "registry_id", "device_count", "registered_devices", "healthcare_provider", "group", "created_at", "updated_at"]
                    },
                    "pagination": {
                      "page": 1,
                      "limit": 25,
                      "total": 150,
                      "total_pages": 6,
                      "has_next": true,
                      "has_prev": false
                    }
                  },
                  "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/medical-devices/patient/{mac_address}": {
      "get": {
        "tags": [
          "device-lookup",
          "Medical Device Lookup"
        ],
        "summary": "Find Patient By Device Mac",
        "description": "Find which patient a medical device belongs to by MAC address",
        "operationId": "find_patient_by_device_mac_api_medical_devices_patient__mac_address__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mac_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          },
          {
            "name": "include_patient_info",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Patient Info"
            }
          },
          {
            "name": "include_device_details",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Device Details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient found by medical device MAC address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Patient found by medical device MAC address",
                  "data": {
                    "mac_address": "aa:bb:cc:dd:ee:ff",
                    "device_type": "bps",
                    "device_name": "Blood Pressure Monitor",
                    "patient_info": {
                      "patient_id": "622035a5fd26d7b6d9b7730c",
                      "name": "John Doe",
                      "hn": "HN001234",
                      "phone": "+66-XXX-XXX-XXXX",
                      "is_active": true
                    },
                    "healthcare_provider": {
                      "user_id": "67208370e6938c0337c6da09",
                      "username": "dr.smith",
                      "name": "Dr. Smith"
                    }
                  },
                  "request_id": "h8i9j0k1-l2m3-4567-hijk-890123456789",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid MAC address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Device not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/patients": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Patients",
        "description": "Get patients with filtering and pagination",
        "operationId": "get_patients_admin_patients_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hospital Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patients retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Patients retrieved successfully",
                  "data": {
                    "patients": [
                      {
                        "_id": "507f1f77bcf86cd799439011",
                        "first_name": "John",
                        "last_name": "Doe",
                        "gender": "male",
                        "birth_date": "1990-01-15",
                        "phone": "+66-XXX-XXX-XXXX",
                        "hospital_id": "507f1f77bcf86cd799439012"
                      }
                    ],
                    "total": 431,
                    "limit": 100,
                    "skip": 0
                  },
                  "request_id": "e5f6g7h8-i9j0-1234-efgh-567890123456",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Authentication required"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error_count": 1,
                  "errors": [
                    {
                      "error_code": "INTERNAL_SERVER_ERROR",
                      "error_type": "system_error",
                      "message": "Failed to retrieve patients: Database connection error",
                      "suggestion": "Please try again later or contact support if the issue persists"
                    }
                  ],
                  "request_id": "f6g7h8i9-j0k1-2345-fghi-678901234567",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Create Patient",
        "description": "Create new patient",
        "operationId": "create_patient_admin_patients_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Patient Admin Patients Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/patients/search": {
      "post": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Search Patients Post",
        "description": "Search patients using POST request (better for Thai characters)",
        "operationId": "search_patients_post_admin_patients_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Search Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/patients/{patient_id}": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Patient",
        "description": "Get specific patient",
        "operationId": "get_patient_admin_patients__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Patient Admin Patients  Patient Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Update Patient",
        "description": "Update patient",
        "operationId": "update_patient_admin_patients__patient_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Patient Admin Patients  Patient Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Delete Patient",
        "description": "Soft delete patient",
        "operationId": "delete_patient_admin_patients__patient_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Patient Admin Patients  Patient Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/test-raw-endpoint": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Test Raw Endpoint",
        "description": "Simple test endpoint",
        "operationId": "test_raw_endpoint_admin_test_raw_endpoint_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/patients-raw-documents": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel",
          "Admin Panel",
          "Raw Documents"
        ],
        "summary": "Get Raw Patient Documents",
        "description": "## Raw Patient Document Analysis\n    \n    Access complete MongoDB patient documents without serialization for analysis and debugging.\n    \n    ### Features:\n    - **Complete Raw Structure**: All 269 fields per patient document\n    - **Field Analysis**: Automatic data type detection and statistics\n    - **Sample Values**: Preview of actual field content\n    - **ObjectId Mapping**: MongoDB relationship identification\n    - **Pagination Support**: Handle large document sets efficiently\n    - **Filtering Options**: Patient ID and deletion status filters\n    \n    ### Document Structure (269 Fields):\n    \n    #### **Core Demographics** (15 fields):\n    - `first_name`, `last_name`, `gender`, `birth_date`\n    - `id_card`, `phone`, `email`, `nickname`\n    - `address_1`, `address_2`, `province_code`, `district_code`\n    \n    #### **Medical Device MAC Addresses** (12 fields):\n    - `ava_mac_address`, `watch_mac_address`\n    - `blood_pressure_mac_address`, `blood_glucose_mac_address`\n    - `body_temperature_mac_address`, `fingertip_pulse_oximeter_mac_address`\n    - `cholesterol_mac_address`\n    \n    #### **Medical Alert Thresholds** (24 fields):\n    - Blood Pressure: `bp_sbp_above`, `bp_sbp_below`, `bp_dbp_above`, `bp_dbp_below`\n    - Blood Sugar: `glucose_normal_before`, `glucose_normal_after`\n    - Temperature: `temperature_normal_above`, `temperature_normal_below`\n    - SPO2: `spo2_normal_above`, `spo2_normal_below`\n    - Cholesterol: `cholesterol_above`, `cholesterol_below`\n    \n    #### **Medical History Integration** (50+ fields):\n    - Import dates: `blood_preassure_import_date`, `cretinines_import_date`\n    - Sources: `blood_preassure_source`, `blood_sugar_source`\n    - Symptoms: `blood_sugar_symptoms`, `blood_sugar_other_symptoms`\n    - Lab results: `bmi`, `cholesterol`, `bun`, `creatinine`\n    \n    #### **Hospital & Location Data** (10 fields):\n    - `hospital_data`, `new_hospital_ids`\n    - `admit_at`, `admit_status`, `date_of_visit`\n    \n    #### **Audit & Tracking** (8 fields):\n    - `created_at`, `updated_at`, `deleted_at`\n    - `is_active`, `is_deleted`, `deleted_by`\n    \n    ### Query Parameters:\n    - `limit`: Number of documents to return (1-50, default: 5)\n    - `skip`: Number of documents to skip for pagination\n    - `patient_id`: Filter by specific patient ObjectId\n    - `include_deleted`: Include soft-deleted patients (default: false)\n    \n    ### Response Features:\n    - **Raw Documents**: Complete MongoDB structure preserved\n    - **Field Analysis**: Data type detection and usage statistics\n    - **Sample Values**: Up to 3 sample values per field\n    - **ObjectId Detection**: Automatic relationship mapping\n    - **Pagination Info**: Total count and navigation details\n    \n    ### Use Cases:\n    - **Database Analysis**: Understand complete patient data structure\n    - **Integration Planning**: Map fields for external system integration\n    - **Data Migration**: Analyze field usage and data types\n    - **Debugging**: Inspect raw MongoDB documents\n    - **API Development**: Understand available patient fields\n    \n    ### Authentication:\n    Requires valid JWT Bearer token with admin privileges.",
        "operationId": "get_raw_patient_documents_admin_patients_raw_documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Number of raw documents to return",
              "default": 5,
              "title": "Limit"
            },
            "description": "Number of raw documents to return"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of documents to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of documents to skip"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific patient ID",
              "title": "Patient Id"
            },
            "description": "Filter by specific patient ID"
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include soft-deleted patients",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include soft-deleted patients"
          }
        ],
        "responses": {
          "200": {
            "description": "Raw patient documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "success": true,
                  "message": "Raw patient documents retrieved successfully",
                  "data": {
                    "raw_documents": [
                      {
                        "_id": {
                          "$oid": "620c83a78ae03f05312cb9b5"
                        },
                        "first_name": "TEST 001",
                        "last_name": "Patient 1",
                        "phone": "789456789",
                        "ava_mac_address": "",
                        "blood_pressure_mac_address": "",
                        "bp_sbp_above": 0,
                        "bp_sbp_below": 0,
                        "created_at": {
                          "$date": "2022-02-16T04:55:03.469000"
                        },
                        "hospital_data": [],
                        "amy_id": ""
                      }
                    ],
                    "total_count": 431,
                    "returned_count": 1,
                    "field_analysis": {
                      "_id": {
                        "count": 1,
                        "data_types": [
                          "ObjectId"
                        ],
                        "sample_values": [
                          "620c83a78ae03f05312cb9b5"
                        ],
                        "is_object_id": true
                      },
                      "first_name": {
                        "count": 1,
                        "data_types": [
                          "str"
                        ],
                        "sample_values": [
                          "TEST 001"
                        ],
                        "is_object_id": false
                      },
                      "bp_sbp_above": {
                        "count": 1,
                        "data_types": [
                          "int"
                        ],
                        "sample_values": [
                          0
                        ],
                        "is_object_id": false
                      }
                    },
                    "pagination": {
                      "limit": 5,
                      "skip": 0,
                      "has_more": true
                    },
                    "filters": {
                      "include_deleted": false
                    },
                    "metadata": {
                      "collection": "patients",
                      "query_filter": "{'is_deleted': {'$ne': True}}",
                      "timestamp": "2024-01-15T10:30:00.000000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid patient ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/devices": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Devices",
        "description": "Get devices by type",
        "operationId": "get_devices_admin_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Devices Admin Devices Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin-crud",
          "Admin Panel CRUD"
        ],
        "summary": "Admin Create Device",
        "description": "Create new device",
        "operationId": "admin_create_device_admin_devices_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routes__admin_crud__DeviceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/devices/{device_id}": {
      "get": {
        "tags": [
          "admin-crud",
          "Admin Panel CRUD"
        ],
        "summary": "Admin Get Device",
        "description": "Get specific device by ID",
        "operationId": "admin_get_device_admin_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin-crud",
          "Admin Panel CRUD"
        ],
        "summary": "Admin Update Device",
        "description": "Update device",
        "operationId": "admin_update_device_admin_devices__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routes__admin_crud__DeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin-crud",
          "Admin Panel CRUD"
        ],
        "summary": "Admin Delete Device",
        "description": "Soft delete device",
        "operationId": "admin_delete_device_admin_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history/{history_type}": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Medical History",
        "description": "Get medical history by type",
        "operationId": "get_medical_history_admin_medical_history__history_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Medical History Admin Medical History  History Type  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/master-data/{data_type}": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Master Data by Type",
        "description": "## Master Data Management\n\nGet master data by type with comprehensive examples and multilingual support.\n\n### Supported Data Types:\n\n#### ü©∏ **Blood Groups** (`blood_groups`)\n- **12 Blood Types**: Complete blood group system with Rh factors\n- **Multilingual**: English and Thai names\n- **Examples**: AB:Rh-, O:Rh+, A:Rh-, B:Rh+, etc.\n- **Usage**: Patient blood type classification\n\n#### üåç **Nations** (`nations`) \n- **229 Countries**: Complete country list\n- **Multilingual**: English and Thai names\n- **Examples**: Thailand, Argentina, United States, etc.\n- **Usage**: Patient nationality classification\n\n#### üé® **Human Skin Colors** (`human_skin_colors`)\n- **6 Skin Types**: Complete skin color classification\n- **Multilingual**: English and Thai names  \n- **Examples**: BLACK, Dark Brown, Light Brown, etc.\n- **Usage**: Patient skin color classification\n\n#### üè• **Hospital Wards** (`ward_lists`)\n- **9 Ward Types**: Complete hospital ward classification\n- **Multilingual**: English and Thai names\n- **Examples**: ER, OPD, IPD, Home Ward, SLEEP LAB, KATI, R&D, etc.\n- **Usage**: Patient ward classification and hospital department management\n\n#### üë• **Staff Types** (`staff_types`)\n- **6 Staff Types**: Complete hospital personnel classification\n- **Multilingual**: English and Thai names\n- **Examples**: Doctor, Nurse, Hospital Staff, Medical Staff, Village Health Volunteer, Ambulance Operation Staff\n- **Usage**: Hospital personnel classification and access control\n\n#### üè• **Underlying Diseases** (`underlying_diseases`)\n- **8 Disease Types**: Complete underlying disease classification\n- **Multilingual**: English and Thai names\n- **Examples**: Hypertension, Diabetes Mellitus, Dyslipidemia, Cardiovascular Disease, Stroke, Chronic Kidney Disease\n- **Usage**: Patient medical history and disease tracking\n\n#### üè• **Hospitals** (`hospitals`)\n- **12,350+ Hospitals**: Complete hospital database\n- **Enhanced Address**: Detailed location information\n- **Contact Info**: Phone, email, website\n- **Services**: Bed capacity, emergency services\n\n#### üó∫Ô∏è **Geographic Data**\n- **Provinces** (`provinces`): 79 provinces\n- **Districts** (`districts`): Administrative districts  \n- **Sub-districts** (`sub_districts`): Administrative sub-districts\n\n### Query Parameters:\n- `limit`: Number of records (1-1000, default: 100)\n- `skip`: Pagination offset (default: 0)\n- `search`: Search across data fields\n- `province_code`: Filter by province code (for geographic data)\n- `district_code`: Filter by district code (for geographic data)\n\n### Response Features:\n- **Multilingual Support**: All data includes English and Thai names\n- **Pagination**: Efficient data loading with limit/skip\n- **Search**: Full-text search across all fields\n- **Filtering**: Geographic and status-based filtering\n- **CRUD Operations**: Complete Create, Read, Update, Delete support\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "get_master_data_admin_master_data__data_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "province_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Province Code"
            }
          },
          {
            "name": "district_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "District Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Master data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "examples": {
                  "hospitals_response": {
                    "summary": "Hospital data with enhanced address information",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "507f1f77bcf86cd799439011",
                            "name": [
                              {
                                "code": "en",
                                "name": "Bangkok General Hospital"
                              },
                              {
                                "code": "th",
                                "name": "‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û"
                              }
                            ],
                            "en_name": "Bangkok General Hospital",
                            "province_code": 10,
                            "district_code": 1003,
                            "sub_district_code": 100301,
                            "organizecode": 1001,
                            "hospital_area_code": "10330",
                            "is_active": true,
                            "is_deleted": false,
                            "address": "123 Rama IV Road, Pathum Wan, Bangkok 10330",
                            "address_details": {
                              "street_address": "123 Rama IV Road",
                              "building_name": "Medical Center Tower",
                              "floor": "Ground Floor - 15th Floor",
                              "room": "Reception: Room 101",
                              "postal_code": "10330",
                              "postal_box": "P.O. Box 1234"
                            },
                            "location": {
                              "latitude": 13.7563,
                              "longitude": 100.5018,
                              "elevation": 2.5,
                              "precision": "GPS"
                            },
                            "contact": {
                              "phone": "+66-2-123-4567",
                              "phone_2": "+66-2-123-4568",
                              "fax": "+66-2-123-4569",
                              "mobile": "+66-81-123-4567",
                              "emergency_phone": "+66-2-123-1911",
                              "email": "info@bgh.co.th",
                              "email_admin": "admin@bgh.co.th",
                              "website": "https://www.bgh.co.th"
                            },
                            "services": {
                              "bed_capacity": 500,
                              "emergency_services": true,
                              "trauma_center": true,
                              "icu_beds": 50,
                              "operating_rooms": 15,
                              "service_plan_type": "A",
                              "accreditation": "JCI"
                            },
                            "phone": "+66-2-123-4567",
                            "email": "info@bgh.co.th",
                            "website": "https://www.bgh.co.th",
                            "bed_capacity": 500,
                            "service_plan_type": "A",
                            "image_url": "https://cdn.bgh.co.th/logo.png",
                            "auto_login_liff_id": "1234567890-abcdefgh",
                            "disconnect_liff_id": "1234567890-ijklmnop",
                            "login_liff_id": "1234567890-qrstuvwx",
                            "mac_hv01_box": "AA:BB:CC:DD:EE:FF",
                            "notifyToken": "LINE_NOTIFY_TOKEN_123",
                            "is_acknowledge": true,
                            "is_admit_discard": true,
                            "is_body_data": true,
                            "is_lab_data": true,
                            "is_status_change": true,
                            "created_at": "2024-01-15T08:00:00.000Z",
                            "updated_at": "2024-01-15T10:30:00.000Z",
                            "__v": 2
                          }
                        ],
                        "total": 12350,
                        "data_type": "hospitals",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-01-15T10:30:00.000Z"
                    }
                  },
                  "provinces_response": {
                    "summary": "Province data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "507f1f77bcf86cd799439011",
                            "code": 10,
                            "name": [
                              {
                                "code": "en",
                                "name": "Bangkok"
                              },
                              {
                                "code": "th",
                                "name": "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£"
                              }
                            ],
                            "en_name": "Bangkok",
                            "is_active": true,
                            "is_deleted": false
                          }
                        ],
                        "total": 79,
                        "data_type": "provinces"
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-01-15T10:30:00.000Z"
                    }
                  },
                  "blood_groups_response": {
                    "summary": "Blood groups master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "61f7e7ca3036bd2d8f4bb958",
                            "name": [
                              {
                                "code": "en",
                                "name": "AB : Rh-"
                              },
                              {
                                "code": "th",
                                "name": "‡πÄ‡∏≠‡∏ö‡∏µ : ‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏≠‡∏ä ‡∏•‡∏ö"
                              }
                            ],
                            "en_name": "AB : Rh-",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-01-31T13:44:42.283Z",
                            "updated_at": "2022-01-31T13:44:42.283Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "61f7e7ca3036bd2d8f4bb959",
                            "name": [
                              {
                                "code": "en",
                                "name": "O : Rh+"
                              },
                              {
                                "code": "th",
                                "name": "‡πÇ‡∏≠ : ‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏≠‡∏ä ‡∏ö‡∏ß‡∏Å"
                              }
                            ],
                            "en_name": "O : Rh+",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-01-31T13:44:42.283Z",
                            "updated_at": "2022-01-31T13:44:42.283Z",
                            "unique_id": 2,
                            "__v": 0
                          }
                        ],
                        "total": 12,
                        "data_type": "blood_groups",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-07-07T18:51:48.000Z"
                    }
                  },
                  "human_skin_colors_response": {
                    "summary": "Human skin colors master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "61f7e6f73036bd2d8f4bb952",
                            "name": [
                              {
                                "code": "en",
                                "name": "BLACK"
                              },
                              {
                                "code": "th",
                                "name": "‡∏î‡∏≥"
                              }
                            ],
                            "en_name": "BLACK",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-01-31T13:41:11.223Z",
                            "updated_at": "2022-01-31T13:41:11.223Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "61f7e6f73036bd2d8f4bb953",
                            "name": [
                              {
                                "code": "en",
                                "name": "Dark Brown"
                              },
                              {
                                "code": "th",
                                "name": "‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÄ‡∏Ç‡πâ‡∏°"
                              }
                            ],
                            "en_name": "Dark Brown",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-01-31T13:41:11.223Z",
                            "updated_at": "2022-01-31T13:41:11.223Z",
                            "unique_id": 2,
                            "__v": 0
                          }
                        ],
                        "total": 6,
                        "data_type": "human_skin_colors",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-07-07T18:51:48.000Z"
                    }
                  },
                  "nations_response": {
                    "summary": "Nations/countries master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "61f8b5f33036bd2d8f4bb970",
                            "name": [
                              {
                                "code": "en",
                                "name": "Argentina"
                              },
                              {
                                "code": "th",
                                "name": "‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏à‡∏ô‡∏ï‡∏¥‡∏ô‡∏≤"
                              }
                            ],
                            "en_name": "Argentina",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-02-01T04:24:19.685Z",
                            "updated_at": "2024-05-07T10:22:17.982Z",
                            "unique_id": 2,
                            "__v": 1
                          },
                          {
                            "_id": "61f8b5f33036bd2d8f4bb971",
                            "name": [
                              {
                                "code": "en",
                                "name": "Thailand"
                              },
                              {
                                "code": "th",
                                "name": "‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢"
                              }
                            ],
                            "en_name": "Thailand",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-02-01T04:24:19.685Z",
                            "updated_at": "2024-05-07T10:22:17.982Z",
                            "unique_id": 3,
                            "__v": 1
                          }
                        ],
                        "total": 229,
                        "data_type": "nations",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-07-07T18:51:48.000Z"
                    }
                  },
                  "staff_types_response": {
                    "summary": "Staff types master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "663220b2a9e900f9ded0a62f",
                            "name": [
                              {
                                "code": "en",
                                "name": "Doctor"
                              },
                              {
                                "code": "th",
                                "name": "‡πÅ‡∏û‡∏ó‡∏¢‡πå"
                              }
                            ],
                            "en_name": "Doctor",
                            "is_active": true,
                            "is_deleted": false,
                            "is_this_userform_user": false,
                            "created_at": "2024-05-01T11:00:02.415Z",
                            "updated_at": "2024-05-06T10:21:53.354Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "663220baa9e900f9ded0a632",
                            "name": [
                              {
                                "code": "en",
                                "name": "Nurse"
                              },
                              {
                                "code": "th",
                                "name": "‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"
                              }
                            ],
                            "en_name": "Nurse",
                            "is_active": true,
                            "is_deleted": false,
                            "is_this_userform_user": false,
                            "created_at": "2024-05-01T11:00:10.523Z",
                            "updated_at": "2024-05-06T10:22:01.705Z",
                            "unique_id": 2,
                            "__v": 0
                          },
                          {
                            "_id": "66b9b9f9a144233da399c75e",
                            "name": [
                              {
                                "code": "en",
                                "name": "Ambulance Operation Staff"
                              },
                              {
                                "code": "th",
                                "name": "‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏é‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"
                              }
                            ],
                            "en_name": "Ambulance Operation Staff",
                            "is_active": true,
                            "is_deleted": false,
                            "is_this_userform_user": true,
                            "created_at": "2024-08-12T07:30:01.617Z",
                            "updated_at": "2024-08-12T08:22:02.897Z",
                            "unique_id": 6,
                            "__v": 0
                          }
                        ],
                        "total": 6,
                        "data_type": "staff_types",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "h8i9j0k1-l2m3-4567-hijk-890123456789",
                      "timestamp": "2025-07-07T19:00:00.000Z"
                    }
                  },
                  "underlying_diseases_response": {
                    "summary": "Underlying diseases master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "6638b07a09ecee510e15924d",
                            "name": [
                              {
                                "code": "en",
                                "name": "Hypertension"
                              },
                              {
                                "code": "th",
                                "name": "Hypertension"
                              }
                            ],
                            "en_name": "Hypertension",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-05-06T10:27:06.626Z",
                            "updated_at": "2024-05-06T10:27:11.098Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "6638b09409ecee510e159281",
                            "name": [
                              {
                                "code": "en",
                                "name": "Diabetes Mellitus"
                              },
                              {
                                "code": "th",
                                "name": "Diabetes mellitus"
                              }
                            ],
                            "en_name": "Diabetes Mellitus",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-05-06T10:27:32.331Z",
                            "updated_at": "2024-05-08T14:42:54.113Z",
                            "unique_id": 2,
                            "__v": 0
                          },
                          {
                            "_id": "663b8f25db28c22e32c70c4c",
                            "name": [
                              {
                                "code": "en",
                                "name": "Chronic Kidney Disease"
                              },
                              {
                                "code": "th",
                                "name": "‡πÑ‡∏ï‡∏ß‡∏≤‡∏¢‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á"
                              }
                            ],
                            "en_name": "Chronic Kidney Disease",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-05-08T14:41:41.487Z",
                            "updated_at": "2024-05-08T14:43:14.498Z",
                            "unique_id": 6,
                            "__v": 0
                          }
                        ],
                        "total": 8,
                        "data_type": "underlying_diseases",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "i9j0k1l2-m3n4-5678-ijkl-901234567890",
                      "timestamp": "2025-07-07T19:00:00.000Z"
                    }
                  },
                  "ward_lists_response": {
                    "summary": "Hospital ward lists master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "667c12928cbee167c0a48b6f",
                            "name": [
                              {
                                "code": "en",
                                "name": "ER"
                              },
                              {
                                "code": "th",
                                "name": "‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"
                              }
                            ],
                            "en_name": "ER",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-06-26T13:07:30.355Z",
                            "updated_at": "2025-01-15T13:47:45.279Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "667c12a38cbee167c0a48ba2",
                            "name": [
                              {
                                "code": "en",
                                "name": "OPD"
                              },
                              {
                                "code": "th",
                                "name": "‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏≠‡∏Å"
                              }
                            ],
                            "en_name": "OPD",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-06-26T13:07:47.248Z",
                            "updated_at": "2024-06-26T13:07:47.248Z",
                            "unique_id": 2,
                            "__v": 0
                          },
                          {
                            "_id": "668dfd03793e2577beebbf5d",
                            "name": [
                              {
                                "code": "en",
                                "name": "Home Ward"
                              },
                              {
                                "code": "th",
                                "name": "‡∏î‡∏π‡πÅ‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏ô"
                              }
                            ],
                            "en_name": "Home Ward",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-07-10T03:16:19.542Z",
                            "updated_at": "2024-07-10T03:16:19.542Z",
                            "unique_id": 4,
                            "__v": 0
                          }
                        ],
                        "total": 9,
                        "data_type": "ward_lists",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "j0k1l2m3-n4o5-6789-jklm-012345678901",
                      "timestamp": "2025-07-07T19:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data type",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error_count": 1,
                  "errors": [
                    {
                      "error_code": "INVALID_DATA_TYPE",
                      "error_type": "validation_error",
                      "message": "Invalid data type. Supported types: provinces, districts, sub_districts, hospitals, hospital_types, blood_groups, human_skin_colors, nations, ward_lists, staff_types, underlying_diseases",
                      "field": "data_type",
                      "value": "invalid_type",
                      "suggestion": "Please use one of the supported data types"
                    }
                  ],
                  "request_id": "h8i9j0k1-l2m3-4567-hijk-890123456789",
                  "timestamp": "2025-01-15T10:30:00.000Z"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Create Master Data Record",
        "description": "## Create Master Data Record\n\nCreate a new master data record for the specified data type.\n\n### Supported Data Types:\n- `blood_groups`, `nations`, `human_skin_colors`, `ward_lists`, `staff_types`, `underlying_diseases`\n\n### Request Body:\n```json\n{\n  \"name\": [\n    {\"code\": \"en\", \"name\": \"English Name\"},\n    {\"code\": \"th\", \"name\": \"Thai Name\"}\n  ],\n  \"en_name\": \"English Name\",\n  \"is_active\": true,\n  \"additional_fields\": {}\n}\n```\n\n### Features:\n- **Multilingual Support**: English and Thai names\n- **Validation**: Automatic field validation\n- **Audit Trail**: Automatic timestamps and user tracking\n- **Soft Delete**: Records are soft-deleted by default\n- **Unique Constraints**: Prevents duplicate entries\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "create_master_data_admin_master_data__data_type__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterDataCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Master data record created successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Master data record created successfully",
                  "data": {
                    "_id": "663220b2a9e900f9ded0a62f",
                    "name": [
                      {
                        "code": "en",
                        "name": "New Staff Type"
                      },
                      {
                        "code": "th",
                        "name": "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà"
                      }
                    ],
                    "en_name": "New Staff Type",
                    "is_active": true,
                    "is_deleted": false,
                    "created_at": "2024-05-01T11:00:02.415Z",
                    "updated_at": "2024-05-01T11:00:02.415Z",
                    "unique_id": 7,
                    "__v": 0
                  },
                  "request_id": "k1l2m3n4-o5p6-7890-klmn-123456789012",
                  "timestamp": "2025-07-07T19:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or invalid data type",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error_count": 1,
                  "errors": [
                    {
                      "error_code": "VALIDATION_ERROR",
                      "error_type": "validation_error",
                      "message": "Name is required for master data creation",
                      "field": "name",
                      "suggestion": "Please provide a valid name with English and Thai translations"
                    }
                  ],
                  "request_id": "l2m3n4o5-p6q7-8901-lmno-234567890123",
                  "timestamp": "2025-07-07T19:00:00.000Z"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hospital-users": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Hospital Users",
        "description": "Get hospital users with filtering and pagination",
        "operationId": "get_hospital_users_admin_hospital_users_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hospital Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hospital users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Hospital users retrieved successfully",
                  "data": {
                    "users": [
                      {
                        "_id": "6638a496f7ce6d32b68120f1",
                        "email": "kitkamon@tely360.com",
                        "first_name": "Kitkamon",
                        "last_name": "Maitree",
                        "user_title": "Mr.",
                        "phone": "813618766",
                        "country_phone_code": "+66",
                        "country_code": "Th",
                        "country_name": "Thailand",
                        "hospital_id": "6814838ae1b89fa275c66868",
                        "type": "663220b2a9e900f9ded0a62f",
                        "image_url": "user_profiles/6638bc8209ecee510e15a28844XQ.jpg",
                        "is_active": true,
                        "is_deleted": false,
                        "created_at": "2024-05-06T11:18:26.717Z",
                        "updated_at": "2025-06-24T02:37:38.939Z",
                        "unique_id": 2
                      }
                    ],
                    "total": 72,
                    "limit": 100,
                    "skip": 0,
                    "has_next": false,
                    "has_prev": false
                  },
                  "request_id": "h9i0j1k2-l3m4-5678-ijkl-901234567890",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Create Hospital User",
        "description": "Create a new hospital user",
        "operationId": "create_hospital_user_admin_hospital_users_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HospitalUserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hospital-users/{user_id}": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Hospital User",
        "description": "Get a specific hospital user by ID",
        "operationId": "get_hospital_user_admin_hospital_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Update Hospital User",
        "description": "Update a hospital user",
        "operationId": "update_hospital_user_admin_hospital_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HospitalUserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Delete Hospital User",
        "description": "Soft delete a hospital user",
        "operationId": "delete_hospital_user_admin_hospital_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hospital-users/search": {
      "post": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Search Hospital Users",
        "description": "Advanced search for hospital users",
        "operationId": "search_hospital_users_admin_hospital_users_search_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HospitalUserSearchQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hospital-users/stats/summary": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Hospital Users Stats",
        "description": "Get hospital users statistics",
        "operationId": "get_hospital_users_stats_admin_hospital_users_stats_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/audit-log": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Audit Logs",
        "description": "Get audit logs",
        "operationId": "get_audit_logs_admin_audit_log_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Type"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Audit Logs Admin Audit Log Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/analytics": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Analytics",
        "description": "Get dashboard analytics",
        "operationId": "get_analytics_admin_analytics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Analytics Admin Analytics Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/medical-history-management/{history_type}": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Medical History Management",
        "description": "Get medical history records with comprehensive table view and filtering",
        "operationId": "get_medical_history_management_admin_medical_history_management__history_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Medical history records retrieved successfully with table view",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "success": true,
                  "message": "Medical history records retrieved successfully",
                  "data": {
                    "records": [
                      {
                        "_id": "64f1234567890abcdef12345",
                        "patient_id": "622035a5fd26d7b6d9b7730c",
                        "patient_name": "John Doe",
                        "device_id": "DEV001",
                        "device_type": "AVA4",
                        "data": [
                          {
                            "systolic": 120,
                            "diastolic": 80,
                            "pulse": 72,
                            "timestamp": "2024-01-15T10:30:00Z"
                          }
                        ],
                        "created_at": "2024-01-15T10:30:00Z",
                        "updated_at": "2024-01-15T10:30:00Z"
                      }
                    ],
                    "total": 2574,
                    "limit": 50,
                    "skip": 0,
                    "has_next": true,
                    "has_prev": false,
                    "collection_info": {
                      "display_name": "Blood Pressure History",
                      "record_count": 2574,
                      "data_fields": [
                        "systolic",
                        "diastolic",
                        "pulse",
                        "timestamp"
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Create Medical History Record",
        "description": "Create new medical history record",
        "operationId": "create_medical_history_record_admin_medical_history_management__history_type__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalHistoryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history-management/{history_type}/{record_id}": {
      "put": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Update Medical History Record",
        "description": "Update medical history record",
        "operationId": "update_medical_history_record_admin_medical_history_management__history_type___record_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalHistoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Delete Medical History Record",
        "description": "Delete medical history record",
        "operationId": "delete_medical_history_record_admin_medical_history_management__history_type___record_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history-management/{history_type}/search": {
      "post": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Search Medical History Records",
        "description": "Advanced search for medical history records",
        "operationId": "search_medical_history_records_admin_medical_history_management__history_type__search_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalHistorySearchQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history-management/stats/overview": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Get Medical History Stats",
        "description": "Get comprehensive medical history statistics",
        "operationId": "get_medical_history_stats_admin_medical_history_management_stats_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/master-data/{data_type}/{record_id}": {
      "put": {
        "tags": [
          "admin-crud",
          "Admin Panel CRUD"
        ],
        "summary": "Update Master Data",
        "description": "Update master data record",
        "operationId": "update_master_data_admin_master_data__data_type___record_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterDataUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "admin",
          "Admin Panel"
        ],
        "summary": "Partially Update Master Data Record",
        "description": "## Partially Update Master Data Record\n\nPartially update an existing master data record by ID.\n\n### Supported Data Types:\n- `blood_groups`, `nations`, `human_skin_colors`, `ward_lists`, `staff_types`, `underlying_diseases`\n\n### Request Body:\n```json\n{\n  \"name\": [\n    {\"code\": \"en\", \"name\": \"Updated English Name\"},\n    {\"code\": \"th\", \"name\": \"Updated Thai Name\"}\n  ],\n  \"is_active\": false\n}\n```\n\n### Features:\n- **Partial Updates**: Only provided fields are updated\n- **Validation**: Automatic field validation\n- **Audit Trail**: Automatic timestamp updates\n- **Soft Delete**: Records can be soft-deleted\n- **Multilingual Support**: English and Thai names\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "patch_master_data_admin_master_data__data_type___record_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterDataUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Master data record partially updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Master data record partially updated successfully",
                  "data": {
                    "_id": "663220b2a9e900f9ded0a62f",
                    "name": [
                      {
                        "code": "en",
                        "name": "Partially Updated Staff Type"
                      },
                      {
                        "code": "th",
                        "name": "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô"
                      }
                    ],
                    "en_name": "Partially Updated Staff Type",
                    "is_active": false,
                    "is_deleted": false,
                    "created_at": "2024-05-01T11:00:02.415Z",
                    "updated_at": "2025-07-07T19:00:00.000Z",
                    "unique_id": 1,
                    "__v": 2
                  },
                  "request_id": "n4o5p6q7-r8s9-0123-nopq-456789012345",
                  "timestamp": "2025-07-07T19:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or invalid data type"
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "404": {
            "description": "Record not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin-crud",
          "Admin Panel CRUD"
        ],
        "summary": "Delete Master Data",
        "description": "Soft delete master data record",
        "operationId": "delete_master_data_admin_master_data__data_type___record_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "admin-crud",
          "Admin Panel CRUD"
        ],
        "summary": "Get Master Data Record",
        "description": "Get specific master data record",
        "operationId": "get_master_data_record_admin_master_data__data_type___record_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hospitals-raw-documents": {
      "get": {
        "tags": [
          "admin",
          "Admin Panel",
          "Admin Panel",
          "Raw Documents"
        ],
        "summary": "Get Raw Hospital Documents",
        "description": "## Raw Hospital Document Analysis\n    \n    Access complete MongoDB hospital documents without serialization for analysis and debugging.\n    \n    ### Features:\n    - **Complete Raw Structure**: All hospital fields per document\n    - **Field Analysis**: Automatic data type detection and statistics\n    - **Sample Values**: Preview of actual field content\n    - **ObjectId Mapping**: MongoDB relationship identification\n    - **Pagination Support**: Handle large document sets efficiently\n    - **Filtering Options**: Hospital ID and deletion status filters\n    \n    ### Document Structure:\n    \n    #### **Core Hospital Information** (15+ fields):\n    - `_id`, `name`, `en_name`, `province_code`, `district_code`\n    - `sub_district_code`, `organizecode`, `hospital_area_code`\n    - `is_active`, `is_deleted`, `created_at`, `updated_at`\n    \n    #### **Enhanced Address Information** (10+ fields):\n    - `address`: Basic address string\n    - `address_details`: Detailed address structure\n    - `location`: Geographic coordinates and precision\n    \n    #### **Contact Information** (10+ fields):\n    - `contact`: Comprehensive contact details\n    - `phone`, `email`, `website`: Legacy contact fields\n    - `fax`, `mobile`, `emergency_phone`: Additional contact methods\n    \n    #### **Service Information** (10+ fields):\n    - `services`: Service and capacity details\n    - `bed_capacity`, `service_plan_type`: Legacy service fields\n    - `emergency_services`, `trauma_center`, `icu_beds`\n    \n    #### **Digital Integration** (10+ fields):\n    - `image_url`: Hospital image URL\n    - `auto_login_liff_id`, `disconnect_liff_id`, `login_liff_id`\n    - `mac_hv01_box`, `notifyToken`, `rich_menu_token`\n    - `telegram_Token`: Telegram notification token\n    \n    #### **Notification Settings** (5+ fields):\n    - `is_acknowledge`, `is_admit_discard`\n    - `is_body_data`, `is_lab_data`, `is_status_change`\n    \n    ### Query Parameters:\n    - `limit`: Number of documents to return (1-50, default: 5)\n    - `skip`: Number of documents to skip for pagination\n    - `hospital_id`: Filter by specific hospital ObjectId\n    - `include_deleted`: Include soft-deleted hospitals (default: false)\n    - `province_code`: Filter by province code\n    - `district_code`: Filter by district code\n    \n    ### Response Features:\n    - **Raw Documents**: Complete MongoDB structure preserved\n    - **Field Analysis**: Data type detection and usage statistics\n    - **Sample Values**: Up to 3 sample values per field\n    - **ObjectId Detection**: Automatic relationship mapping\n    - **Pagination Info**: Total count and navigation details\n    \n    ### Use Cases:\n    - **Database Analysis**: Understand complete hospital data structure\n    - **Integration Planning**: Map fields for external system integration\n    - **Data Migration**: Analyze field usage and data types\n    - **Debugging**: Inspect raw MongoDB documents\n    - **API Development**: Understand available hospital fields\n    \n    ### Authentication:\n    Requires valid JWT Bearer token with admin privileges.",
        "operationId": "get_raw_hospital_documents_admin_hospitals_raw_documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Number of raw documents to return",
              "default": 5,
              "title": "Limit"
            },
            "description": "Number of raw documents to return"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of documents to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of documents to skip"
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by specific hospital ID"
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include soft-deleted hospitals",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include soft-deleted hospitals"
          },
          {
            "name": "province_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by province code",
              "title": "Province Code"
            },
            "description": "Filter by province code"
          },
          {
            "name": "district_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by district code",
              "title": "District Code"
            },
            "description": "Filter by district code"
          }
        ],
        "responses": {
          "200": {
            "description": "Raw hospital documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "success": true,
                  "message": "Raw hospital documents retrieved successfully",
                  "data": {
                    "raw_documents": [
                      {
                        "_id": {
                          "$oid": "507f1f77bcf86cd799439011"
                        },
                        "name": [
                          {
                            "code": "en",
                            "name": "Bangkok General Hospital"
                          },
                          {
                            "code": "th",
                            "name": "‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û"
                          }
                        ],
                        "en_name": "Bangkok General Hospital",
                        "province_code": 10,
                        "district_code": 1003,
                        "sub_district_code": 100301,
                        "organizecode": 1001,
                        "hospital_area_code": "10330",
                        "is_active": true,
                        "is_deleted": false,
                        "address": "123 Rama IV Road, Pathum Wan, Bangkok 10330",
                        "phone": "+66-2-123-4567",
                        "email": "info@bgh.co.th",
                        "website": "https://www.bgh.co.th",
                        "bed_capacity": 500,
                        "service_plan_type": "A",
                        "created_at": {
                          "$date": "2024-01-15T08:00:00.000Z"
                        },
                        "updated_at": {
                          "$date": "2024-01-15T10:30:00.000Z"
                        },
                        "__v": 2
                      }
                    ],
                    "total_count": 12350,
                    "returned_count": 1,
                    "field_analysis": {
                      "_id": {
                        "count": 1,
                        "data_types": [
                          "ObjectId"
                        ],
                        "sample_values": [
                          "507f1f77bcf86cd799439011"
                        ],
                        "is_object_id": true
                      },
                      "name": {
                        "count": 1,
                        "data_types": [
                          "array"
                        ],
                        "sample_values": [
                          {
                            "code": "en",
                            "name": "Bangkok General Hospital"
                          }
                        ],
                        "is_object_id": false
                      },
                      "province_code": {
                        "count": 1,
                        "data_types": [
                          "int"
                        ],
                        "sample_values": [
                          10
                        ],
                        "is_object_id": false
                      },
                      "bed_capacity": {
                        "count": 1,
                        "data_types": [
                          "int"
                        ],
                        "sample_values": [
                          500
                        ],
                        "is_object_id": false
                      }
                    },
                    "pagination": {
                      "limit": 5,
                      "skip": 0,
                      "has_more": true
                    },
                    "filters": {
                      "include_deleted": false
                    },
                    "metadata": {
                      "collection": "hospitals",
                      "query_filter": "{'is_deleted': {'$ne': True}}",
                      "timestamp": "2024-01-15T10:30:00.000000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid hospital ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history/{history_type}/{record_id}": {
      "get": {
        "tags": [
          "admin-crud",
          "Admin Panel CRUD"
        ],
        "summary": "Get Medical History Record",
        "description": "Get specific medical history record",
        "operationId": "get_medical_history_record_admin_medical_history__history_type___record_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/master-data": {
      "post": {
        "tags": [
          "admin-crud",
          "Admin Panel CRUD"
        ],
        "summary": "Create Master Data",
        "description": "Create new master data record",
        "operationId": "create_master_data_admin_master_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterDataCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/devices/data": {
      "post": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Create Device Data",
        "description": "Create new device data entry",
        "operationId": "create_device_data_api_devices_data_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDataCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Get Device Data",
        "description": "Get device data with filtering",
        "operationId": "get_device_data_api_devices_data_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "data_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Type"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/devices/data/{observation_id}": {
      "get": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Get Device Data Record",
        "description": "Get specific device data record",
        "operationId": "get_device_data_record_api_devices_data__observation_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Observation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Update Device Data",
        "description": "Update device data record",
        "operationId": "update_device_data_api_devices_data__observation_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Observation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDataUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Delete Device Data",
        "description": "Soft delete device data record",
        "operationId": "delete_device_data_api_devices_data__observation_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Observation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/devices/": {
      "post": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Api Create Device",
        "description": "Create new device",
        "operationId": "api_create_device_api_devices__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routes__device_crud__DeviceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Get Devices",
        "description": "Get devices with filtering",
        "operationId": "get_devices_api_devices__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hospital Id"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/devices/{device_id}": {
      "get": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Api Get Device",
        "description": "Get specific device",
        "operationId": "api_get_device_api_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Api Update Device",
        "description": "Update device",
        "operationId": "api_update_device_api_devices__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routes__device_crud__DeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "device-crud",
          "Device CRUD Operations"
        ],
        "summary": "Api Delete Device",
        "description": "Soft delete device",
        "operationId": "api_delete_device_api_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/device-types": {
      "get": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Get Device Types",
        "description": "Get available device types with their descriptions",
        "operationId": "get_device_types_admin_device_mapping_device_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Device Types Admin Device Mapping Device Types Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/device-mapping/available/ava4-boxes": {
      "get": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Get Available Ava4 Boxes",
        "description": "Get available AVA4 boxes (not assigned to any patient)",
        "operationId": "get_available_ava4_boxes_admin_device_mapping_available_ava4_boxes_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Available Ava4 Boxes Admin Device Mapping Available Ava4 Boxes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/available/kati-watches": {
      "get": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Get Available Kati Watches",
        "description": "Get available Kati watches (not assigned to any patient)",
        "operationId": "get_available_kati_watches_admin_device_mapping_available_kati_watches_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Available Kati Watches Admin Device Mapping Available Kati Watches Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/": {
      "get": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Get Device Mappings",
        "description": "Get device mappings with filtering and pagination",
        "operationId": "get_device_mappings_admin_device_mapping__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by patient ID",
              "title": "Patient Id"
            },
            "description": "Filter by patient ID"
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by device type",
              "title": "Device Type"
            },
            "description": "Filter by device type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Device Mappings Admin Device Mapping  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/{patient_id}": {
      "get": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Get Patient Device Mapping",
        "description": "Get device mapping for a specific patient",
        "operationId": "get_patient_device_mapping_admin_device_mapping__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Patient Device Mapping Admin Device Mapping  Patient Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/ava4-box": {
      "post": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Assign Ava4 Box",
        "description": "Assign AVA4 box to patient",
        "operationId": "assign_ava4_box_admin_device_mapping_ava4_box_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AVA4BoxAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Assign Ava4 Box Admin Device Mapping Ava4 Box Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/device-mapping/kati-watch": {
      "post": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Assign Kati Watch",
        "description": "Assign Kati watch to patient",
        "operationId": "assign_kati_watch_admin_device_mapping_kati_watch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KatiWatchAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Assign Kati Watch Admin Device Mapping Kati Watch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/device-mapping/medical-device": {
      "post": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Assign Medical Device",
        "description": "Assign medical device to patient",
        "operationId": "assign_medical_device_admin_device_mapping_medical_device_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalDeviceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Assign Medical Device Admin Device Mapping Medical Device Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/device-mapping/medical-device/{device_id}": {
      "put": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Update Medical Device",
        "description": "Update medical device assignment",
        "operationId": "update_medical_device_admin_device_mapping_medical_device__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalDeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Medical Device Admin Device Mapping Medical Device  Device Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Remove Medical Device",
        "description": "Remove medical device assignment",
        "operationId": "remove_medical_device_admin_device_mapping_medical_device__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type to remove",
              "title": "Device Type"
            },
            "description": "Device type to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Remove Medical Device Admin Device Mapping Medical Device  Device Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/ava4-box/{box_id}": {
      "delete": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Unassign Ava4 Box",
        "description": "Unassign AVA4 box from patient",
        "operationId": "unassign_ava4_box_admin_device_mapping_ava4_box__box_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Box Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Unassign Ava4 Box Admin Device Mapping Ava4 Box  Box Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/kati-watch/{watch_id}": {
      "delete": {
        "tags": [
          "device-mapping",
          "Device Mapping"
        ],
        "summary": "Unassign Kati Watch",
        "description": "Unassign Kati watch from patient",
        "operationId": "unassign_kati_watch_admin_device_mapping_kati_watch__watch_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "watch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Watch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Unassign Kati Watch Admin Device Mapping Kati Watch  Watch Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Health check successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Service is healthy",
                  "data": {
                    "status": "healthy",
                    "mongodb": "connected",
                    "version": "1.0.0",
                    "environment": "production",
                    "active_alerts": 0,
                    "alert_summary": {
                      "total_active": 0,
                      "by_level": {
                        "low": 0,
                        "medium": 0,
                        "high": 0,
                        "critical": 0
                      },
                      "total_historical": 0,
                      "last_24h": 0
                    }
                  },
                  "request_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error_count": 1,
                  "errors": [
                    {
                      "error_code": "SERVICE_UNAVAILABLE",
                      "error_type": "system_error",
                      "message": "MongoDB connection is unhealthy",
                      "suggestion": "Please try again later"
                    }
                  ],
                  "request_id": "b2c3d4e5-f6g7-8901-bcde-f23456789012",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "API information and endpoints",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "My FirstCare Opera Panel API",
                  "data": {
                    "version": "1.0.0",
                    "docs": "/docs",
                    "health": "/health",
                    "endpoints": {
                      "authentication": "/auth",
                      "device_mapping": "/admin/device-mapping",
                      "admin": "/admin",
                      "ava4": "/ava4",
                      "kati": "/kati",
                      "qube_vital": "/qube-vital"
                    }
                  },
                  "request_id": "c3d4e5f6-g7h8-9012-cdef-345678901234",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          }
        }
      }
    },
    "/test-schema": {
      "get": {
        "summary": "Test Schema Endpoint",
        "description": "Test endpoint to force registration of response models in OpenAPI schema",
        "operationId": "test_schema_endpoint_test_schema_get",
        "responses": {
          "200": {
            "description": "Schema test endpoint response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Schema test endpoint - this forces FastAPI to register SuccessResponse in OpenAPI",
                  "data": {
                    "schema_registered": true
                  },
                  "request_id": "test-schema-endpoint",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/patients/statistics": {
      "get": {
        "tags": [
          "analytics",
          "Analytics"
        ],
        "summary": "Get Patient Statistics",
        "description": "Get comprehensive patient demographics and statistics with risk analysis",
        "operationId": "get_patient_statistics_analytics_patients_statistics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient statistics retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Patient statistics retrieved successfully",
                  "data": {
                    "summary": {
                      "total_patients": 431,
                      "active_patients": 398,
                      "new_patients": 15,
                      "high_risk_patients": 23
                    },
                    "demographics": {
                      "age_distribution": {
                        "0-17": 12,
                        "18-29": 45,
                        "30-44": 89,
                        "45-59": 156,
                        "60-74": 98,
                        "75+": 31
                      },
                      "gender_distribution": {
                        "male": 210,
                        "female": 221
                      }
                    },
                    "risk_analysis": {
                      "low_risk_count": 298,
                      "medium_risk_count": 87,
                      "high_risk_count": 23,
                      "critical_risk_count": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/vitals/{patient_id}": {
      "get": {
        "tags": [
          "analytics",
          "Analytics"
        ],
        "summary": "Get Patient Vital Signs Analytics",
        "description": "Get comprehensive vital signs analysis for a specific patient with trends and statistics",
        "operationId": "get_vital_signs_analytics_analytics_vitals__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "daily",
                "weekly",
                "monthly",
                "quarterly",
                "yearly"
              ],
              "default": "weekly",
              "title": "Period"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vital signs analytics retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "data": {
                    "patient_id": "patient_123",
                    "period": "weekly",
                    "vital_signs": {
                      "blood_pressure": {
                        "systolic": {
                          "min": 110,
                          "max": 140,
                          "avg": 125
                        },
                        "diastolic": {
                          "min": 70,
                          "max": 90,
                          "avg": 80
                        }
                      },
                      "heart_rate": {
                        "min": 60,
                        "max": 85,
                        "avg": 72
                      },
                      "temperature": {
                        "min": 36.2,
                        "max": 37.1,
                        "avg": 36.7
                      }
                    },
                    "trends": {
                      "blood_pressure": "stable",
                      "heart_rate": "increasing",
                      "temperature": "stable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/devices/utilization": {
      "get": {
        "tags": [
          "analytics",
          "Analytics"
        ],
        "summary": "Get Device Utilization Analytics",
        "description": "Get device usage analytics and compliance metrics",
        "operationId": "get_device_utilization_analytics_analytics_devices_utilization_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Hospital Id"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "daily",
                "weekly",
                "monthly"
              ],
              "default": "weekly"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Device utilization analytics retrieved successfully"
          }
        }
      }
    },
    "/analytics/health-risks/{patient_id}": {
      "get": {
        "tags": [
          "analytics",
          "Analytics"
        ],
        "summary": "Get Health Risk Predictions",
        "description": "Get health risk assessment and predictions for a patient",
        "operationId": "predict_health_risks_analytics_health_risks__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Health risk predictions retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "data": {
                    "patient_id": "patient_123",
                    "risk_score": 0.65,
                    "risk_level": "medium",
                    "risk_factors": [
                      "age_factor",
                      "hypertension",
                      "diabetes"
                    ],
                    "recommendations": [
                      "Monitor blood pressure daily",
                      "Regular exercise routine",
                      "Medication compliance"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/trends/vitals": {
      "get": {
        "tags": [
          "analytics",
          "Analytics"
        ],
        "summary": "Get Vital Signs Trends",
        "description": "Get vital signs trend analysis across patients or time periods",
        "operationId": "get_vital_signs_trends_analytics_trends_vitals_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Vital signs trends retrieved successfully"
          }
        }
      }
    },
    "/analytics/anomalies/detect": {
      "get": {
        "tags": [
          "analytics",
          "Analytics"
        ],
        "summary": "Detect Vital Signs Anomalies",
        "description": "Detect anomalies in vital signs using statistical analysis",
        "operationId": "detect_vital_anomalies_analytics_anomalies_detect_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Anomalies detected successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "data": {
                    "anomalies": [
                      {
                        "patient_id": "patient_123",
                        "metric_type": "blood_pressure",
                        "value": 180,
                        "z_score": 3.2,
                        "severity": "critical",
                        "timestamp": "2024-01-15T10:30:00Z"
                      }
                    ],
                    "summary": {
                      "total_anomalies": 5,
                      "critical_count": 1,
                      "high_count": 2,
                      "medium_count": 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/reports/summary/{report_type}": {
      "get": {
        "tags": [
          "analytics",
          "Analytics"
        ],
        "summary": "Get Analytics Summary Reports",
        "description": "Get summary reports for analytics data",
        "operationId": "get_analytics_summary_report_analytics_reports_summary__report_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "report_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "patient_summary",
                "device_summary",
                "hospital_summary",
                "risk_summary",
                "system_summary"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Summary report retrieved successfully"
          }
        }
      }
    },
    "/analytics/export/{format}": {
      "post": {
        "tags": [
          "analytics",
          "Analytics"
        ],
        "summary": "Export Analytics Data",
        "description": "Export analytics data in various formats",
        "operationId": "export_analytics_data_analytics_export__format__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "csv",
                "json",
                "excel"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics data exported successfully"
          }
        }
      }
    },
    "/visualization/charts/patient-demographics": {
      "get": {
        "tags": [
          "visualization",
          "Visualization"
        ],
        "summary": "Get Patient Demographics Charts",
        "description": "Get chart data for patient demographics visualization",
        "operationId": "get_patient_demographics_charts_visualization_charts_patient_demographics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "chart_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "bar",
                "pie",
                "donut"
              ],
              "default": "bar"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chart data retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "data": {
                    "chart_data": {
                      "labels": [
                        "0-17",
                        "18-29",
                        "30-44",
                        "45-59",
                        "60-74",
                        "75+"
                      ],
                      "datasets": [
                        {
                          "label": "Age Distribution",
                          "data": [
                            12,
                            45,
                            89,
                            156,
                            98,
                            31
                          ],
                          "backgroundColor": [
                            "#36A2EB",
                            "#FF6384",
                            "#FFCE56",
                            "#4BC0C0",
                            "#9966FF",
                            "#FF9F40"
                          ]
                        }
                      ]
                    },
                    "chart_type": "bar",
                    "statistics": {
                      "total_patients": 431,
                      "average_age": 52.3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/visualization/charts/vital-trends/{patient_id}": {
      "get": {
        "tags": [
          "visualization",
          "Visualization"
        ],
        "summary": "Get Vital Signs Trend Charts",
        "description": "Get chart data for patient vital signs trends",
        "operationId": "get_vital_trends_charts_visualization_charts_vital_trends__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chart_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "line",
                "area"
              ],
              "default": "line"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "daily",
                "weekly",
                "monthly"
              ],
              "default": "weekly"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vital trends chart data retrieved successfully"
          }
        }
      }
    },
    "/visualization/charts/risk-distribution": {
      "get": {
        "tags": [
          "visualization",
          "Visualization"
        ],
        "summary": "Get Risk Distribution Charts",
        "description": "Get chart data for patient risk level distribution",
        "operationId": "get_risk_distribution_charts_visualization_charts_risk_distribution_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "chart_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pie",
                "donut",
                "bar"
              ],
              "default": "pie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Risk distribution chart data retrieved successfully"
          }
        }
      }
    },
    "/visualization/charts/device-utilization": {
      "get": {
        "tags": [
          "visualization",
          "Visualization"
        ],
        "summary": "Get Device Utilization Charts",
        "description": "Get chart data for device utilization metrics",
        "operationId": "get_device_utilization_charts_visualization_charts_device_utilization_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Device utilization chart data retrieved successfully"
          }
        }
      }
    },
    "/visualization/charts/anomaly-scatter/{patient_id}": {
      "get": {
        "tags": [
          "visualization",
          "Visualization"
        ],
        "summary": "Get Anomaly Scatter Charts",
        "description": "Get scatter plot data for anomaly visualization",
        "operationId": "get_anomaly_scatter_charts_visualization_charts_anomaly_scatter__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Anomaly scatter chart data retrieved successfully"
          }
        }
      }
    },
    "/visualization/charts/risk-gauge/{patient_id}": {
      "get": {
        "tags": [
          "visualization",
          "Visualization"
        ],
        "summary": "Get Risk Gauge Charts",
        "description": "Get gauge chart data for individual patient risk scores",
        "operationId": "get_risk_gauge_charts_visualization_charts_risk_gauge__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Risk gauge chart data retrieved successfully"
          }
        }
      }
    },
    "/visualization/charts/system-overview": {
      "get": {
        "tags": [
          "visualization",
          "Visualization"
        ],
        "summary": "Get System Overview Charts",
        "description": "Get dashboard overview chart data with key metrics",
        "operationId": "get_system_overview_charts_visualization_charts_system_overview_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "System overview chart data retrieved successfully"
          }
        }
      }
    },
    "/reports/templates": {
      "get": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "List Report Templates",
        "description": "List all report templates with filtering",
        "operationId": "list_report_templates_reports_templates_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report templates retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "data": {
                    "templates": [
                      {
                        "id": "template_123",
                        "name": "Daily Hospital Summary",
                        "type": "daily_summary",
                        "format": "html",
                        "frequency": "daily",
                        "active": true,
                        "recipients": [
                          "admin@hospital.com"
                        ]
                      }
                    ],
                    "count": 1
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "Create Report Template",
        "description": "Create a new report template",
        "operationId": "create_report_template_reports_templates_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "daily_summary",
                      "weekly_analytics",
                      "monthly_overview",
                      "patient_report",
                      "hospital_performance",
                      "device_utilization",
                      "risk_assessment",
                      "anomaly_alert",
                      "system_health"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "enum": [
                      "json",
                      "html",
                      "csv",
                      "pdf",
                      "excel"
                    ]
                  },
                  "frequency": {
                    "type": "string",
                    "enum": [
                      "once",
                      "daily",
                      "weekly",
                      "monthly",
                      "quarterly"
                    ]
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "email"
                    }
                  },
                  "filters": {
                    "type": "object"
                  },
                  "template_config": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "format",
                  "frequency"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Report template created successfully"
          }
        }
      }
    },
    "/reports/templates/{template_id}": {
      "get": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "Get Report Template",
        "description": "Get a specific report template",
        "operationId": "get_report_template_reports_templates__template_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report template retrieved successfully"
          }
        }
      },
      "put": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "Update Report Template",
        "description": "Update an existing report template",
        "operationId": "update_report_template_reports_templates__template_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report template updated successfully"
          }
        }
      },
      "delete": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "Delete Report Template",
        "description": "Delete a report template",
        "operationId": "delete_report_template_reports_templates__template_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report template deleted successfully"
          }
        }
      }
    },
    "/reports/generate/{template_id}": {
      "post": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "Generate Report",
        "description": "Generate a report immediately from a template",
        "operationId": "generate_report_reports_generate__template_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Report generation started",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Report generation started",
                  "data": {
                    "job_id": "job_123",
                    "template_id": "template_123",
                    "status": "pending"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/jobs": {
      "get": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "List Report Jobs",
        "description": "List report generation jobs",
        "operationId": "list_report_jobs_reports_jobs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report jobs retrieved successfully"
          }
        }
      }
    },
    "/reports/jobs/{job_id}": {
      "get": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "Get Report Job",
        "description": "Get a specific report job status",
        "operationId": "get_report_job_reports_jobs__job_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report job retrieved successfully"
          }
        }
      }
    },
    "/reports/jobs/{job_id}/output": {
      "get": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "Get Report Output",
        "description": "Get the output of a completed report job",
        "operationId": "get_report_output_reports_jobs__job_id__output_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report output retrieved successfully"
          }
        }
      }
    },
    "/reports/types": {
      "get": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "Get Report Types",
        "description": "Get available report types, formats, and frequencies",
        "operationId": "get_report_types_reports_types_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Report types retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "data": {
                    "report_types": [
                      {
                        "value": "daily_summary",
                        "label": "Daily Summary",
                        "description": "Daily summary of patient statistics and device usage"
                      }
                    ],
                    "formats": [
                      {
                        "value": "json",
                        "label": "JSON",
                        "description": "Machine-readable JSON format"
                      }
                    ],
                    "frequencies": [
                      {
                        "value": "daily",
                        "label": "Daily",
                        "description": "Generate report daily at midnight"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/schedule/check": {
      "post": {
        "tags": [
          "reports",
          "Reports"
        ],
        "summary": "Check Scheduled Reports",
        "description": "Manually trigger scheduled report check",
        "operationId": "check_scheduled_reports_reports_schedule_check_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduled reports checked successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AVA4BoxAssignment": {
        "properties": {
          "patient_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Patient Id",
            "description": "Patient ID"
          },
          "box_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Box Id",
            "description": "AVA4 Box ID"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Installation location"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Assignment notes"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "box_id"
        ],
        "title": "AVA4BoxAssignment"
      },
      "Ava4DataRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "device_id",
          "type",
          "data"
        ],
        "title": "Ava4DataRequest"
      },
      "Ava4DataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "observation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observation Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "Ava4DataResponse"
      },
      "DeviceDataCreate": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "data_type": {
            "type": "string",
            "title": "Data Type"
          },
          "values": {
            "type": "object",
            "title": "Values"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "device_id",
          "device_type",
          "data_type",
          "values"
        ],
        "title": "DeviceDataCreate"
      },
      "DeviceDataUpdate": {
        "properties": {
          "values": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Values"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "DeviceDataUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HospitalUserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "user_title": {
            "type": "string",
            "title": "User Title",
            "description": "Title: Mr., Mrs., Miss, Dr., other",
            "default": "Mr."
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "country_phone_code": {
            "type": "string",
            "title": "Country Phone Code",
            "default": "+66"
          },
          "country_code": {
            "type": "string",
            "title": "Country Code",
            "default": "Th"
          },
          "country_name": {
            "type": "string",
            "title": "Country Name",
            "default": "Thailand"
          },
          "hospital_id": {
            "type": "string",
            "format": "object-id",
            "title": "Hospital Id"
          },
          "type": {
            "type": "string",
            "format": "object-id",
            "title": "Type"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "default": ""
          },
          "server_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Token",
            "default": ""
          },
          "device_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Token",
            "default": ""
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type",
            "default": ""
          },
          "app_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Version",
            "default": ""
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "title": "Password",
            "description": "Password (will be hashed)"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name",
          "phone",
          "hospital_id",
          "type",
          "password"
        ],
        "title": "HospitalUserCreate",
        "description": "Model for creating a new hospital user"
      },
      "HospitalUserSearchQuery": {
        "properties": {
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted"
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search"
          }
        },
        "type": "object",
        "title": "HospitalUserSearchQuery",
        "description": "Model for hospital user search parameters"
      },
      "HospitalUserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "user_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Title"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "country_phone_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Phone Code"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code"
          },
          "country_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Name"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "object-id"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "format": "object-id"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "server_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Token"
          },
          "device_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Token"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "app_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Version"
          }
        },
        "type": "object",
        "title": "HospitalUserUpdate",
        "description": "Model for updating hospital user"
      },
      "KatiDataRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "device_id",
          "type",
          "data"
        ],
        "title": "KatiDataRequest"
      },
      "KatiDataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "observation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observation Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "KatiDataResponse"
      },
      "KatiWatchAssignment": {
        "properties": {
          "patient_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Patient Id",
            "description": "Patient ID"
          },
          "watch_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Watch Id",
            "description": "Kati Watch ID"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Assignment notes"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "watch_id"
        ],
        "title": "KatiWatchAssignment"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest"
      },
      "MasterDataCreate": {
        "properties": {
          "data_type": {
            "type": "string",
            "title": "Data Type"
          },
          "name": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "province_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province Code"
          },
          "district_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "District Code"
          },
          "sub_district_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub District Code"
          },
          "additional_fields": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Fields"
          }
        },
        "type": "object",
        "required": [
          "data_type"
        ],
        "title": "MasterDataCreate"
      },
      "MasterDataUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "province_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province Code"
          },
          "district_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "District Code"
          },
          "sub_district_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub District Code"
          },
          "additional_fields": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Fields"
          }
        },
        "type": "object",
        "title": "MasterDataUpdate"
      },
      "MedicalAnalyticsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Medical analytics data"
          }
        },
        "type": "object",
        "required": [
          "message",
          "data"
        ],
        "title": "MedicalAnalyticsResponse",
        "description": "Response model for medical analytics"
      },
      "MedicalDeviceCreate": {
        "properties": {
          "patient_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Patient Id",
            "description": "Patient ID"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type",
            "description": "Device type (mac_gw, mac_dusun_bps, mac_oxymeter, etc.)"
          },
          "mac_address": {
            "type": "string",
            "maxLength": 17,
            "minLength": 1,
            "title": "Mac Address",
            "description": "Device MAC address"
          },
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name",
            "description": "Device name"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "device_type",
          "mac_address"
        ],
        "title": "MedicalDeviceCreate"
      },
      "MedicalDeviceUpdate": {
        "properties": {
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type",
            "description": "Device type"
          },
          "mac_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 17,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Address",
            "description": "Device MAC address"
          },
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name",
            "description": "Device name"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          }
        },
        "type": "object",
        "title": "MedicalDeviceUpdate"
      },
      "MedicalHistoryCollectionsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Collections data"
          }
        },
        "type": "object",
        "required": [
          "message",
          "data"
        ],
        "title": "MedicalHistoryCollectionsResponse",
        "description": "Response model for medical history collections overview"
      },
      "MedicalHistoryCreate": {
        "properties": {
          "patient_id": {
            "type": "string",
            "title": "Patient Id",
            "description": "Patient ID reference"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "description": "Device ID that recorded the data"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type",
            "description": "Type of device (AVA4, Kati, Qube-Vital)"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp",
            "description": "When the measurement was taken"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          },
          "history_type": {
            "type": "string",
            "title": "History Type",
            "description": "Type of medical history (blood_pressure, blood_sugar, etc.)"
          },
          "values": {
            "type": "object",
            "title": "Values",
            "description": "Medical data values specific to history type"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "history_type",
          "values"
        ],
        "title": "MedicalHistoryCreate"
      },
      "MedicalHistorySearchQuery": {
        "properties": {
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search",
            "description": "General search across data fields"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id",
            "description": "Filter by patient ID"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "description": "Filter by device ID"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type",
            "description": "Filter by device type"
          },
          "date_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date From",
            "description": "Start date filter"
          },
          "date_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date To",
            "description": "End date filter"
          },
          "value_min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value Min",
            "description": "Minimum value filter (for numeric data)"
          },
          "value_max": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value Max",
            "description": "Maximum value filter (for numeric data)"
          }
        },
        "type": "object",
        "title": "MedicalHistorySearchQuery"
      },
      "MedicalHistoryUpdate": {
        "properties": {
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "values": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Values"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "MedicalHistoryUpdate"
      },
      "MedicalTrendsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Medical trends data with analytics"
          }
        },
        "type": "object",
        "required": [
          "message",
          "data"
        ],
        "title": "MedicalTrendsResponse",
        "description": "Response model for medical trends analysis"
      },
      "PatientCreate": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "id_card": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Card"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "province_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province Code"
          },
          "district_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "District Code"
          },
          "sub_district_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub District Code"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "emergency_contact_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Name"
          },
          "emergency_contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Phone"
          },
          "emergency_contact_relationship": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Relationship"
          },
          "blood_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blood Type"
          },
          "height": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "bmi": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bmi"
          },
          "watch_mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Watch Mac Address"
          },
          "ava_mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ava Mac Address"
          },
          "new_hospital_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Hospital Ids"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "gender"
        ],
        "title": "PatientCreate"
      },
      "PatientMedicalHistoryResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Patient medical history data"
          }
        },
        "type": "object",
        "required": [
          "message",
          "data"
        ],
        "title": "PatientMedicalHistoryResponse",
        "description": "Response model for patient medical history"
      },
      "PatientUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "id_card": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Card"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "province_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province Code"
          },
          "district_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "District Code"
          },
          "sub_district_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub District Code"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "emergency_contact_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Name"
          },
          "emergency_contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Phone"
          },
          "emergency_contact_relationship": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Relationship"
          },
          "blood_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blood Type"
          },
          "height": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "bmi": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bmi"
          },
          "watch_mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Watch Mac Address"
          },
          "ava_mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ava Mac Address"
          },
          "new_hospital_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Hospital Ids"
          }
        },
        "type": "object",
        "title": "PatientUpdate"
      },
      "PatientDeviceRegistry": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Healthcare provider managing this patient's devices"
          },
          "patient_id": {
            "type": "string",
            "title": "Patient Id",
            "description": "Patient ID these devices belong to"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group",
            "description": "Device group/organization"
          },
          "mac_gw": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Gw",
            "description": "Gateway MAC address (AVA4 box)"
          },
          "mac_bps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Bps",
            "description": "Blood pressure monitor MAC address"
          },
          "mac_body_temp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Body Temp",
            "description": "Body temperature sensor MAC address"
          },
          "mac_watch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Watch",
            "description": "Smart watch MAC address"
          },
          "mac_oxymeter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Oxymeter",
            "description": "Oximeter MAC address"
          },
          "mac_weight": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Weight",
            "description": "Weight scale MAC address"
          },
          "mac_gluc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Gluc",
            "description": "Glucose meter MAC address"
          },
          "mac_chol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Chol",
            "description": "Cholesterol meter MAC address"
          },
          "mac_ua": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Ua",
            "description": "Uric acid meter MAC address"
          },
          "mac_dusun_bps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Dusun Bps",
            "description": "Dusun blood pressure monitor MAC address"
          },
          "mac_mgss_oxymeter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Mgss Oxymeter",
            "description": "MGSS oximeter MAC address"
          },
          "mac_salt_meter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Salt Meter",
            "description": "Salt meter MAC address"
          }
        },
        "type": "object",
        "required": [
          "patient_id"
        ],
        "title": "PatientDeviceRegistry",
        "description": "Model for patient medical device registry"
      },
      "PatientDeviceRegistryUpdate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Healthcare provider managing this patient's devices"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group",
            "description": "Device group/organization"
          },
          "mac_gw": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Gw",
            "description": "Gateway MAC address (AVA4 box)"
          },
          "mac_bps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Bps",
            "description": "Blood pressure monitor MAC address"
          },
          "mac_body_temp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Body Temp",
            "description": "Body temperature sensor MAC address"
          },
          "mac_watch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Watch",
            "description": "Smart watch MAC address"
          },
          "mac_oxymeter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Oxymeter",
            "description": "Oximeter MAC address"
          },
          "mac_weight": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Weight",
            "description": "Weight scale MAC address"
          },
          "mac_gluc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Gluc",
            "description": "Glucose meter MAC address"
          },
          "mac_chol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Chol",
            "description": "Cholesterol meter MAC address"
          },
          "mac_ua": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Ua",
            "description": "Uric acid meter MAC address"
          },
          "mac_dusun_bps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Dusun Bps",
            "description": "Dusun blood pressure monitor MAC address"
          },
          "mac_mgss_oxymeter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Mgss Oxymeter",
            "description": "MGSS oximeter MAC address"
          },
          "mac_salt_meter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Salt Meter",
            "description": "Salt meter MAC address"
          }
        },
        "type": "object",
        "title": "PatientDeviceRegistryUpdate",
        "description": "Model for updating patient medical device registry"
      },
      "QubeVitalDataRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "device_id",
          "type",
          "data"
        ],
        "title": "QubeVitalDataRequest"
      },
      "QubeVitalDataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "observation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observation Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "QubeVitalDataResponse"
      },
      "QubeVitalDeviceCreate": {
        "properties": {
          "imei_of_hv01_box": {
            "type": "string",
            "maxLength": 15,
            "minLength": 15,
            "title": "Imei Of Hv01 Box",
            "description": "IMEI of the Qube-Vital HV01 box"
          },
          "device_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Device Name",
            "description": "Display name for the device"
          },
          "model": {
            "type": "string",
            "default": "HV01",
            "title": "Model",
            "description": "Device model"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id",
            "description": "Hospital ID to assign the device to"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Physical location of the device"
          },
          "status": {
            "type": "string",
            "default": "inactive",
            "title": "Status",
            "description": "Device status"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "title": "Is Active",
            "description": "Whether the device is active"
          }
        },
        "type": "object",
        "required": [
          "imei_of_hv01_box",
          "device_name"
        ],
        "title": "QubeVitalDeviceCreate",
        "description": "Model for creating a new Qube-Vital device"
      },
      "QubeVitalDeviceUpdate": {
        "properties": {
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name",
            "description": "Display name for the device"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Device model"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id",
            "description": "Hospital ID to assign the device to"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Physical location of the device"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Device status"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether the device is active"
          }
        },
        "type": "object",
        "title": "QubeVitalDeviceUpdate",
        "description": "Model for updating a Qube-Vital device"
      },
      "RefreshRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshRequest"
      },
      "SuccessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "description": "Response data"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id",
            "description": "Request ID for tracking"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "Response timestamp"
          }
        },
        "type": "object",
        "required": [
          "message",
          "timestamp"
        ],
        "title": "SuccessResponse"
      },
      "TokenResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "user": {
            "type": "object",
            "title": "User",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "access_token",
          "token_type"
        ],
        "title": "TokenResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__routes__admin__DeviceCreate": {
        "properties": {
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "mac_address": {
            "type": "string",
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "active"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "device_type",
          "mac_address"
        ],
        "title": "DeviceCreate"
      },
      "app__routes__admin__DeviceUpdate": {
        "properties": {
          "mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "DeviceUpdate"
      },
      "app__routes__admin_crud__DeviceCreate": {
        "properties": {
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "mac_address": {
            "type": "string",
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "active"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "device_type",
          "mac_address"
        ],
        "title": "DeviceCreate"
      },
      "app__routes__admin_crud__DeviceUpdate": {
        "properties": {
          "mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "DeviceUpdate"
      },
      "app__routes__device_crud__DeviceCreate": {
        "properties": {
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "mac_address": {
            "type": "string",
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "active"
          },
          "configuration": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          }
        },
        "type": "object",
        "required": [
          "device_type",
          "mac_address"
        ],
        "title": "DeviceCreate"
      },
      "app__routes__device_crud__DeviceUpdate": {
        "properties": {
          "mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "configuration": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          }
        },
        "type": "object",
        "title": "DeviceUpdate"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}