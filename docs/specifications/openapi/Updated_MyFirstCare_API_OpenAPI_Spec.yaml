components:
  schemas:
    AVA4BoxAssignment:
      properties:
        box_id:
          description: AVA4 Box ID
          maxLength: 24
          minLength: 24
          title: Box Id
          type: string
        location:
          anyOf:
          - maxLength: 200
            type: string
          - type: 'null'
          description: Installation location
          title: Location
        notes:
          anyOf:
          - maxLength: 500
            type: string
          - type: 'null'
          description: Assignment notes
          title: Notes
        patient_id:
          description: Patient ID
          maxLength: 24
          minLength: 24
          title: Patient Id
          type: string
      required:
      - patient_id
      - box_id
      title: AVA4BoxAssignment
      type: object
    Ava4DataRequest:
      properties:
        data:
          title: Data
          type: object
        device_id:
          title: Device Id
          type: string
        timestamp:
          format: date-time
          title: Timestamp
          type: string
        type:
          title: Type
          type: string
      required:
      - timestamp
      - device_id
      - type
      - data
      title: Ava4DataRequest
      type: object
    Ava4DataResponse:
      properties:
        message:
          title: Message
          type: string
        observation_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Observation Id
        success:
          title: Success
          type: boolean
      required:
      - success
      - message
      title: Ava4DataResponse
      type: object
    Ava4DeviceCreate:
      description: Model for creating a new AVA4 device
      properties:
        box_name:
          description: Display name for the AVA4 box
          maxLength: 100
          minLength: 1
          title: Box Name
          type: string
        firmware_version:
          anyOf:
          - type: string
          - type: 'null'
          description: Firmware version
          title: Firmware Version
        imei:
          anyOf:
          - maxLength: 15
            minLength: 15
            type: string
          - type: 'null'
          description: IMEI of the device
          title: Imei
        is_active:
          default: true
          description: Whether the device is active
          title: Is Active
          type: boolean
        location:
          anyOf:
          - type: string
          - type: 'null'
          description: Physical location of the device
          title: Location
        mac_address:
          description: MAC address of the AVA4 device
          maxLength: 17
          minLength: 17
          title: Mac Address
          type: string
        model:
          default: AVA4
          description: Device model
          title: Model
          type: string
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient ID to assign the device to
          title: Patient Id
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          description: Serial number of the device
          title: Serial Number
        status:
          default: inactive
          description: Device status
          title: Status
          type: string
      required:
      - mac_address
      - box_name
      title: Ava4DeviceCreate
      type: object
    Ava4DeviceUpdate:
      description: Model for updating an AVA4 device
      properties:
        box_name:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Display name for the AVA4 box
          title: Box Name
        firmware_version:
          anyOf:
          - type: string
          - type: 'null'
          description: Firmware version
          title: Firmware Version
        imei:
          anyOf:
          - maxLength: 15
            minLength: 15
            type: string
          - type: 'null'
          description: IMEI of the device
          title: Imei
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the device is active
          title: Is Active
        location:
          anyOf:
          - type: string
          - type: 'null'
          description: Physical location of the device
          title: Location
        model:
          anyOf:
          - type: string
          - type: 'null'
          description: Device model
          title: Model
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient ID to assign the device to
          title: Patient Id
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          description: Serial number of the device
          title: Serial Number
        status:
          anyOf:
          - type: string
          - type: 'null'
          description: Device status
          title: Status
      title: Ava4DeviceUpdate
      type: object
    Body_create_observation_from_mqtt_fhir_R5_Observation_from_mqtt_post:
      properties:
        device_id:
          description: Device ID
          title: Device Id
          type: string
        mqtt_payload:
          description: AVA4 MQTT payload
          title: Mqtt Payload
          type: object
        patient_id:
          description: Patient ID
          title: Patient Id
          type: string
      required:
      - mqtt_payload
      - patient_id
      - device_id
      title: Body_create_observation_from_mqtt_fhir_R5_Observation_from_mqtt_post
      type: object
    CleanupRequest:
      description: Request for audit log cleanup
      properties:
        dry_run:
          default: true
          description: Perform dry run without actual deletion
          title: Dry Run
          type: boolean
        retention_days:
          default: 2555
          description: Retention period in days (default 7 years)
          maximum: 3650.0
          minimum: 1.0
          title: Retention Days
          type: integer
      title: CleanupRequest
      type: object
    CreateReportTemplateRequest:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Description
        filters:
          anyOf:
          - type: object
          - type: 'null'
          default: {}
          title: Filters
        format:
          title: Format
          type: string
        frequency:
          title: Frequency
          type: string
        name:
          title: Name
          type: string
        recipients:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: []
          title: Recipients
        template_config:
          anyOf:
          - type: object
          - type: 'null'
          default: {}
          title: Template Config
        type:
          title: Type
          type: string
      required:
      - name
      - type
      - format
      - frequency
      title: CreateReportTemplateRequest
      type: object
    DeviceDataCreate:
      properties:
        data_type:
          title: Data Type
          type: string
        device_id:
          title: Device Id
          type: string
        device_type:
          title: Device Type
          type: string
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
        timestamp:
          format: date-time
          title: Timestamp
          type: string
        values:
          title: Values
          type: object
      required:
      - timestamp
      - device_id
      - device_type
      - data_type
      - values
      title: DeviceDataCreate
      type: object
    DeviceDataUpdate:
      properties:
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        values:
          anyOf:
          - type: object
          - type: 'null'
          title: Values
      title: DeviceDataUpdate
      type: object
    ErrorDetail:
      properties:
        error_code:
          description: Unique error code
          title: Error Code
          type: string
        error_type:
          description: Type of error
          title: Error Type
          type: string
        field:
          anyOf:
          - type: string
          - type: 'null'
          description: Field that caused the error
          title: Field
        message:
          description: Human-readable error message
          title: Message
          type: string
        suggestion:
          anyOf:
          - type: string
          - type: 'null'
          description: Suggestion to fix the error
          title: Suggestion
        value:
          anyOf:
          - {}
          - type: 'null'
          description: Value that caused the error
          title: Value
      required:
      - error_code
      - error_type
      - message
      title: ErrorDetail
      type: object
    ErrorResponse:
      properties:
        error_count:
          description: Number of errors
          title: Error Count
          type: integer
        errors:
          description: List of error details
          items:
            $ref: '#/components/schemas/ErrorDetail'
          title: Errors
          type: array
        request_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Request ID for tracking
          title: Request Id
        success:
          default: false
          description: Request success status
          title: Success
          type: boolean
        timestamp:
          description: Error timestamp
          title: Timestamp
          type: string
      required:
      - error_count
      - errors
      - timestamp
      title: ErrorResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HospitalUserCreate:
      description: Model for creating a new hospital user
      properties:
        app_version:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: App Version
        country_code:
          default: Th
          title: Country Code
          type: string
        country_name:
          default: Thailand
          title: Country Name
          type: string
        country_phone_code:
          default: '+66'
          title: Country Phone Code
          type: string
        device_token:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Device Token
        device_type:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Device Type
        email:
          format: email
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        hospital_id:
          format: object-id
          title: Hospital Id
          type: string
        image_url:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Image Url
        last_name:
          title: Last Name
          type: string
        password:
          description: Password (will be hashed)
          minLength: 6
          title: Password
          type: string
        phone:
          title: Phone
          type: string
        server_token:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Server Token
        type:
          format: object-id
          title: Type
          type: string
        user_title:
          default: Mr.
          description: 'Title: Mr., Mrs., Miss, Dr., other'
          title: User Title
          type: string
      required:
      - email
      - first_name
      - last_name
      - phone
      - hospital_id
      - type
      - password
      title: HospitalUserCreate
      type: object
    HospitalUserSearchQuery:
      description: Model for hospital user search parameters
      properties:
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        hospital_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
        is_deleted:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Deleted
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        search:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
        type:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
      title: HospitalUserSearchQuery
      type: object
    HospitalUserUpdate:
      description: Model for updating hospital user
      properties:
        app_version:
          anyOf:
          - type: string
          - type: 'null'
          title: App Version
        country_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Country Code
        country_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Country Name
        country_phone_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Country Phone Code
        device_token:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Token
        device_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Type
        email:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          title: Email
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        hospital_id:
          anyOf:
          - format: object-id
            type: string
          - type: 'null'
          title: Hospital Id
        image_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Image Url
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        server_token:
          anyOf:
          - type: string
          - type: 'null'
          title: Server Token
        type:
          anyOf:
          - format: object-id
            type: string
          - type: 'null'
          title: Type
        user_title:
          anyOf:
          - type: string
          - type: 'null'
          title: User Title
      title: HospitalUserUpdate
      type: object
    KatiDataRequest:
      properties:
        data:
          title: Data
          type: object
        device_id:
          title: Device Id
          type: string
        timestamp:
          format: date-time
          title: Timestamp
          type: string
        type:
          title: Type
          type: string
      required:
      - timestamp
      - device_id
      - type
      - data
      title: KatiDataRequest
      type: object
    KatiDataResponse:
      properties:
        message:
          title: Message
          type: string
        observation_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Observation Id
        success:
          title: Success
          type: boolean
      required:
      - success
      - message
      title: KatiDataResponse
      type: object
    KatiWatchAssignment:
      properties:
        notes:
          anyOf:
          - maxLength: 500
            type: string
          - type: 'null'
          description: Assignment notes
          title: Notes
        patient_id:
          description: Patient ID
          maxLength: 24
          minLength: 24
          title: Patient Id
          type: string
        watch_id:
          description: Kati Watch ID
          maxLength: 24
          minLength: 24
          title: Watch Id
          type: string
      required:
      - patient_id
      - watch_id
      title: KatiWatchAssignment
      type: object
    LoginRequest:
      properties:
        password:
          title: Password
          type: string
        username:
          title: Username
          type: string
      required:
      - username
      - password
      title: LoginRequest
      type: object
    MasterDataCreate:
      properties:
        additional_fields:
          anyOf:
          - type: object
          - type: 'null'
          title: Additional Fields
        code:
          anyOf:
          - type: integer
          - type: 'null'
          title: Code
        data_type:
          title: Data Type
          type: string
        district_code:
          anyOf:
          - type: integer
          - type: 'null'
          title: District Code
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          title: Is Active
        name:
          anyOf:
          - type: object
          - type: 'null'
          title: Name
        province_code:
          anyOf:
          - type: integer
          - type: 'null'
          title: Province Code
        sub_district_code:
          anyOf:
          - type: integer
          - type: 'null'
          title: Sub District Code
      required:
      - data_type
      title: MasterDataCreate
      type: object
    MasterDataUpdate:
      properties:
        additional_fields:
          anyOf:
          - type: object
          - type: 'null'
          title: Additional Fields
        code:
          anyOf:
          - type: integer
          - type: 'null'
          title: Code
        district_code:
          anyOf:
          - type: integer
          - type: 'null'
          title: District Code
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
        name:
          anyOf:
          - type: object
          - type: 'null'
          title: Name
        province_code:
          anyOf:
          - type: integer
          - type: 'null'
          title: Province Code
        sub_district_code:
          anyOf:
          - type: integer
          - type: 'null'
          title: Sub District Code
      title: MasterDataUpdate
      type: object
    MedicalAnalyticsResponse:
      description: Response model for medical analytics
      properties:
        data:
          description: Medical analytics data
          title: Data
          type: object
        message:
          description: Response message
          title: Message
          type: string
        success:
          default: true
          description: Request success status
          title: Success
          type: boolean
      required:
      - message
      - data
      title: MedicalAnalyticsResponse
      type: object
    MedicalDeviceCreate:
      properties:
        device_name:
          anyOf:
          - maxLength: 100
            type: string
          - type: 'null'
          description: Device name
          title: Device Name
        device_type:
          description: Device type (mac_gw, mac_dusun_bps, mac_oxymeter, etc.)
          title: Device Type
          type: string
        mac_address:
          description: Device MAC address
          maxLength: 17
          minLength: 1
          title: Mac Address
          type: string
        notes:
          anyOf:
          - maxLength: 500
            type: string
          - type: 'null'
          description: Additional notes
          title: Notes
        patient_id:
          description: Patient ID
          maxLength: 24
          minLength: 24
          title: Patient Id
          type: string
      required:
      - patient_id
      - device_type
      - mac_address
      title: MedicalDeviceCreate
      type: object
    MedicalDeviceUpdate:
      properties:
        device_name:
          anyOf:
          - maxLength: 100
            type: string
          - type: 'null'
          description: Device name
          title: Device Name
        device_type:
          anyOf:
          - type: string
          - type: 'null'
          description: Device type
          title: Device Type
        mac_address:
          anyOf:
          - maxLength: 17
            minLength: 1
            type: string
          - type: 'null'
          description: Device MAC address
          title: Mac Address
        notes:
          anyOf:
          - maxLength: 500
            type: string
          - type: 'null'
          description: Additional notes
          title: Notes
      title: MedicalDeviceUpdate
      type: object
    MedicalHistoryCollectionsResponse:
      description: Response model for medical history collections overview
      properties:
        data:
          description: Collections data
          title: Data
          type: object
        message:
          description: Response message
          title: Message
          type: string
        success:
          default: true
          description: Request success status
          title: Success
          type: boolean
      required:
      - message
      - data
      title: MedicalHistoryCollectionsResponse
      type: object
    MedicalHistoryCreate:
      properties:
        device_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Device ID that recorded the data
          title: Device Id
        device_type:
          anyOf:
          - type: string
          - type: 'null'
          description: Type of device (AVA4, Kati, Qube-Vital)
          title: Device Type
        history_type:
          description: Type of medical history (blood_pressure, blood_sugar, etc.)
          title: History Type
          type: string
        notes:
          anyOf:
          - type: string
          - type: 'null'
          description: Additional notes
          title: Notes
        patient_id:
          description: Patient ID reference
          title: Patient Id
          type: string
        timestamp:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the measurement was taken
          title: Timestamp
        values:
          description: Medical data values specific to history type
          title: Values
          type: object
      required:
      - patient_id
      - history_type
      - values
      title: MedicalHistoryCreate
      type: object
    MedicalHistorySearchQuery:
      properties:
        date_from:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Start date filter
          title: Date From
        date_to:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: End date filter
          title: Date To
        device_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by device ID
          title: Device Id
        device_type:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by device type
          title: Device Type
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by patient ID
          title: Patient Id
        search:
          anyOf:
          - type: string
          - type: 'null'
          description: General search across data fields
          title: Search
        value_max:
          anyOf:
          - type: number
          - type: 'null'
          description: Maximum value filter (for numeric data)
          title: Value Max
        value_min:
          anyOf:
          - type: number
          - type: 'null'
          description: Minimum value filter (for numeric data)
          title: Value Min
      title: MedicalHistorySearchQuery
      type: object
    MedicalHistoryUpdate:
      properties:
        device_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Id
        device_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Type
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        timestamp:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Timestamp
        values:
          anyOf:
          - type: object
          - type: 'null'
          title: Values
      title: MedicalHistoryUpdate
      type: object
    MedicalTrendsResponse:
      description: Response model for medical trends analysis
      properties:
        data:
          description: Medical trends data with analytics
          title: Data
          type: object
        message:
          description: Response message
          title: Message
          type: string
        success:
          default: true
          description: Request success status
          title: Success
          type: boolean
      required:
      - message
      - data
      title: MedicalTrendsResponse
      type: object
    PatientCreate:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          title: Address
        ava_mac_address:
          anyOf:
          - type: string
          - type: 'null'
          title: Ava Mac Address
        birth_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Birth Date
        blood_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Blood Type
        bmi:
          anyOf:
          - type: number
          - type: 'null'
          title: Bmi
        district_code:
          anyOf:
          - type: string
          - type: 'null'
          title: District Code
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        emergency_contact_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Emergency Contact Name
        emergency_contact_phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Emergency Contact Phone
        emergency_contact_relationship:
          anyOf:
          - type: string
          - type: 'null'
          title: Emergency Contact Relationship
        first_name:
          title: First Name
          type: string
        gender:
          title: Gender
          type: string
        height:
          anyOf:
          - type: number
          - type: 'null'
          title: Height
        id_card:
          anyOf:
          - type: string
          - type: 'null'
          title: Id Card
        last_name:
          title: Last Name
          type: string
        new_hospital_ids:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: New Hospital Ids
        nickname:
          anyOf:
          - type: string
          - type: 'null'
          title: Nickname
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        postal_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Postal Code
        province_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Province Code
        sub_district_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Sub District Code
        watch_mac_address:
          anyOf:
          - type: string
          - type: 'null'
          title: Watch Mac Address
        weight:
          anyOf:
          - type: number
          - type: 'null'
          title: Weight
      required:
      - first_name
      - last_name
      - gender
      title: PatientCreate
      type: object
    PatientDeviceRegistry:
      description: Model for patient medical device registry
      properties:
        group:
          anyOf:
          - type: string
          - type: 'null'
          description: Device group/organization
          title: Group
        mac_body_temp:
          anyOf:
          - type: string
          - type: 'null'
          description: Body temperature sensor MAC address
          title: Mac Body Temp
        mac_bps:
          anyOf:
          - type: string
          - type: 'null'
          description: Blood pressure monitor MAC address
          title: Mac Bps
        mac_chol:
          anyOf:
          - type: string
          - type: 'null'
          description: Cholesterol meter MAC address
          title: Mac Chol
        mac_dusun_bps:
          anyOf:
          - type: string
          - type: 'null'
          description: Dusun blood pressure monitor MAC address
          title: Mac Dusun Bps
        mac_gluc:
          anyOf:
          - type: string
          - type: 'null'
          description: Glucose meter MAC address
          title: Mac Gluc
        mac_gw:
          anyOf:
          - type: string
          - type: 'null'
          description: Gateway MAC address (AVA4 box)
          title: Mac Gw
        mac_mgss_oxymeter:
          anyOf:
          - type: string
          - type: 'null'
          description: MGSS oximeter MAC address
          title: Mac Mgss Oxymeter
        mac_oxymeter:
          anyOf:
          - type: string
          - type: 'null'
          description: Oximeter MAC address
          title: Mac Oxymeter
        mac_salt_meter:
          anyOf:
          - type: string
          - type: 'null'
          description: Salt meter MAC address
          title: Mac Salt Meter
        mac_ua:
          anyOf:
          - type: string
          - type: 'null'
          description: Uric acid meter MAC address
          title: Mac Ua
        mac_watch:
          anyOf:
          - type: string
          - type: 'null'
          description: Smart watch MAC address
          title: Mac Watch
        mac_weight:
          anyOf:
          - type: string
          - type: 'null'
          description: Weight scale MAC address
          title: Mac Weight
        patient_id:
          description: Patient ID these devices belong to
          title: Patient Id
          type: string
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Healthcare provider managing this patient's devices
          title: User Id
      required:
      - patient_id
      title: PatientDeviceRegistry
      type: object
    PatientDeviceRegistryUpdate:
      description: Model for updating patient medical device registry
      properties:
        group:
          anyOf:
          - type: string
          - type: 'null'
          description: Device group/organization
          title: Group
        mac_body_temp:
          anyOf:
          - type: string
          - type: 'null'
          description: Body temperature sensor MAC address
          title: Mac Body Temp
        mac_bps:
          anyOf:
          - type: string
          - type: 'null'
          description: Blood pressure monitor MAC address
          title: Mac Bps
        mac_chol:
          anyOf:
          - type: string
          - type: 'null'
          description: Cholesterol meter MAC address
          title: Mac Chol
        mac_dusun_bps:
          anyOf:
          - type: string
          - type: 'null'
          description: Dusun blood pressure monitor MAC address
          title: Mac Dusun Bps
        mac_gluc:
          anyOf:
          - type: string
          - type: 'null'
          description: Glucose meter MAC address
          title: Mac Gluc
        mac_gw:
          anyOf:
          - type: string
          - type: 'null'
          description: Gateway MAC address (AVA4 box)
          title: Mac Gw
        mac_mgss_oxymeter:
          anyOf:
          - type: string
          - type: 'null'
          description: MGSS oximeter MAC address
          title: Mac Mgss Oxymeter
        mac_oxymeter:
          anyOf:
          - type: string
          - type: 'null'
          description: Oximeter MAC address
          title: Mac Oxymeter
        mac_salt_meter:
          anyOf:
          - type: string
          - type: 'null'
          description: Salt meter MAC address
          title: Mac Salt Meter
        mac_ua:
          anyOf:
          - type: string
          - type: 'null'
          description: Uric acid meter MAC address
          title: Mac Ua
        mac_watch:
          anyOf:
          - type: string
          - type: 'null'
          description: Smart watch MAC address
          title: Mac Watch
        mac_weight:
          anyOf:
          - type: string
          - type: 'null'
          description: Weight scale MAC address
          title: Mac Weight
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Healthcare provider managing this patient's devices
          title: User Id
      title: PatientDeviceRegistryUpdate
      type: object
    PatientMedicalHistoryResponse:
      description: Response model for patient medical history
      properties:
        data:
          description: Patient medical history data
          title: Data
          type: object
        message:
          description: Response message
          title: Message
          type: string
        success:
          default: true
          description: Request success status
          title: Success
          type: boolean
      required:
      - message
      - data
      title: PatientMedicalHistoryResponse
      type: object
    PatientUpdate:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          title: Address
        ava_mac_address:
          anyOf:
          - type: string
          - type: 'null'
          title: Ava Mac Address
        birth_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Birth Date
        blood_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Blood Type
        bmi:
          anyOf:
          - type: number
          - type: 'null'
          title: Bmi
        district_code:
          anyOf:
          - type: string
          - type: 'null'
          title: District Code
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        emergency_contact_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Emergency Contact Name
        emergency_contact_phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Emergency Contact Phone
        emergency_contact_relationship:
          anyOf:
          - type: string
          - type: 'null'
          title: Emergency Contact Relationship
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        gender:
          anyOf:
          - type: string
          - type: 'null'
          title: Gender
        height:
          anyOf:
          - type: number
          - type: 'null'
          title: Height
        id_card:
          anyOf:
          - type: string
          - type: 'null'
          title: Id Card
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        new_hospital_ids:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: New Hospital Ids
        nickname:
          anyOf:
          - type: string
          - type: 'null'
          title: Nickname
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        postal_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Postal Code
        province_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Province Code
        sub_district_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Sub District Code
        watch_mac_address:
          anyOf:
          - type: string
          - type: 'null'
          title: Watch Mac Address
        weight:
          anyOf:
          - type: number
          - type: 'null'
          title: Weight
      title: PatientUpdate
      type: object
    QubeVitalDataRequest:
      properties:
        data:
          title: Data
          type: object
        device_id:
          title: Device Id
          type: string
        timestamp:
          format: date-time
          title: Timestamp
          type: string
        type:
          title: Type
          type: string
      required:
      - timestamp
      - device_id
      - type
      - data
      title: QubeVitalDataRequest
      type: object
    QubeVitalDataResponse:
      properties:
        message:
          title: Message
          type: string
        observation_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Observation Id
        success:
          title: Success
          type: boolean
      required:
      - success
      - message
      title: QubeVitalDataResponse
      type: object
    QubeVitalDeviceCreate:
      description: Model for creating a new Qube-Vital device
      properties:
        device_name:
          description: Display name for the device
          maxLength: 100
          minLength: 1
          title: Device Name
          type: string
        hospital_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Hospital ID to assign the device to
          title: Hospital Id
        imei_of_hv01_box:
          description: IMEI of the Qube-Vital HV01 box
          maxLength: 15
          minLength: 15
          title: Imei Of Hv01 Box
          type: string
        is_active:
          default: true
          description: Whether the device is active
          title: Is Active
          type: boolean
        location:
          anyOf:
          - type: string
          - type: 'null'
          description: Physical location of the device
          title: Location
        model:
          default: HV01
          description: Device model
          title: Model
          type: string
        status:
          default: inactive
          description: Device status
          title: Status
          type: string
      required:
      - imei_of_hv01_box
      - device_name
      title: QubeVitalDeviceCreate
      type: object
    QubeVitalDeviceUpdate:
      description: Model for updating a Qube-Vital device
      properties:
        device_name:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Display name for the device
          title: Device Name
        hospital_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Hospital ID to assign the device to
          title: Hospital Id
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the device is active
          title: Is Active
        location:
          anyOf:
          - type: string
          - type: 'null'
          description: Physical location of the device
          title: Location
        model:
          anyOf:
          - type: string
          - type: 'null'
          description: Device model
          title: Model
        status:
          anyOf:
          - type: string
          - type: 'null'
          description: Device status
          title: Status
      title: QubeVitalDeviceUpdate
      type: object
    RefreshRequest:
      properties:
        refresh_token:
          title: Refresh Token
          type: string
      required:
      - refresh_token
      title: RefreshRequest
      type: object
    TokenResponse:
      properties:
        access_token:
          title: Access Token
          type: string
        message:
          title: Message
          type: string
        refresh_token:
          anyOf:
          - type: string
          - type: 'null'
          title: Refresh Token
        success:
          title: Success
          type: boolean
        token_type:
          title: Token Type
          type: string
        user:
          default: {}
          title: User
          type: object
      required:
      - success
      - message
      - access_token
      - token_type
      title: TokenResponse
      type: object
    UpdateReportTemplateRequest:
      properties:
        active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Active
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        filters:
          anyOf:
          - type: object
          - type: 'null'
          title: Filters
        format:
          anyOf:
          - type: string
          - type: 'null'
          title: Format
        frequency:
          anyOf:
          - type: string
          - type: 'null'
          title: Frequency
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        recipients:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Recipients
        template_config:
          anyOf:
          - type: object
          - type: 'null'
          title: Template Config
        type:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
      title: UpdateReportTemplateRequest
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    app__models__base__SuccessResponse:
      description: Standard success response model
      properties:
        data:
          anyOf:
          - {}
          - type: 'null'
          title: Data
        message:
          title: Message
          type: string
        success:
          default: true
          title: Success
          type: boolean
        timestamp:
          format: date-time
          title: Timestamp
          type: string
      required:
      - message
      title: SuccessResponse
      type: object
    app__routes__admin__DeviceCreate:
      properties:
        device_type:
          title: Device Type
          type: string
        firmware_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Firmware Version
        hospital_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
        mac_address:
          title: Mac Address
          type: string
        model:
          anyOf:
          - type: string
          - type: 'null'
          title: Model
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          title: Serial Number
        status:
          anyOf:
          - type: string
          - type: 'null'
          default: active
          title: Status
      required:
      - device_type
      - mac_address
      title: DeviceCreate
      type: object
    app__routes__admin__DeviceUpdate:
      properties:
        firmware_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Firmware Version
        hospital_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
        mac_address:
          anyOf:
          - type: string
          - type: 'null'
          title: Mac Address
        model:
          anyOf:
          - type: string
          - type: 'null'
          title: Model
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          title: Serial Number
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      title: DeviceUpdate
      type: object
    app__routes__admin_crud__DeviceCreate:
      properties:
        device_type:
          title: Device Type
          type: string
        firmware_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Firmware Version
        hospital_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
        mac_address:
          title: Mac Address
          type: string
        model:
          anyOf:
          - type: string
          - type: 'null'
          title: Model
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          title: Serial Number
        status:
          anyOf:
          - type: string
          - type: 'null'
          default: active
          title: Status
      required:
      - device_type
      - mac_address
      title: DeviceCreate
      type: object
    app__routes__admin_crud__DeviceUpdate:
      properties:
        firmware_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Firmware Version
        hospital_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
        mac_address:
          anyOf:
          - type: string
          - type: 'null'
          title: Mac Address
        model:
          anyOf:
          - type: string
          - type: 'null'
          title: Model
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          title: Serial Number
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      title: DeviceUpdate
      type: object
    app__routes__device_crud__DeviceCreate:
      properties:
        configuration:
          anyOf:
          - type: object
          - type: 'null'
          title: Configuration
        device_type:
          title: Device Type
          type: string
        firmware_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Firmware Version
        hospital_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
        mac_address:
          title: Mac Address
          type: string
        model:
          anyOf:
          - type: string
          - type: 'null'
          title: Model
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          title: Serial Number
        status:
          anyOf:
          - type: string
          - type: 'null'
          default: active
          title: Status
      required:
      - device_type
      - mac_address
      title: DeviceCreate
      type: object
    app__routes__device_crud__DeviceUpdate:
      properties:
        configuration:
          anyOf:
          - type: object
          - type: 'null'
          title: Configuration
        firmware_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Firmware Version
        hospital_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
        mac_address:
          anyOf:
          - type: string
          - type: 'null'
          title: Mac Address
        model:
          anyOf:
          - type: string
          - type: 'null'
          title: Model
        patient_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          title: Serial Number
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      title: DeviceUpdate
      type: object
    app__utils__error_definitions__SuccessResponse:
      properties:
        data:
          anyOf:
          - type: object
          - type: 'null'
          description: Response data
          title: Data
        message:
          description: Success message
          title: Message
          type: string
        request_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Request ID for tracking
          title: Request Id
        success:
          default: true
          description: Request success status
          title: Success
          type: boolean
        timestamp:
          description: Response timestamp
          title: Timestamp
          type: string
      required:
      - message
      - timestamp
      title: SuccessResponse
      type: object
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http
info:
  contact:
    email: support@my-firstcare.com
    name: My FirstCare Development Team
    url: https://my-firstcare.com/
  description: "\n# My FirstCare Opera Panel API\n\nA comprehensive Medical IoT Device\
    \ Management System for healthcare institutions.\n\n## \U0001F3AF **Current API\
    \ Status (Updated: 2025-07-10 19:58:06)**\n\n### \u2705 **Successfully Working\
    \ Endpoints (65% Success Rate)**\n- **Master Data CRUD**: Complete operations\
    \ with pagination and bulk export\n- **Device Management**: Device mapping and\
    \ availability endpoints\n- **Patient Management**: Core patient operations with\
    \ pagination\n- **Medical History**: Management system with proper data handling\n\
    - **Hospital Users**: User management with statistics\n- **Geographic Dropdowns**:\
    \ Multi-level location selection\n- **Analytics & Security**: Core monitoring\
    \ and alert systems\n\n### \U0001F527 **Recent Improvements**\n- **Duplicate Route\
    \ Resolution**: Eliminated conflicting endpoints\n- **Real ObjectId Support**:\
    \ Using actual database IDs for testing\n- **Enhanced Pagination**: Improved large\
    \ dataset handling\n- **Better Error Handling**: Detailed error messages and validation\n\
    \n### \U0001F4CA **Endpoint Statistics**\n- **Total Endpoints**: 194 available\
    \ endpoints\n- **Tested Endpoints**: 40 critical endpoints\n- **Working**: 26\
    \ endpoints (65%)\n- **Failed**: 10 endpoints (25%)\n- **Skipped**: 4 endpoints\
    \ (10%)\n\n## Features\n\n### \U0001F3E5 **Device Management**\n- **AVA4 Devices**:\
    \ Blood pressure, glucose monitoring\n- **Kati Watches**: Continuous vital sign\
    \ monitoring \n- **Qube-Vital**: Advanced medical sensors\n\n### \U0001F465 **Patient\
    \ Management**\n- Complete patient profiles and medical history\n- Real-time device\
    \ data integration\n- Multi-hospital support\n- **Raw Document Access**: 431 patients\
    \ with 269 fields per document\n\n### \U0001F4CB **Raw Patient Document Analysis**\n\
    Access complete MongoDB patient documents with comprehensive field analysis:\n\
    \n#### **Core Patient Fields (269 total)**:\n- **Demographics**: `first_name`,\
    \ `last_name`, `gender`, `birth_date`, `id_card`, `phone`\n- **Location**: `address_1`,\
    \ `address_2`, `province_code`, `district_code`, `sub_district_code`\n- **Medical\
    \ IDs**: `amy_id`, `hn_id_no`, `patient_id`\n- **Emergency Contacts**: `emergency_contact_name`,\
    \ `emergency_contact_phone`\n\n#### **Medical Device Integration (MAC Addresses)**:\n\
    - **AVA4 Devices**: `ava_mac_address`, `ava_box_id`, `ava_sim_card`\n- **Blood\
    \ Pressure**: `blood_pressure_mac_address`\n- **Blood Glucose**: `blood_glucose_mac_address`\n\
    - **Temperature**: `body_temperature_mac_address`\n- **Pulse Oximetry**: `fingertip_pulse_oximeter_mac_address`\n\
    - **Smartwatches**: `watch_mac_address`\n- **Cholesterol**: `cholesterol_mac_address`\n\
    \n#### **Medical Alert Thresholds**:\n- **Blood Pressure**: `bp_sbp_above`, `bp_sbp_below`,\
    \ `bp_dbp_above`, `bp_dbp_below`\n- **Blood Sugar**: `glucose_normal_before`,\
    \ `glucose_normal_after`\n- **Temperature**: `temperature_normal_above`, `temperature_normal_below`\n\
    - **SPO2**: `spo2_normal_above`, `spo2_normal_below`\n- **Cholesterol**: `cholesterol_above`,\
    \ `cholesterol_below`\n\n#### **Medical History Fields**:\n- **Vital Signs**:\
    \ Blood pressure, temperature, SPO2, heart rate\n- **Lab Results**: Creatinine,\
    \ cholesterol, BUN levels\n- **Body Metrics**: Weight, BMI, body composition\n\
    - **Medication**: Current medications, allergies, dosages\n- **Activity**: Sleep\
    \ data, step counts, exercise patterns\n\n#### **Raw Document Endpoints**:\n-\
    \ `GET /admin/patients-raw-documents` - Admin access to raw patient documents\n\
    - `GET /api/ava4/patients/raw-documents` - AVA4 specific raw patient data\n- `GET\
    \ /api/ava4/sub-devices/raw-documents` - Raw device documents with patient linkages\n\
    \n### \U0001F510 **Security & Authentication**\n- **JWT-based Authentication**:\
    \ All protected endpoints require Bearer tokens\n- **Stardust-V1 Integration**:\
    \ Centralized authentication system\n- **FHIR R5 Audit Logging**: Complete audit\
    \ trail\n- **Role-based Access Control**: Fine-grained permissions\n\n### \U0001F4CA\
    \ **Analytics & Monitoring**\n- Real-time dashboards\n- Performance metrics\n\
    - Alert management\n- Medical trend analysis\n\n## Data Structure Analysis\n\n\
    ### **Patient Document Structure (431 Documents)**\nEach patient document contains\
    \ **269 fields** including:\n\n1. **Core Demographics** (15 fields): Name, contact,\
    \ identification\n2. **Medical Device MAC Addresses** (12 fields): IoT device\
    \ integration\n3. **Alert Thresholds** (24 fields): Customizable medical alert\
    \ limits\n4. **Medical History Integration** (50+ fields): Historical data references\n\
    5. **Hospital Integration** (10 fields): Multi-hospital support\n6. **Audit Fields**\
    \ (8 fields): Created, updated, deleted tracking\n7. **Additional Medical Data**\
    \ (150+ fields): Comprehensive health metrics\n\n### **Raw Document Analysis Features**\n\
    - **Field Type Analysis**: Automatic detection of data types per field\n- **Sample\
    \ Value Extraction**: Preview of actual field values\n- **ObjectId Identification**:\
    \ MongoDB relationship mapping\n- **Field Usage Statistics**: Count of populated\
    \ fields across documents\n- **JSON Structure Preservation**: Complete document\
    \ hierarchy maintained\n\n## Authentication\n\nMost endpoints require authentication\
    \ using JWT Bearer tokens:\n\n1. **Obtain Token**: Use `/auth/login` with valid\
    \ credentials\n2. **Use Token**: Include `Authorization: Bearer <token>` header\n\
    3. **Refresh Token**: Use `/auth/refresh` when token expires\n\n### Public Endpoints\
    \ (No Authentication Required)\n- `GET /` - API information\n- `GET /health` -\
    \ System health check\n- `GET /docs` - API documentation\n- `GET /api/kati/test`\
    \ - Kati API test endpoint\n- `POST /auth/login` - Authentication login\n- `POST\
    \ /auth/refresh` - Token refresh\n\n### Protected Endpoints (Authentication Required)\n\
    - All `/admin/*` endpoints\n- All `/api/*/devices` endpoints  \n- All `/api/*/data`\
    \ endpoints\n- `/auth/me` - Current user information\n\n### **Raw Patient Document\
    \ Endpoints** (Authentication Required)\n- `GET /admin/patients` - Complete patient\
    \ documents (269 fields)\n- `GET /admin/patients-raw-documents` - Raw document\
    \ analysis\n- `GET /api/ava4/patients/raw-documents` - AVA4 patient raw data\n\
    - `GET /api/ava4/sub-devices/raw-documents` - Device-patient linkages\n\n## Error\
    \ Handling\n\nThe API uses structured error responses with:\n- Consistent error\
    \ codes and messages\n- Request ID tracking\n- Detailed field validation\n- Security\
    \ event logging\n\n## Rate Limiting & Security\n\n- Brute force detection\n- SQL\
    \ injection monitoring  \n- Request rate limiting\n- Comprehensive audit logging\n\
    \n## Database Statistics\n\n- **431 Patients** with complete medical profiles\n\
    - **269 Fields per Patient Document** \n- **6,898 Medical Records** across 14\
    \ collections\n- **Real-time IoT Device Integration**\n- **FHIR R5 Compliant Audit\
    \ Logging**\n\n## \U0001F6A8 **Known Issues & Limitations**\n\n### **High Priority\
    \ Issues**\n- Device listing endpoint returns 500 error\n- Patient search parameter\
    \ validation needs fixing\n- Hospital user search parameter validation needs fixing\n\
    \n### **Medium Priority Issues**\n- Logout endpoint not implemented\n- Token refresh\
    \ parameter validation needs fixing\n- Medical history search functionality missing\n\
    - Performance monitoring MongoDB service issues\n\n### **Low Priority Issues**\n\
    - Rate limit blacklist GET method not implemented\n\n## \U0001F504 **Recent Changes**\n\
    \n### **Duplicate Route Resolution**\n- Removed conflicting routes between `admin.py`\
    \ and `admin_crud.py`\n- Consolidated all CRUD operations in `admin.py`\n- Preserved\
    \ unique medical history endpoint\n- Eliminated route conflicts and overrides\n\
    \n### **Testing Improvements**\n- Implemented comprehensive endpoint testing\n\
    - Added real ObjectId support for testing\n- Created detailed error reporting\n\
    - Established baseline performance metrics\n"
  license:
    name: Proprietary
    url: https://my-firstcare.com/license
  title: My FirstCare Opera Panel API (Updated)
  version: 2.1.0
openapi: 3.1.0
paths:
  /:
    get:
      description: Root endpoint
      operationId: root__get
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  docs: /docs
                  endpoints:
                    admin: /admin
                    authentication: /auth
                    ava4: /ava4
                    device_lookup: /api/medical-devices
                    device_mapping: /admin/device-mapping
                    kati: /kati
                    patient_devices: /api/patients
                    qube_vital: /qube-vital
                  health: /health
                  version: 1.0.0
                message: My FirstCare Opera Panel API
                request_id: c3d4e5f6-g7h8-9012-cdef-345678901234
                success: true
                timestamp: '2025-07-07T07:08:07.633870Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: API information and endpoints
      summary: Root
  /admin/analytics:
    get:
      description: Get dashboard analytics
      operationId: get_analytics_admin_analytics_get
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Analytics Admin Analytics Get
                type: object
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Analytics
      tags:
      - admin
      - Admin Panel
  /admin/audit-log:
    get:
      description: Get audit logs
      operationId: get_audit_logs_admin_audit_log_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      - in: query
        name: resource_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Resource Type
      - in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
      - in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Start Date
      - in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: End Date
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Audit Logs Admin Audit Log Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Audit Logs
      tags:
      - admin
      - Admin Panel
  /admin/device-mapping/:
    get:
      description: Get device mappings with filtering and pagination
      operationId: get_device_mappings_admin_device_mapping__get
      parameters:
      - description: Filter by patient ID
        in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by patient ID
          title: Patient Id
      - description: Filter by device type
        in: query
        name: device_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by device type
          title: Device Type
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Device Mappings Admin Device Mapping  Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Device Mappings
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/ava4-box:
    post:
      description: Assign AVA4 box to patient
      operationId: assign_ava4_box_admin_device_mapping_ava4_box_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AVA4BoxAssignment'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Assign Ava4 Box Admin Device Mapping Ava4 Box Post
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Assign Ava4 Box
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/ava4-box/{box_id}:
    delete:
      description: Unassign AVA4 box from patient
      operationId: unassign_ava4_box_admin_device_mapping_ava4_box__box_id__delete
      parameters:
      - in: path
        name: box_id
        required: true
        schema:
          title: Box Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Unassign Ava4 Box Admin Device Mapping Ava4 Box  Box
                  Id  Delete
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Unassign Ava4 Box
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/available/ava4-boxes:
    get:
      description: Get available AVA4 boxes (not assigned to any patient)
      operationId: get_available_ava4_boxes_admin_device_mapping_available_ava4_boxes_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Available Ava4 Boxes Admin Device Mapping Available
                  Ava4 Boxes Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Available Ava4 Boxes
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/available/kati-watches:
    get:
      description: Get available Kati watches (not assigned to any patient)
      operationId: get_available_kati_watches_admin_device_mapping_available_kati_watches_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Available Kati Watches Admin Device Mapping Available
                  Kati Watches Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Available Kati Watches
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/device-types:
    get:
      description: Get available device types with their descriptions
      operationId: get_device_types_admin_device_mapping_device_types_get
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Device Types Admin Device Mapping Device Types
                  Get
                type: object
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Device Types
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/kati-watch:
    post:
      description: Assign Kati watch to patient
      operationId: assign_kati_watch_admin_device_mapping_kati_watch_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KatiWatchAssignment'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Assign Kati Watch Admin Device Mapping Kati Watch
                  Post
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Assign Kati Watch
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/kati-watch/{watch_id}:
    delete:
      description: Unassign Kati watch from patient
      operationId: unassign_kati_watch_admin_device_mapping_kati_watch__watch_id__delete
      parameters:
      - in: path
        name: watch_id
        required: true
        schema:
          title: Watch Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Unassign Kati Watch Admin Device Mapping Kati Watch  Watch
                  Id  Delete
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Unassign Kati Watch
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/medical-device:
    post:
      description: Assign medical device to patient
      operationId: assign_medical_device_admin_device_mapping_medical_device_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalDeviceCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Assign Medical Device Admin Device Mapping Medical
                  Device Post
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Assign Medical Device
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/medical-device/{device_id}:
    delete:
      description: Remove medical device assignment
      operationId: remove_medical_device_admin_device_mapping_medical_device__device_id__delete
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      - description: Device type to remove
        in: query
        name: device_type
        required: true
        schema:
          description: Device type to remove
          title: Device Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Remove Medical Device Admin Device Mapping Medical
                  Device  Device Id  Delete
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Remove Medical Device
      tags:
      - device-mapping
      - Device Mapping
    put:
      description: Update medical device assignment
      operationId: update_medical_device_admin_device_mapping_medical_device__device_id__put
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalDeviceUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Update Medical Device Admin Device Mapping Medical
                  Device  Device Id  Put
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Medical Device
      tags:
      - device-mapping
      - Device Mapping
  /admin/device-mapping/{patient_id}:
    get:
      description: Get device mapping for a specific patient
      operationId: get_patient_device_mapping_admin_device_mapping__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Patient Device Mapping Admin Device Mapping  Patient
                  Id  Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patient Device Mapping
      tags:
      - device-mapping
      - Device Mapping
  /admin/devices:
    get:
      description: Get devices by type
      operationId: get_devices_admin_devices_get
      parameters:
      - in: query
        name: device_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Type
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Devices Admin Devices Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Devices
      tags:
      - admin
      - Admin Panel
    post:
      description: Create new device
      operationId: admin_create_device_admin_devices_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__routes__admin_crud__DeviceCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Admin Create Device
      tags:
      - admin-crud
      - Admin Panel CRUD
  /admin/devices/{device_id}:
    delete:
      description: Soft delete device
      operationId: admin_delete_device_admin_devices__device_id__delete
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      - description: 'Device type: ava4, kati, qube-vital'
        in: query
        name: device_type
        required: true
        schema:
          description: 'Device type: ava4, kati, qube-vital'
          title: Device Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Admin Delete Device
      tags:
      - admin-crud
      - Admin Panel CRUD
    get:
      description: Get specific device by ID
      operationId: admin_get_device_admin_devices__device_id__get
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      - description: 'Device type: ava4, kati, qube-vital'
        in: query
        name: device_type
        required: true
        schema:
          description: 'Device type: ava4, kati, qube-vital'
          title: Device Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Admin Get Device
      tags:
      - admin-crud
      - Admin Panel CRUD
    put:
      description: Update device
      operationId: admin_update_device_admin_devices__device_id__put
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      - description: 'Device type: ava4, kati, qube-vital'
        in: query
        name: device_type
        required: true
        schema:
          description: 'Device type: ava4, kati, qube-vital'
          title: Device Type
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__routes__admin_crud__DeviceUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Admin Update Device
      tags:
      - admin-crud
      - Admin Panel CRUD
  /admin/dropdown/districts:
    get:
      description: "## District Dropdown Endpoint\n\nOptimized endpoint for district\
        \ dropdown lists in forms with province filtering and flexible options.\n\n\
        ### Features:\n- **Cascading Filter**: Filter by province_code for cascading\
        \ dropdowns\n- **Lightweight Response**: Only essential fields (code, en_name,\
        \ th_name)\n- **Fast Performance**: Minimal data transfer\n- **Sorted Results**:\
        \ Alphabetically sorted by English name\n- **Flexible Filtering**: Optional\
        \ inclusion of inactive/deleted records\n- **Search Support**: Optional text\
        \ search across district names\n\n### Query Parameters:\n- `province_code`\
        \ (required): Province code to filter districts\n- `include_inactive` (optional):\
        \ Include inactive districts (default: false)\n- `include_deleted` (optional):\
        \ Include soft-deleted districts (default: false)\n- `search` (optional):\
        \ Search text across English and Thai names\n- `limit` (optional): Maximum\
        \ number of results (default: unlimited)\n- `sort_by` (optional): Sort field\
        \ - 'en_name' or 'code' (default: 'en_name')\n\n### Response Format:\n```json\n\
        {\n  \"success\": true,\n  \"data\": {\n    \"districts\": [\n      {\"code\"\
        : 1003, \"en_name\": \"Khet Pathum Wan\", \"th_name\": \"\u0E40\u0E02\u0E15\
        \u0E1B\u0E17\u0E38\u0E21\u0E27\u0E31\u0E19\", \"is_active\": true},\n    \
        \  {\"code\": 1008, \"en_name\": \"Khet Pom Prap Sattru Phai\", \"th_name\"\
        : \"\u0E40\u0E02\u0E15\u0E1B\u0E49\u0E2D\u0E21\u0E1B\u0E23\u0E32\u0E1A\u0E28\
        \u0E31\u0E15\u0E23\u0E39\u0E1E\u0E48\u0E32\u0E22\", \"is_active\": true}\n\
        \    ],\n    \"total\": 12,\n    \"province_code\": 10,\n    \"filters_applied\"\
        : {\n      \"include_inactive\": false,\n      \"include_deleted\": false,\n\
        \      \"search\": null\n    }\n  }\n}\n```\n\n### Use Cases:\n- District\
        \ dropdown after province selection\n- Cascading geographic forms\n- Hospital\
        \ location filtering\n- Address completion forms\n- Administrative management\
        \ (with inactive/deleted records)\n\n### Authentication:\nRequires valid JWT\
        \ Bearer token."
      operationId: get_districts_dropdown_admin_dropdown_districts_get
      parameters:
      - description: Province code to filter districts
        in: query
        name: province_code
        required: true
        schema:
          description: Province code to filter districts
          title: Province Code
          type: integer
      - description: Include inactive districts
        in: query
        name: include_inactive
        required: false
        schema:
          default: false
          description: Include inactive districts
          title: Include Inactive
          type: boolean
      - description: Include soft-deleted districts
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          description: Include soft-deleted districts
          title: Include Deleted
          type: boolean
      - description: Search text across district names
        in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search text across district names
          title: Search
      - description: Maximum number of results
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - maximum: 1000
            minimum: 1
            type: integer
          - type: 'null'
          description: Maximum number of results
          title: Limit
      - description: 'Sort field: ''en_name'' or ''code'''
        in: query
        name: sort_by
        required: false
        schema:
          default: en_name
          description: 'Sort field: ''en_name'' or ''code'''
          title: Sort By
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  districts:
                  - code: 1003
                    en_name: Khet Pathum Wan
                    is_active: true
                    th_name: "\u0E40\u0E02\u0E15\u0E1B\u0E17\u0E38\u0E21\u0E27\u0E31\
                      \u0E19"
                  - code: 1008
                    en_name: Khet Pom Prap Sattru Phai
                    is_active: true
                    th_name: "\u0E40\u0E02\u0E15\u0E1B\u0E49\u0E2D\u0E21\u0E1B\u0E23\
                      \u0E32\u0E1A\u0E28\u0E31\u0E15\u0E23\u0E39\u0E1E\u0E48\u0E32\
                      \u0E22"
                  filters_applied:
                    include_deleted: false
                    include_inactive: false
                  province_code: 10
                  total: 12
                message: Districts retrieved successfully for dropdown
                request_id: dropdown-002
                success: true
                timestamp: '2025-01-08T05:42:00.000Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Districts retrieved successfully for dropdown
        '400':
          description: Province code is required
        '401':
          description: Authentication required
        '404':
          description: Province not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Districts for Dropdown
      tags:
      - admin
      - Admin Panel
  /admin/dropdown/provinces:
    get:
      description: "## Province Dropdown Endpoint\n\nOptimized endpoint for province\
        \ dropdown lists in forms with flexible filtering options.\n\n### Features:\n\
        - **Lightweight Response**: Only essential fields (code, en_name, th_name)\n\
        - **Fast Performance**: Minimal data transfer\n- **Sorted Results**: Alphabetically\
        \ sorted by English name\n- **Flexible Filtering**: Optional inclusion of\
        \ inactive/deleted records\n- **Search Support**: Optional text search across\
        \ province names\n- **Pagination**: Optional limit for large datasets\n\n\
        ### Query Parameters:\n- `include_inactive` (optional): Include inactive provinces\
        \ (default: false)\n- `include_deleted` (optional): Include soft-deleted provinces\
        \ (default: false)\n- `search` (optional): Search text across English and\
        \ Thai names\n- `limit` (optional): Maximum number of results (default: unlimited)\n\
        - `sort_by` (optional): Sort field - 'en_name' or 'code' (default: 'en_name')\n\
        \n### Response Format:\n```json\n{\n  \"success\": true,\n  \"data\": {\n\
        \    \"provinces\": [\n      {\"code\": 10, \"en_name\": \"Bangkok\", \"th_name\"\
        : \"\u0E01\u0E23\u0E38\u0E07\u0E40\u0E17\u0E1E\u0E21\u0E2B\u0E32\u0E19\u0E04\
        \u0E23\", \"is_active\": true},\n      {\"code\": 11, \"en_name\": \"Samut\
        \ Prakan\", \"th_name\": \"\u0E2A\u0E21\u0E38\u0E17\u0E23\u0E1B\u0E23\u0E32\
        \u0E01\u0E32\u0E23\", \"is_active\": true}\n    ],\n    \"total\": 79,\n \
        \   \"filters_applied\": {\n      \"include_inactive\": false,\n      \"include_deleted\"\
        : false,\n      \"search\": null\n    }\n  }\n}\n```\n\n### Use Cases:\n-\
        \ Province dropdown in patient registration forms\n- Hospital search filters\n\
        - Address selection forms\n- Geographic filtering interfaces\n- Administrative\
        \ management (with inactive/deleted records)\n\n### Authentication:\nRequires\
        \ valid JWT Bearer token."
      operationId: get_provinces_dropdown_admin_dropdown_provinces_get
      parameters:
      - description: Include inactive provinces
        in: query
        name: include_inactive
        required: false
        schema:
          default: false
          description: Include inactive provinces
          title: Include Inactive
          type: boolean
      - description: Include soft-deleted provinces
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          description: Include soft-deleted provinces
          title: Include Deleted
          type: boolean
      - description: Search text across province names
        in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search text across province names
          title: Search
      - description: Maximum number of results
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - maximum: 1000
            minimum: 1
            type: integer
          - type: 'null'
          description: Maximum number of results
          title: Limit
      - description: 'Sort field: ''en_name'' or ''code'''
        in: query
        name: sort_by
        required: false
        schema:
          default: en_name
          description: 'Sort field: ''en_name'' or ''code'''
          title: Sort By
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  filters_applied:
                    include_deleted: false
                    include_inactive: false
                  provinces:
                  - code: 10
                    en_name: Bangkok
                    is_active: true
                    th_name: "\u0E01\u0E23\u0E38\u0E07\u0E40\u0E17\u0E1E\u0E21\u0E2B\
                      \u0E32\u0E19\u0E04\u0E23"
                  - code: 11
                    en_name: Samut Prakan
                    is_active: true
                    th_name: "\u0E2A\u0E21\u0E38\u0E17\u0E23\u0E1B\u0E23\u0E32\u0E01\
                      \u0E32\u0E23"
                  - code: 12
                    en_name: Nonthaburi
                    is_active: true
                    th_name: "\u0E19\u0E19\u0E17\u0E1A\u0E38\u0E23\u0E35"
                  total: 6
                message: Provinces retrieved successfully for dropdown
                request_id: dropdown-001
                success: true
                timestamp: '2025-01-08T05:42:00.000Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Provinces retrieved successfully for dropdown
        '401':
          description: Authentication required
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Provinces for Dropdown
      tags:
      - admin
      - Admin Panel
  /admin/dropdown/sub-districts:
    get:
      description: "## Sub-District Dropdown Endpoint\n\nOptimized endpoint for sub-district\
        \ dropdown lists in forms with province and district filtering.\n\n### Features:\n\
        - **Cascading Filter**: Filter by province_code and district_code for cascading\
        \ dropdowns\n- **Lightweight Response**: Only essential fields (code, en_name,\
        \ th_name)\n- **Fast Performance**: Minimal data transfer\n- **Sorted Results**:\
        \ Alphabetically sorted by English name\n- **Active Only**: Returns only active,\
        \ non-deleted sub-districts\n\n### Query Parameters:\n- `province_code` (required):\
        \ Province code to filter sub-districts\n- `district_code` (required): District\
        \ code to filter sub-districts\n\n### Response Format:\n```json\n{\n  \"success\"\
        : true,\n  \"data\": {\n    \"sub_districts\": [\n      {\"code\": 100301,\
        \ \"en_name\": \"Khwaeng Lumphini\", \"th_name\": \"\u0E41\u0E02\u0E27\u0E07\
        \u0E25\u0E38\u0E21\u0E1E\u0E34\u0E19\u0E35\"},\n      {\"code\": 100302, \"\
        en_name\": \"Khwaeng Pathum Wan\", \"th_name\": \"\u0E41\u0E02\u0E27\u0E07\
        \u0E1B\u0E17\u0E38\u0E21\u0E27\u0E31\u0E19\"}\n    ],\n    \"total\": 6,\n\
        \    \"province_code\": 10,\n    \"district_code\": 1003\n  }\n}\n```\n\n\
        ### Use Cases:\n- Sub-district dropdown after district selection\n- Complete\
        \ cascading geographic forms\n- Detailed address forms\n- Hospital location\
        \ specification\n\n### Authentication:\nRequires valid JWT Bearer token."
      operationId: get_sub_districts_dropdown_admin_dropdown_sub_districts_get
      parameters:
      - description: Province code to filter sub-districts
        in: query
        name: province_code
        required: true
        schema:
          description: Province code to filter sub-districts
          title: Province Code
          type: integer
      - description: District code to filter sub-districts
        in: query
        name: district_code
        required: true
        schema:
          description: District code to filter sub-districts
          title: District Code
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  district_code: 1003
                  province_code: 10
                  sub_districts:
                  - code: 100301
                    en_name: Khwaeng Lumphini
                    th_name: "\u0E41\u0E02\u0E27\u0E07\u0E25\u0E38\u0E21\u0E1E\u0E34\
                      \u0E19\u0E35"
                  - code: 100302
                    en_name: Khwaeng Pathum Wan
                    th_name: "\u0E41\u0E02\u0E27\u0E07\u0E1B\u0E17\u0E38\u0E21\u0E27\
                      \u0E31\u0E19"
                  total: 6
                message: Sub-districts retrieved successfully for dropdown
                request_id: dropdown-003
                success: true
                timestamp: '2025-01-08T05:42:00.000Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Sub-districts retrieved successfully for dropdown
        '400':
          description: Province code and district code are required
        '401':
          description: Authentication required
        '404':
          description: Province or district not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Sub-Districts for Dropdown
      tags:
      - admin
      - Admin Panel
  /admin/hospital-users:
    get:
      description: Get hospital users with filtering and pagination
      operationId: get_hospital_users_admin_hospital_users_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      - in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
      - in: query
        name: type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: is_active
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  has_next: false
                  has_prev: false
                  limit: 100
                  skip: 0
                  total: 72
                  users:
                  - _id: 6638a496f7ce6d32b68120f1
                    country_code: Th
                    country_name: Thailand
                    country_phone_code: '+66'
                    created_at: '2024-05-06T11:18:26.717Z'
                    email: kitkamon@tely360.com
                    first_name: Kitkamon
                    hospital_id: 6814838ae1b89fa275c66868
                    image_url: user_profiles/6638bc8209ecee510e15a28844XQ.jpg
                    is_active: true
                    is_deleted: false
                    last_name: Maitree
                    phone: '813618766'
                    type: 663220b2a9e900f9ded0a62f
                    unique_id: 2
                    updated_at: '2025-06-24T02:37:38.939Z'
                    user_title: Mr.
                message: Hospital users retrieved successfully
                request_id: h9i0j1k2-l3m4-5678-ijkl-901234567890
                success: true
                timestamp: '2025-07-07T07:08:07.633870Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Hospital users retrieved successfully
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Hospital Users
      tags:
      - admin
      - Admin Panel
    post:
      description: Create a new hospital user
      operationId: create_hospital_user_admin_hospital_users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalUserCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Hospital User
      tags:
      - admin
      - Admin Panel
  /admin/hospital-users/search:
    post:
      description: Advanced search for hospital users
      operationId: search_hospital_users_admin_hospital_users_search_post
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalUserSearchQuery'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Hospital Users
      tags:
      - admin
      - Admin Panel
  /admin/hospital-users/stats/summary:
    get:
      description: Get hospital users statistics
      operationId: get_hospital_users_stats_admin_hospital_users_stats_summary_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Hospital Users Stats
      tags:
      - admin
      - Admin Panel
  /admin/hospital-users/{user_id}:
    delete:
      description: Soft delete a hospital user
      operationId: delete_hospital_user_admin_hospital_users__user_id__delete
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Hospital User
      tags:
      - admin
      - Admin Panel
    get:
      description: Get a specific hospital user by ID
      operationId: get_hospital_user_admin_hospital_users__user_id__get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Hospital User
      tags:
      - admin
      - Admin Panel
    put:
      description: Update a hospital user
      operationId: update_hospital_user_admin_hospital_users__user_id__put
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalUserUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Hospital User
      tags:
      - admin
      - Admin Panel
  /admin/hospitals-raw-documents:
    get:
      description: "## Raw Hospital Document Analysis\n    \n    Access complete MongoDB\
        \ hospital documents without serialization for analysis and debugging.\n \
        \   \n    ### Features:\n    - **Complete Raw Structure**: All hospital fields\
        \ per document\n    - **Field Analysis**: Automatic data type detection and\
        \ statistics\n    - **Sample Values**: Preview of actual field content\n \
        \   - **ObjectId Mapping**: MongoDB relationship identification\n    - **Pagination\
        \ Support**: Handle large document sets efficiently\n    - **Filtering Options**:\
        \ Hospital ID and deletion status filters\n    \n    ### Document Structure:\n\
        \    \n    #### **Core Hospital Information** (15+ fields):\n    - `_id`,\
        \ `name`, `en_name`, `province_code`, `district_code`\n    - `sub_district_code`,\
        \ `organizecode`, `hospital_area_code`\n    - `is_active`, `is_deleted`, `created_at`,\
        \ `updated_at`\n    \n    #### **Enhanced Address Information** (10+ fields):\n\
        \    - `address`: Basic address string\n    - `address_details`: Detailed\
        \ address structure\n    - `location`: Geographic coordinates and precision\n\
        \    \n    #### **Contact Information** (10+ fields):\n    - `contact`: Comprehensive\
        \ contact details\n    - `phone`, `email`, `website`: Legacy contact fields\n\
        \    - `fax`, `mobile`, `emergency_phone`: Additional contact methods\n  \
        \  \n    #### **Service Information** (10+ fields):\n    - `services`: Service\
        \ and capacity details\n    - `bed_capacity`, `service_plan_type`: Legacy\
        \ service fields\n    - `emergency_services`, `trauma_center`, `icu_beds`\n\
        \    \n    #### **Digital Integration** (10+ fields):\n    - `image_url`:\
        \ Hospital image URL\n    - `auto_login_liff_id`, `disconnect_liff_id`, `login_liff_id`\n\
        \    - `mac_hv01_box`, `notifyToken`, `rich_menu_token`\n    - `telegram_Token`:\
        \ Telegram notification token\n    \n    #### **Notification Settings** (5+\
        \ fields):\n    - `is_acknowledge`, `is_admit_discard`\n    - `is_body_data`,\
        \ `is_lab_data`, `is_status_change`\n    \n    ### Query Parameters:\n   \
        \ - `limit`: Number of documents to return (1-50, default: 5)\n    - `skip`:\
        \ Number of documents to skip for pagination\n    - `hospital_id`: Filter\
        \ by specific hospital ObjectId\n    - `include_deleted`: Include soft-deleted\
        \ hospitals (default: false)\n    - `province_code`: Filter by province code\n\
        \    - `district_code`: Filter by district code\n    - `sub_district_code`:\
        \ Filter by sub-district code\n    \n    ### Response Features:\n    - **Raw\
        \ Documents**: Complete MongoDB structure preserved\n    - **Field Analysis**:\
        \ Data type detection and usage statistics\n    - **Sample Values**: Up to\
        \ 3 sample values per field\n    - **ObjectId Detection**: Automatic relationship\
        \ mapping\n    - **Pagination Info**: Total count and navigation details\n\
        \    \n    ### Use Cases:\n    - **Database Analysis**: Understand complete\
        \ hospital data structure\n    - **Integration Planning**: Map fields for\
        \ external system integration\n    - **Data Migration**: Analyze field usage\
        \ and data types\n    - **Debugging**: Inspect raw MongoDB documents\n   \
        \ - **API Development**: Understand available hospital fields\n    \n    ###\
        \ Authentication:\n    Requires valid JWT Bearer token with admin privileges."
      operationId: get_raw_hospital_documents_admin_hospitals_raw_documents_get
      parameters:
      - description: Number of raw documents to return
        in: query
        name: limit
        required: false
        schema:
          default: 5
          description: Number of raw documents to return
          maximum: 50
          minimum: 1
          title: Limit
          type: integer
      - description: Number of documents to skip
        in: query
        name: skip
        required: false
        schema:
          default: 0
          description: Number of documents to skip
          minimum: 0
          title: Skip
          type: integer
      - description: Filter by specific hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by specific hospital ID
          title: Hospital Id
      - description: Include soft-deleted hospitals
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          description: Include soft-deleted hospitals
          title: Include Deleted
          type: boolean
      - description: Filter by province code
        in: query
        name: province_code
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Filter by province code
          title: Province Code
      - description: Filter by district code
        in: query
        name: district_code
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Filter by district code
          title: District Code
      - description: Filter by sub-district code
        in: query
        name: sub_district_code
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Filter by sub-district code
          title: Sub District Code
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  field_analysis:
                    _id:
                      count: 1
                      data_types:
                      - ObjectId
                      is_object_id: true
                      sample_values:
                      - 507f1f77bcf86cd799439011
                    bed_capacity:
                      count: 1
                      data_types:
                      - int
                      is_object_id: false
                      sample_values:
                      - 500
                    name:
                      count: 1
                      data_types:
                      - array
                      is_object_id: false
                      sample_values:
                      - code: en
                        name: Bangkok General Hospital
                    province_code:
                      count: 1
                      data_types:
                      - int
                      is_object_id: false
                      sample_values:
                      - 10
                  filters:
                    include_deleted: false
                  metadata:
                    collection: hospitals
                    query_filter: '{''is_deleted'': {''$ne'': True}}'
                    timestamp: '2024-01-15T10:30:00.000000Z'
                  pagination:
                    has_more: true
                    limit: 5
                    skip: 0
                  raw_documents:
                  - __v: 2
                    _id:
                      $oid: 507f1f77bcf86cd799439011
                    address: 123 Rama IV Road, Pathum Wan, Bangkok 10330
                    bed_capacity: 500
                    created_at:
                      $date: '2024-01-15T08:00:00.000Z'
                    district_code: 1003
                    email: info@bgh.co.th
                    en_name: Bangkok General Hospital
                    hospital_area_code: '10330'
                    is_active: true
                    is_deleted: false
                    name:
                    - code: en
                      name: Bangkok General Hospital
                    - code: th
                      name: "\u0E42\u0E23\u0E07\u0E1E\u0E22\u0E32\u0E1A\u0E32\u0E25\
                        \u0E01\u0E23\u0E38\u0E07\u0E40\u0E17\u0E1E"
                    organizecode: 1001
                    phone: +66-2-123-4567
                    province_code: 10
                    service_plan_type: A
                    sub_district_code: 100301
                    updated_at:
                      $date: '2024-01-15T10:30:00.000Z'
                    website: https://www.bgh.co.th
                  returned_count: 1
                  total_count: 12350
                message: Raw hospital documents retrieved successfully
                success: true
              schema: {}
          description: Raw hospital documents retrieved successfully
        '400':
          description: Invalid hospital ID format
        '401':
          description: Authentication required
        '403':
          description: Admin privileges required
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Raw Hospital Documents
      tags:
      - admin
      - Admin Panel
      - Admin Panel
      - Raw Documents
  /admin/master-data:
    post:
      description: Create new master data record
      operationId: create_master_data_admin_master_data_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterDataCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Master Data
      tags:
      - admin-crud
      - Admin Panel CRUD
  /admin/master-data/{data_type}:
    get:
      description: "## Master Data Management\n\nGet master data by type with comprehensive\
        \ examples and multilingual support.\n\n### Query Parameters:\n- `limit`:\
        \ Number of records (1-1000, default: 100)\n- `skip`: Pagination offset (default:\
        \ 0)\n- `search`: Search across data fields\n- `is_active`: **Filter by active\
        \ status** (true/false, optional) - **Works for ALL data types**\n- `province_code`:\
        \ Filter by province code (for geographic data)\n- `district_code`: Filter\
        \ by district code (for geographic data)\n- `sub_district_code`: Filter by\
        \ sub-district code (for geographic data)\n\n### \U0001F539 **Active Status\
        \ Filtering (is_active)**\n**Available for ALL master data types:**\n- `GET\
        \ /admin/master-data/provinces?is_active=true` - Active provinces only\n-\
        \ `GET /admin/master-data/districts?is_active=false` - Inactive districts\
        \ only\n- `GET /admin/master-data/hospitals?is_active=true` - Active hospitals\
        \ only\n- `GET /admin/master-data/blood_groups?is_active=true` - Active blood\
        \ groups only\n- And so on for all data types...\n\n### Supported Data Types:\n\
        \n#### \U0001FA78 **Blood Groups** (`blood_groups`)\n- **12 Blood Types**:\
        \ Complete blood group system with Rh factors\n- **Multilingual**: English\
        \ and Thai names\n- **Examples**: AB:Rh-, O:Rh+, A:Rh-, B:Rh+, etc.\n- **Usage**:\
        \ Patient blood type classification\n- **Active Filter**: `?is_active=true/false`\n\
        \n#### \U0001F30D **Nations** (`nations`) \n- **229 Countries**: Complete\
        \ country list\n- **Multilingual**: English and Thai names\n- **Examples**:\
        \ Thailand, Argentina, United States, etc.\n- **Usage**: Patient nationality\
        \ classification\n- **Active Filter**: `?is_active=true/false`\n\n#### \U0001F3A8\
        \ **Human Skin Colors** (`human_skin_colors`)\n- **6 Skin Types**: Complete\
        \ skin color classification\n- **Multilingual**: English and Thai names  \n\
        - **Examples**: BLACK, Dark Brown, Light Brown, etc.\n- **Usage**: Patient\
        \ skin color classification\n- **Active Filter**: `?is_active=true/false`\n\
        \n#### \U0001F3E5 **Hospital Wards** (`ward_lists`)\n- **9 Ward Types**: Complete\
        \ hospital ward classification\n- **Multilingual**: English and Thai names\n\
        - **Examples**: ER, OPD, IPD, Home Ward, SLEEP LAB, KATI, R&D, etc.\n- **Usage**:\
        \ Patient ward classification and hospital department management\n- **Active\
        \ Filter**: `?is_active=true/false`\n\n#### \U0001F465 **Staff Types** (`staff_types`)\n\
        - **6 Staff Types**: Complete hospital personnel classification\n- **Multilingual**:\
        \ English and Thai names\n- **Examples**: Doctor, Nurse, Hospital Staff, Medical\
        \ Staff, Village Health Volunteer, Ambulance Operation Staff\n- **Usage**:\
        \ Hospital personnel classification and access control\n- **Active Filter**:\
        \ `?is_active=true/false`\n\n#### \U0001F3E5 **Underlying Diseases** (`underlying_diseases`)\n\
        - **8 Disease Types**: Complete underlying disease classification\n- **Multilingual**:\
        \ English and Thai names\n- **Examples**: Hypertension, Diabetes Mellitus,\
        \ Dyslipidemia, Cardiovascular Disease, Stroke, Chronic Kidney Disease\n-\
        \ **Usage**: Patient medical history and disease tracking\n- **Active Filter**:\
        \ `?is_active=true/false`\n\n#### \U0001F3E5 **Hospitals** (`hospitals`)\n\
        - **12,350+ Hospitals**: Complete hospital database\n- **Enhanced Address**:\
        \ Detailed location information\n- **Contact Info**: Phone, email, website\n\
        - **Services**: Bed capacity, emergency services\n- **Active Filter**: `?is_active=true/false`\n\
        \n#### \U0001F5FA\uFE0F **Geographic Data**\n- **Provinces** (`provinces`):\
        \ 79 provinces - **Active Filter**: `?is_active=true/false`\n- **Districts**\
        \ (`districts`): Administrative districts - **Active Filter**: `?is_active=true/false`\n\
        - **Sub-districts** (`sub_districts`): Administrative sub-districts - **Active\
        \ Filter**: `?is_active=true/false`\n\n### Response Features:\n- **Multilingual\
        \ Support**: All data includes English and Thai names\n- **Pagination**: Efficient\
        \ data loading with limit/skip\n- **Search**: Full-text search across all\
        \ fields\n- **Filtering**: Geographic and status-based filtering\n- **CRUD\
        \ Operations**: Complete Create, Read, Update, Delete support\n\n### Authentication:\n\
        Requires valid JWT Bearer token with admin privileges."
      operationId: get_master_data_admin_master_data__data_type__get
      parameters:
      - in: path
        name: data_type
        required: true
        schema:
          title: Data Type
          type: string
      - description: Number of records per page (max 5000)
        in: query
        name: limit
        required: false
        schema:
          default: 100
          description: Number of records per page (max 5000)
          maximum: 5000
          minimum: 1
          title: Limit
          type: integer
      - description: Number of records to skip for pagination
        in: query
        name: skip
        required: false
        schema:
          default: 0
          description: Number of records to skip for pagination
          minimum: 0
          title: Skip
          type: integer
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: province_code
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Province Code
      - in: query
        name: district_code
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: District Code
      - in: query
        name: sub_district_code
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Sub District Code
      - description: Filter by active status
        in: query
        name: is_active
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter by active status
          title: Is Active
      responses:
        '200':
          content:
            application/json:
              examples:
                blood_groups_response:
                  summary: Blood groups master data example
                  value:
                    data:
                      data:
                      - __v: 0
                        _id: 61f7e7ca3036bd2d8f4bb958
                        created_at: '2022-01-31T13:44:42.283Z'
                        en_name: 'AB : Rh-'
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: 'AB : Rh-'
                        - code: th
                          name: "\u0E40\u0E2D\u0E1A\u0E35 : \u0E2D\u0E32\u0E23\u0E4C\
                            \u0E40\u0E2D\u0E0A \u0E25\u0E1A"
                        unique_id: 1
                        updated_at: '2022-01-31T13:44:42.283Z'
                      - __v: 0
                        _id: 61f7e7ca3036bd2d8f4bb959
                        created_at: '2022-01-31T13:44:42.283Z'
                        en_name: 'O : Rh+'
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: 'O : Rh+'
                        - code: th
                          name: "\u0E42\u0E2D : \u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E2D\
                            \u0E0A \u0E1A\u0E27\u0E01"
                        unique_id: 2
                        updated_at: '2022-01-31T13:44:42.283Z'
                      data_type: blood_groups
                      filters: {}
                      limit: 100
                      skip: 0
                      total: 12
                    message: Master data retrieved successfully
                    request_id: g7h8i9j0-k1l2-3456-ghij-789012345678
                    success: true
                    timestamp: '2025-07-07T18:51:48.000Z'
                hospitals_response:
                  summary: Hospital data with enhanced address information
                  value:
                    data:
                      data:
                      - __v: 2
                        _id: 507f1f77bcf86cd799439011
                        address: 123 Rama IV Road, Pathum Wan, Bangkok 10330
                        address_details:
                          building_name: Medical Center Tower
                          floor: Ground Floor - 15th Floor
                          postal_box: P.O. Box 1234
                          postal_code: '10330'
                          room: 'Reception: Room 101'
                          street_address: 123 Rama IV Road
                        auto_login_liff_id: 1234567890-abcdefgh
                        bed_capacity: 500
                        contact:
                          email: info@bgh.co.th
                          email_admin: admin@bgh.co.th
                          emergency_phone: +66-2-123-1911
                          fax: +66-2-123-4569
                          mobile: +66-81-123-4567
                          phone: +66-2-123-4567
                          phone_2: +66-2-123-4568
                          website: https://www.bgh.co.th
                        created_at: '2024-01-15T08:00:00.000Z'
                        disconnect_liff_id: 1234567890-ijklmnop
                        district_code: 1003
                        email: info@bgh.co.th
                        en_name: Bangkok General Hospital
                        hospital_area_code: '10330'
                        image_url: https://cdn.bgh.co.th/logo.png
                        is_acknowledge: true
                        is_active: true
                        is_admit_discard: true
                        is_body_data: true
                        is_deleted: false
                        is_lab_data: true
                        is_status_change: true
                        location:
                          elevation: 2.5
                          latitude: 13.7563
                          longitude: 100.5018
                          precision: GPS
                        login_liff_id: 1234567890-qrstuvwx
                        mac_hv01_box: AA:BB:CC:DD:EE:FF
                        name:
                        - code: en
                          name: Bangkok General Hospital
                        - code: th
                          name: "\u0E42\u0E23\u0E07\u0E1E\u0E22\u0E32\u0E1A\u0E32\u0E25\
                            \u0E01\u0E23\u0E38\u0E07\u0E40\u0E17\u0E1E"
                        notifyToken: LINE_NOTIFY_TOKEN_123
                        organizecode: 1001
                        phone: +66-2-123-4567
                        province_code: 10
                        service_plan_type: A
                        services:
                          accreditation: JCI
                          bed_capacity: 500
                          emergency_services: true
                          icu_beds: 50
                          operating_rooms: 15
                          service_plan_type: A
                          trauma_center: true
                        sub_district_code: 100301
                        updated_at: '2024-01-15T10:30:00.000Z'
                        website: https://www.bgh.co.th
                      data_type: hospitals
                      filters: {}
                      limit: 100
                      skip: 0
                      total: 12350
                    message: Master data retrieved successfully
                    request_id: g7h8i9j0-k1l2-3456-ghij-789012345678
                    success: true
                    timestamp: '2025-01-15T10:30:00.000Z'
                human_skin_colors_response:
                  summary: Human skin colors master data example
                  value:
                    data:
                      data:
                      - __v: 0
                        _id: 61f7e6f73036bd2d8f4bb952
                        created_at: '2022-01-31T13:41:11.223Z'
                        en_name: BLACK
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: BLACK
                        - code: th
                          name: "\u0E14\u0E33"
                        unique_id: 1
                        updated_at: '2022-01-31T13:41:11.223Z'
                      - __v: 0
                        _id: 61f7e6f73036bd2d8f4bb953
                        created_at: '2022-01-31T13:41:11.223Z'
                        en_name: Dark Brown
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: Dark Brown
                        - code: th
                          name: "\u0E2A\u0E35\u0E19\u0E49\u0E33\u0E15\u0E32\u0E25\u0E40\
                            \u0E02\u0E49\u0E21"
                        unique_id: 2
                        updated_at: '2022-01-31T13:41:11.223Z'
                      data_type: human_skin_colors
                      filters: {}
                      limit: 100
                      skip: 0
                      total: 6
                    message: Master data retrieved successfully
                    request_id: g7h8i9j0-k1l2-3456-ghij-789012345678
                    success: true
                    timestamp: '2025-07-07T18:51:48.000Z'
                nations_response:
                  summary: Nations/countries master data example
                  value:
                    data:
                      data:
                      - __v: 1
                        _id: 61f8b5f33036bd2d8f4bb970
                        created_at: '2022-02-01T04:24:19.685Z'
                        en_name: Argentina
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: Argentina
                        - code: th
                          name: "\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E08\u0E19\u0E15\u0E34\
                            \u0E19\u0E32"
                        unique_id: 2
                        updated_at: '2024-05-07T10:22:17.982Z'
                      - __v: 1
                        _id: 61f8b5f33036bd2d8f4bb971
                        created_at: '2022-02-01T04:24:19.685Z'
                        en_name: Thailand
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: Thailand
                        - code: th
                          name: "\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22"
                        unique_id: 3
                        updated_at: '2024-05-07T10:22:17.982Z'
                      data_type: nations
                      filters: {}
                      limit: 100
                      skip: 0
                      total: 229
                    message: Master data retrieved successfully
                    request_id: g7h8i9j0-k1l2-3456-ghij-789012345678
                    success: true
                    timestamp: '2025-07-07T18:51:48.000Z'
                provinces_response:
                  summary: Province data example
                  value:
                    data:
                      data:
                      - _id: 507f1f77bcf86cd799439011
                        code: 10
                        en_name: Bangkok
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: Bangkok
                        - code: th
                          name: "\u0E01\u0E23\u0E38\u0E07\u0E40\u0E17\u0E1E\u0E21\u0E2B\
                            \u0E32\u0E19\u0E04\u0E23"
                      data_type: provinces
                      total: 79
                    message: Master data retrieved successfully
                    request_id: g7h8i9j0-k1l2-3456-ghij-789012345678
                    success: true
                    timestamp: '2025-01-15T10:30:00.000Z'
                staff_types_response:
                  summary: Staff types master data example
                  value:
                    data:
                      data:
                      - __v: 0
                        _id: 663220b2a9e900f9ded0a62f
                        created_at: '2024-05-01T11:00:02.415Z'
                        en_name: Doctor
                        is_active: true
                        is_deleted: false
                        is_this_userform_user: false
                        name:
                        - code: en
                          name: Doctor
                        - code: th
                          name: "\u0E41\u0E1E\u0E17\u0E22\u0E4C"
                        unique_id: 1
                        updated_at: '2024-05-06T10:21:53.354Z'
                      - __v: 0
                        _id: 663220baa9e900f9ded0a632
                        created_at: '2024-05-01T11:00:10.523Z'
                        en_name: Nurse
                        is_active: true
                        is_deleted: false
                        is_this_userform_user: false
                        name:
                        - code: en
                          name: Nurse
                        - code: th
                          name: "\u0E1E\u0E22\u0E32\u0E1A\u0E32\u0E25"
                        unique_id: 2
                        updated_at: '2024-05-06T10:22:01.705Z'
                      - __v: 0
                        _id: 66b9b9f9a144233da399c75e
                        created_at: '2024-08-12T07:30:01.617Z'
                        en_name: Ambulance Operation Staff
                        is_active: true
                        is_deleted: false
                        is_this_userform_user: true
                        name:
                        - code: en
                          name: Ambulance Operation Staff
                        - code: th
                          name: "\u0E40\u0E08\u0E49\u0E32\u0E2B\u0E19\u0E49\u0E32\u0E17\
                            \u0E35\u0E48\u0E1B\u0E0E\u0E34\u0E1A\u0E31\u0E15\u0E34\
                            \u0E01\u0E32\u0E23\u0E01\u0E32\u0E23\u0E41\u0E1E\u0E17\
                            \u0E22\u0E4C\u0E09\u0E38\u0E01\u0E40\u0E09\u0E34\u0E19"
                        unique_id: 6
                        updated_at: '2024-08-12T08:22:02.897Z'
                      data_type: staff_types
                      filters: {}
                      limit: 100
                      skip: 0
                      total: 6
                    message: Master data retrieved successfully
                    request_id: h8i9j0k1-l2m3-4567-hijk-890123456789
                    success: true
                    timestamp: '2025-07-07T19:00:00.000Z'
                underlying_diseases_response:
                  summary: Underlying diseases master data example
                  value:
                    data:
                      data:
                      - __v: 0
                        _id: 6638b07a09ecee510e15924d
                        created_at: '2024-05-06T10:27:06.626Z'
                        en_name: Hypertension
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: Hypertension
                        - code: th
                          name: Hypertension
                        unique_id: 1
                        updated_at: '2024-05-06T10:27:11.098Z'
                      - __v: 0
                        _id: 6638b09409ecee510e159281
                        created_at: '2024-05-06T10:27:32.331Z'
                        en_name: Diabetes Mellitus
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: Diabetes Mellitus
                        - code: th
                          name: Diabetes mellitus
                        unique_id: 2
                        updated_at: '2024-05-08T14:42:54.113Z'
                      - __v: 0
                        _id: 663b8f25db28c22e32c70c4c
                        created_at: '2024-05-08T14:41:41.487Z'
                        en_name: Chronic Kidney Disease
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: Chronic Kidney Disease
                        - code: th
                          name: "\u0E44\u0E15\u0E27\u0E32\u0E22\u0E40\u0E23\u0E37\u0E49\
                            \u0E2D\u0E23\u0E31\u0E07"
                        unique_id: 6
                        updated_at: '2024-05-08T14:43:14.498Z'
                      data_type: underlying_diseases
                      filters: {}
                      limit: 100
                      skip: 0
                      total: 8
                    message: Master data retrieved successfully
                    request_id: i9j0k1l2-m3n4-5678-ijkl-901234567890
                    success: true
                    timestamp: '2025-07-07T19:00:00.000Z'
                ward_lists_response:
                  summary: Hospital ward lists master data example
                  value:
                    data:
                      data:
                      - __v: 0
                        _id: 667c12928cbee167c0a48b6f
                        created_at: '2024-06-26T13:07:30.355Z'
                        en_name: ER
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: ER
                        - code: th
                          name: "\u0E09\u0E38\u0E01\u0E40\u0E09\u0E34\u0E19"
                        unique_id: 1
                        updated_at: '2025-01-15T13:47:45.279Z'
                      - __v: 0
                        _id: 667c12a38cbee167c0a48ba2
                        created_at: '2024-06-26T13:07:47.248Z'
                        en_name: OPD
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: OPD
                        - code: th
                          name: "\u0E1C\u0E39\u0E49\u0E1B\u0E48\u0E27\u0E22\u0E19\u0E2D\
                            \u0E01"
                        unique_id: 2
                        updated_at: '2024-06-26T13:07:47.248Z'
                      - __v: 0
                        _id: 668dfd03793e2577beebbf5d
                        created_at: '2024-07-10T03:16:19.542Z'
                        en_name: Home Ward
                        is_active: true
                        is_deleted: false
                        name:
                        - code: en
                          name: Home Ward
                        - code: th
                          name: "\u0E14\u0E39\u0E41\u0E25\u0E15\u0E31\u0E27\u0E40\u0E2D\
                            \u0E07\u0E17\u0E35\u0E48\u0E1A\u0E49\u0E32\u0E19"
                        unique_id: 4
                        updated_at: '2024-07-10T03:16:19.542Z'
                      data_type: ward_lists
                      filters: {}
                      limit: 100
                      skip: 0
                      total: 9
                    message: Master data retrieved successfully
                    request_id: j0k1l2m3-n4o5-6789-jklm-012345678901
                    success: true
                    timestamp: '2025-07-07T19:00:00.000Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Master data retrieved successfully
        '400':
          content:
            application/json:
              example:
                error_count: 1
                errors:
                - error_code: INVALID_DATA_TYPE
                  error_type: validation_error
                  field: data_type
                  message: 'Invalid data type. Supported types: provinces, districts,
                    sub_districts, hospitals, hospital_types, blood_groups, human_skin_colors,
                    nations, ward_lists, staff_types, underlying_diseases'
                  suggestion: Please use one of the supported data types
                  value: invalid_type
                request_id: h8i9j0k1-l2m3-4567-hijk-890123456789
                success: false
                timestamp: '2025-01-15T10:30:00.000Z'
          description: Invalid data type
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Master Data by Type
      tags:
      - admin
      - Admin Panel
    post:
      description: "## Create Master Data Record\n\nCreate a new master data record\
        \ for the specified data type.\n\n### Supported Data Types:\n- `blood_groups`,\
        \ `nations`, `human_skin_colors`, `ward_lists`, `staff_types`, `underlying_diseases`\n\
        \n### Request Body:\n```json\n{\n  \"name\": [\n    {\"code\": \"en\", \"\
        name\": \"English Name\"},\n    {\"code\": \"th\", \"name\": \"Thai Name\"\
        }\n  ],\n  \"en_name\": \"English Name\",\n  \"is_active\": true,\n  \"additional_fields\"\
        : {}\n}\n```\n\n### Features:\n- **Multilingual Support**: English and Thai\
        \ names\n- **Validation**: Automatic field validation\n- **Audit Trail**:\
        \ Automatic timestamps and user tracking\n- **Soft Delete**: Records are soft-deleted\
        \ by default\n- **Unique Constraints**: Prevents duplicate entries\n\n###\
        \ Authentication:\nRequires valid JWT Bearer token with admin privileges."
      operationId: create_master_data_admin_master_data__data_type__post
      parameters:
      - in: path
        name: data_type
        required: true
        schema:
          title: Data Type
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterDataCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '201':
          content:
            application/json:
              example:
                data:
                  __v: 0
                  _id: 663220b2a9e900f9ded0a62f
                  created_at: '2024-05-01T11:00:02.415Z'
                  en_name: New Staff Type
                  is_active: true
                  is_deleted: false
                  name:
                  - code: en
                    name: New Staff Type
                  - code: th
                    name: "\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E40\u0E08\u0E49\u0E32\
                      \u0E2B\u0E19\u0E49\u0E32\u0E17\u0E35\u0E48\u0E43\u0E2B\u0E21\
                      \u0E48"
                  unique_id: 7
                  updated_at: '2024-05-01T11:00:02.415Z'
                message: Master data record created successfully
                request_id: k1l2m3n4-o5p6-7890-klmn-123456789012
                success: true
                timestamp: '2025-07-07T19:00:00.000Z'
          description: Master data record created successfully
        '400':
          content:
            application/json:
              example:
                error_count: 1
                errors:
                - error_code: VALIDATION_ERROR
                  error_type: validation_error
                  field: name
                  message: Name is required for master data creation
                  suggestion: Please provide a valid name with English and Thai translations
                request_id: l2m3n4o5-p6q7-8901-lmno-234567890123
                success: false
                timestamp: '2025-07-07T19:00:00.000Z'
          description: Validation error or invalid data type
        '401':
          description: Authentication required
        '403':
          description: Admin privileges required
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Create Master Data Record
      tags:
      - admin
      - Admin Panel
  /admin/master-data/{data_type}/bulk-export:
    get:
      description: '## Bulk Export Master Data


        Export large datasets of master data without pagination limits for data migration
        and analysis.


        ### Features:

        - **No Pagination Limits**: Export entire datasets in one request

        - **Large Dataset Support**: Handles datasets with 10,000+ records

        - **Filtering Support**: All standard filters available

        - **Performance Optimized**: Uses streaming for large exports

        - **Memory Efficient**: Processes data in chunks


        ### Query Parameters:

        - `search`: Search across data fields

        - `is_active`: Filter by active status (true/false, optional)

        - `province_code`: Filter by province code (for geographic data)

        - `district_code`: Filter by district code (for geographic data)

        - `sub_district_code`: Filter by sub-district code (for geographic data)

        - `format`: Export format - ''json'' or ''csv'' (default: ''json'')


        ### Use Cases:

        - Data migration to external systems

        - Bulk data analysis

        - Database backups

        - Integration with reporting tools

        - Complete dataset exports


        ### Authentication:

        Requires valid JWT Bearer token with admin privileges.'
      operationId: bulk_export_master_data_admin_master_data__data_type__bulk_export_get
      parameters:
      - in: path
        name: data_type
        required: true
        schema:
          title: Data Type
          type: string
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: province_code
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Province Code
      - in: query
        name: district_code
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: District Code
      - in: query
        name: sub_district_code
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Sub District Code
      - description: Filter by active status
        in: query
        name: is_active
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter by active status
          title: Is Active
      - description: 'Export format: json or csv'
        in: query
        name: format
        required: false
        schema:
          default: json
          description: 'Export format: json or csv'
          title: Format
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  data_type: hospitals
                  export_metadata:
                    export_id: bulk-export-001
                    exported_at: '2025-07-10T03:30:00.000Z'
                    processing_time_ms: 1250
                  exported_records: 12350
                  filters_applied:
                    is_active: true
                  format: json
                  total_records: 12350
                message: Bulk export completed successfully
                success: true
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Bulk export completed successfully
        '400':
          description: Invalid data type or format
        '401':
          description: Authentication required
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Bulk Export Master Data
      tags:
      - admin
      - Admin Panel
  /admin/master-data/{data_type}/{record_id}:
    delete:
      description: Soft delete master data record
      operationId: delete_master_data_crud_admin_master_data__data_type___record_id__delete
      parameters:
      - in: path
        name: data_type
        required: true
        schema:
          title: Data Type
          type: string
      - in: path
        name: record_id
        required: true
        schema:
          title: Record Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Master Data Crud
      tags:
      - admin-crud
      - Admin Panel CRUD
    get:
      description: Get specific master data record
      operationId: get_master_data_record_admin_master_data__data_type___record_id__get
      parameters:
      - in: path
        name: data_type
        required: true
        schema:
          title: Data Type
          type: string
      - in: path
        name: record_id
        required: true
        schema:
          title: Record Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Master Data Record
      tags:
      - admin-crud
      - Admin Panel CRUD
    patch:
      description: "## Partially Update Master Data Record\n\nPartially update an\
        \ existing master data record by ID.\n\n### Supported Data Types:\n- `blood_groups`,\
        \ `nations`, `human_skin_colors`, `ward_lists`, `staff_types`, `underlying_diseases`\n\
        \n### Request Body:\n```json\n{\n  \"name\": [\n    {\"code\": \"en\", \"\
        name\": \"Updated English Name\"},\n    {\"code\": \"th\", \"name\": \"Updated\
        \ Thai Name\"}\n  ],\n  \"is_active\": false\n}\n```\n\n### Features:\n- **Partial\
        \ Updates**: Only provided fields are updated\n- **Validation**: Automatic\
        \ field validation\n- **Audit Trail**: Automatic timestamp updates\n- **Soft\
        \ Delete**: Records can be soft-deleted\n- **Multilingual Support**: English\
        \ and Thai names\n\n### Authentication:\nRequires valid JWT Bearer token with\
        \ admin privileges."
      operationId: patch_master_data_admin_master_data__data_type___record_id__patch
      parameters:
      - in: path
        name: data_type
        required: true
        schema:
          title: Data Type
          type: string
      - in: path
        name: record_id
        required: true
        schema:
          title: Record Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterDataUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  __v: 2
                  _id: 663220b2a9e900f9ded0a62f
                  created_at: '2024-05-01T11:00:02.415Z'
                  en_name: Partially Updated Staff Type
                  is_active: false
                  is_deleted: false
                  name:
                  - code: en
                    name: Partially Updated Staff Type
                  - code: th
                    name: "\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E40\u0E08\u0E49\u0E32\
                      \u0E2B\u0E19\u0E49\u0E32\u0E17\u0E35\u0E48\u0E17\u0E35\u0E48\
                      \u0E2D\u0E31\u0E1B\u0E40\u0E14\u0E15\u0E1A\u0E32\u0E07\u0E2A\
                      \u0E48\u0E27\u0E19"
                  unique_id: 1
                  updated_at: '2025-07-07T19:00:00.000Z'
                message: Master data record partially updated successfully
                request_id: n4o5p6q7-r8s9-0123-nopq-456789012345
                success: true
                timestamp: '2025-07-07T19:00:00.000Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Master data record partially updated successfully
        '400':
          description: Validation error or invalid data type
        '401':
          description: Authentication required
        '403':
          description: Admin privileges required
        '404':
          description: Record not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Partially Update Master Data Record
      tags:
      - admin
      - Admin Panel
    put:
      description: Update master data record
      operationId: update_master_data_crud_admin_master_data__data_type___record_id__put
      parameters:
      - in: path
        name: data_type
        required: true
        schema:
          title: Data Type
          type: string
      - in: path
        name: record_id
        required: true
        schema:
          title: Record Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterDataUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Master Data Crud
      tags:
      - admin-crud
      - Admin Panel CRUD
  /admin/medical-history-management/stats/overview:
    get:
      description: Get comprehensive medical history statistics
      operationId: get_medical_history_stats_admin_medical_history_management_stats_overview_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Medical History Stats
      tags:
      - admin
      - Admin Panel
  /admin/medical-history-management/{history_type}:
    get:
      description: Get medical history records with comprehensive table view and filtering
      operationId: get_medical_history_management_admin_medical_history_management__history_type__get
      parameters:
      - in: path
        name: history_type
        required: true
        schema:
          title: History Type
          type: string
      - in: query
        name: limit
        required: false
        schema:
          default: 50
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      - in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
      - in: query
        name: device_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Id
      - in: query
        name: device_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Type
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: date_from
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Date From
      - in: query
        name: date_to
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Date To
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  collection_info:
                    data_fields:
                    - systolic
                    - diastolic
                    - pulse
                    - timestamp
                    display_name: Blood Pressure History
                    record_count: 2574
                  has_next: true
                  has_prev: false
                  limit: 50
                  records:
                  - _id: 64f1234567890abcdef12345
                    created_at: '2024-01-15T10:30:00Z'
                    data:
                    - diastolic: 80
                      pulse: 72
                      systolic: 120
                      timestamp: '2024-01-15T10:30:00Z'
                    device_id: DEV001
                    device_type: AVA4
                    patient_id: 622035a5fd26d7b6d9b7730c
                    patient_name: John Doe
                    updated_at: '2024-01-15T10:30:00Z'
                  skip: 0
                  total: 2574
                message: Medical history records retrieved successfully
                success: true
              schema: {}
          description: Medical history records retrieved successfully with table view
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Medical History Management
      tags:
      - admin
      - Admin Panel
    post:
      description: Create new medical history record
      operationId: create_medical_history_record_admin_medical_history_management__history_type__post
      parameters:
      - in: path
        name: history_type
        required: true
        schema:
          title: History Type
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalHistoryCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Medical History Record
      tags:
      - admin
      - Admin Panel
  /admin/medical-history-management/{history_type}/search:
    post:
      description: Advanced search for medical history records
      operationId: search_medical_history_records_admin_medical_history_management__history_type__search_post
      parameters:
      - in: path
        name: history_type
        required: true
        schema:
          title: History Type
          type: string
      - in: query
        name: limit
        required: false
        schema:
          default: 50
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalHistorySearchQuery'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Medical History Records
      tags:
      - admin
      - Admin Panel
  /admin/medical-history-management/{history_type}/{record_id}:
    delete:
      description: Delete medical history record
      operationId: delete_medical_history_record_admin_medical_history_management__history_type___record_id__delete
      parameters:
      - in: path
        name: history_type
        required: true
        schema:
          title: History Type
          type: string
      - in: path
        name: record_id
        required: true
        schema:
          title: Record Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Medical History Record
      tags:
      - admin
      - Admin Panel
    put:
      description: Update medical history record
      operationId: update_medical_history_record_admin_medical_history_management__history_type___record_id__put
      parameters:
      - in: path
        name: history_type
        required: true
        schema:
          title: History Type
          type: string
      - in: path
        name: record_id
        required: true
        schema:
          title: Record Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalHistoryUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Medical History Record
      tags:
      - admin
      - Admin Panel
  /admin/medical-history/{history_type}:
    get:
      description: Get medical history by type
      operationId: get_medical_history_admin_medical_history__history_type__get
      parameters:
      - in: path
        name: history_type
        required: true
        schema:
          title: History Type
          type: string
      - in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      - in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Start Date
      - in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: End Date
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Medical History Admin Medical History  History
                  Type  Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Medical History
      tags:
      - admin
      - Admin Panel
  /admin/medical-history/{history_type}/{record_id}:
    get:
      description: Get specific medical history record
      operationId: get_medical_history_record_admin_medical_history__history_type___record_id__get
      parameters:
      - in: path
        name: history_type
        required: true
        schema:
          title: History Type
          type: string
      - in: path
        name: record_id
        required: true
        schema:
          title: Record Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Medical History Record
      tags:
      - admin-crud
      - Admin Panel CRUD
  /admin/patients:
    get:
      description: Get patients with filtering and pagination
      operationId: get_patients_admin_patients_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  limit: 100
                  patients:
                  - _id: 507f1f77bcf86cd799439011
                    birth_date: '1990-01-15'
                    first_name: John
                    gender: male
                    hospital_id: 507f1f77bcf86cd799439012
                    last_name: Doe
                    phone: +66-XXX-XXX-XXXX
                  skip: 0
                  total: 431
                message: Patients retrieved successfully
                request_id: e5f6g7h8-i9j0-1234-efgh-567890123456
                success: true
                timestamp: '2025-07-07T07:08:07.633870Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Patients retrieved successfully
        '401':
          content:
            application/json:
              example:
                detail: Authentication required
          description: Authentication required
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              example:
                error_count: 1
                errors:
                - error_code: INTERNAL_SERVER_ERROR
                  error_type: system_error
                  message: 'Failed to retrieve patients: Database connection error'
                  suggestion: Please try again later or contact support if the issue
                    persists
                request_id: f6g7h8i9-j0k1-2345-fghi-678901234567
                success: false
                timestamp: '2025-07-07T07:08:07.633870Z'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Patients
      tags:
      - admin
      - Admin Panel
    post:
      description: Create new patient
      operationId: create_patient_admin_patients_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Create Patient Admin Patients Post
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Patient
      tags:
      - admin
      - Admin Panel
  /admin/patients-raw-documents:
    get:
      description: "## Raw Patient Document Analysis\n    \n    Access complete MongoDB\
        \ patient documents without serialization for analysis and debugging.\n  \
        \  \n    ### Features:\n    - **Complete Raw Structure**: All 269 fields per\
        \ patient document\n    - **Field Analysis**: Automatic data type detection\
        \ and statistics\n    - **Sample Values**: Preview of actual field content\n\
        \    - **ObjectId Mapping**: MongoDB relationship identification\n    - **Pagination\
        \ Support**: Handle large document sets efficiently\n    - **Filtering Options**:\
        \ Patient ID and deletion status filters\n    \n    ### Document Structure\
        \ (269 Fields):\n    \n    #### **Core Demographics** (15 fields):\n    -\
        \ `first_name`, `last_name`, `gender`, `birth_date`\n    - `id_card`, `phone`,\
        \ `email`, `nickname`\n    - `address_1`, `address_2`, `province_code`, `district_code`\n\
        \    \n    #### **Medical Device MAC Addresses** (12 fields):\n    - `ava_mac_address`,\
        \ `watch_mac_address`\n    - `blood_pressure_mac_address`, `blood_glucose_mac_address`\n\
        \    - `body_temperature_mac_address`, `fingertip_pulse_oximeter_mac_address`\n\
        \    - `cholesterol_mac_address`\n    \n    #### **Medical Alert Thresholds**\
        \ (24 fields):\n    - Blood Pressure: `bp_sbp_above`, `bp_sbp_below`, `bp_dbp_above`,\
        \ `bp_dbp_below`\n    - Blood Sugar: `glucose_normal_before`, `glucose_normal_after`\n\
        \    - Temperature: `temperature_normal_above`, `temperature_normal_below`\n\
        \    - SPO2: `spo2_normal_above`, `spo2_normal_below`\n    - Cholesterol:\
        \ `cholesterol_above`, `cholesterol_below`\n    \n    #### **Medical History\
        \ Integration** (50+ fields):\n    - Import dates: `blood_preassure_import_date`,\
        \ `cretinines_import_date`\n    - Sources: `blood_preassure_source`, `blood_sugar_source`\n\
        \    - Symptoms: `blood_sugar_symptoms`, `blood_sugar_other_symptoms`\n  \
        \  - Lab results: `bmi`, `cholesterol`, `bun`, `creatinine`\n    \n    ####\
        \ **Hospital & Location Data** (10 fields):\n    - `hospital_data`, `new_hospital_ids`\n\
        \    - `admit_at`, `admit_status`, `date_of_visit`\n    \n    #### **Audit\
        \ & Tracking** (8 fields):\n    - `created_at`, `updated_at`, `deleted_at`\n\
        \    - `is_active`, `is_deleted`, `deleted_by`\n    \n    ### Query Parameters:\n\
        \    - `limit`: Number of documents to return (1-50, default: 5)\n    - `skip`:\
        \ Number of documents to skip for pagination\n    - `patient_id`: Filter by\
        \ specific patient ObjectId\n    - `include_deleted`: Include soft-deleted\
        \ patients (default: false)\n    \n    ### Response Features:\n    - **Raw\
        \ Documents**: Complete MongoDB structure preserved\n    - **Field Analysis**:\
        \ Data type detection and usage statistics\n    - **Sample Values**: Up to\
        \ 3 sample values per field\n    - **ObjectId Detection**: Automatic relationship\
        \ mapping\n    - **Pagination Info**: Total count and navigation details\n\
        \    \n    ### Use Cases:\n    - **Database Analysis**: Understand complete\
        \ patient data structure\n    - **Integration Planning**: Map fields for external\
        \ system integration\n    - **Data Migration**: Analyze field usage and data\
        \ types\n    - **Debugging**: Inspect raw MongoDB documents\n    - **API Development**:\
        \ Understand available patient fields\n    \n    ### Authentication:\n   \
        \ Requires valid JWT Bearer token with admin privileges."
      operationId: get_raw_patient_documents_admin_patients_raw_documents_get
      parameters:
      - description: Number of raw documents to return
        in: query
        name: limit
        required: false
        schema:
          default: 5
          description: Number of raw documents to return
          maximum: 50
          minimum: 1
          title: Limit
          type: integer
      - description: Number of documents to skip
        in: query
        name: skip
        required: false
        schema:
          default: 0
          description: Number of documents to skip
          minimum: 0
          title: Skip
          type: integer
      - description: Filter by specific patient ID
        in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by specific patient ID
          title: Patient Id
      - description: Include soft-deleted patients
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          description: Include soft-deleted patients
          title: Include Deleted
          type: boolean
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  field_analysis:
                    _id:
                      count: 1
                      data_types:
                      - ObjectId
                      is_object_id: true
                      sample_values:
                      - 620c83a78ae03f05312cb9b5
                    bp_sbp_above:
                      count: 1
                      data_types:
                      - int
                      is_object_id: false
                      sample_values:
                      - 0
                    first_name:
                      count: 1
                      data_types:
                      - str
                      is_object_id: false
                      sample_values:
                      - TEST 001
                  filters:
                    include_deleted: false
                  metadata:
                    collection: patients
                    query_filter: '{''is_deleted'': {''$ne'': True}}'
                    timestamp: '2024-01-15T10:30:00.000000Z'
                  pagination:
                    has_more: true
                    limit: 5
                    skip: 0
                  raw_documents:
                  - _id:
                      $oid: 620c83a78ae03f05312cb9b5
                    amy_id: ''
                    ava_mac_address: ''
                    blood_pressure_mac_address: ''
                    bp_sbp_above: 0
                    bp_sbp_below: 0
                    created_at:
                      $date: '2022-02-16T04:55:03.469000'
                    first_name: TEST 001
                    hospital_data: []
                    last_name: Patient 1
                    phone: '789456789'
                  returned_count: 1
                  total_count: 431
                message: Raw patient documents retrieved successfully
                success: true
              schema: {}
          description: Raw patient documents retrieved successfully
        '400':
          description: Invalid patient ID format
        '401':
          description: Authentication required
        '403':
          description: Admin privileges required
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Raw Patient Documents
      tags:
      - admin
      - Admin Panel
      - Admin Panel
      - Raw Documents
  /admin/patients/search:
    post:
      description: Search patients using POST request (better for Thai characters)
      operationId: search_patients_post_admin_patients_search_post
      requestBody:
        content:
          application/json:
            schema:
              title: Search Request
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Patients Post
      tags:
      - admin
      - Admin Panel
  /admin/patients/{patient_id}:
    delete:
      description: Soft delete patient
      operationId: delete_patient_admin_patients__patient_id__delete
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Delete Patient Admin Patients  Patient Id  Delete
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Patient
      tags:
      - admin
      - Admin Panel
    get:
      description: Get specific patient
      operationId: get_patient_admin_patients__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Patient Admin Patients  Patient Id  Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patient
      tags:
      - admin
      - Admin Panel
    put:
      description: Update patient
      operationId: update_patient_admin_patients__patient_id__put
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Update Patient Admin Patients  Patient Id  Put
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Patient
      tags:
      - admin
      - Admin Panel
  /admin/performance/cache/clear:
    post:
      description: Clear cache entries matching pattern
      operationId: clear_cache_admin_performance_cache_clear_post
      parameters:
      - in: query
        name: pattern
        required: false
        schema:
          default: '*'
          title: Pattern
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Clear Cache Admin Performance Cache Clear Post
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      summary: Clear Cache
      tags:
      - performance
      - admin
      - Performance Monitoring
  /admin/performance/cache/stats:
    get:
      description: Get Redis cache statistics
      operationId: get_cache_statistics_admin_performance_cache_stats_get
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Cache Statistics Admin Performance Cache Stats
                  Get
                type: object
          description: Successful Response
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      summary: Get Cache Statistics
      tags:
      - performance
      - admin
      - Performance Monitoring
  /admin/performance/database/stats:
    get:
      description: Get overall database performance statistics
      operationId: get_database_statistics_admin_performance_database_stats_get
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Database Statistics Admin Performance Database
                  Stats Get
                type: object
          description: Successful Response
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      summary: Get Database Statistics
      tags:
      - performance
      - admin
      - Performance Monitoring
  /admin/performance/indexes/recommend:
    post:
      description: Get index recommendations based on slow queries
      operationId: recommend_indexes_admin_performance_indexes_recommend_post
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Recommend Indexes Admin Performance Indexes Recommend
                  Post
                type: object
          description: Successful Response
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      summary: Recommend Indexes
      tags:
      - performance
      - admin
      - Performance Monitoring
  /admin/performance/indexes/{collection_name}:
    get:
      description: Get index usage statistics for a collection
      operationId: get_index_usage_admin_performance_indexes__collection_name__get
      parameters:
      - in: path
        name: collection_name
        required: true
        schema:
          title: Collection Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Index Usage Admin Performance Indexes  Collection
                  Name  Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      summary: Get Index Usage
      tags:
      - performance
      - admin
      - Performance Monitoring
  /admin/performance/slow-queries:
    get:
      description: Get recent slow queries from MongoDB profiler
      operationId: get_slow_queries_admin_performance_slow_queries_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Slow Queries Admin Performance Slow Queries Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - HTTPBearer: []
      summary: Get Slow Queries
      tags:
      - performance
      - admin
      - Performance Monitoring
  /admin/rate-limit/blacklist:
    post:
      description: Add IP address to blacklist
      operationId: add_ip_to_blacklist_admin_rate_limit_blacklist_post
      requestBody:
        content:
          application/json:
            example:
              ip_address: 192.0.2.100
              reason: Suspicious activity detected
            schema:
              additionalProperties:
                type: string
              title: Ip Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '201':
          content:
            application/json:
              example:
                data:
                  added_by: admin
                  ip_address: 192.0.2.100
                  reason: Suspicious activity
                  timestamp: '2025-07-09T06:30:00.000000Z'
                  total_blacklisted: 5
                message: IP 192.0.2.100 successfully added to blacklist
                success: true
          description: IP successfully added to blacklist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Ip To Blacklist
      tags:
      - admin
      - Admin Panel
  /admin/rate-limit/whitelist:
    get:
      description: Get current IP whitelist with detailed information
      operationId: get_ip_whitelist_admin_rate_limit_whitelist_get
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  total_count: 3
                  whitelist:
                  - added_by: system
                    ip_address: 127.0.0.1
                    reason: Local development
                    timestamp: '2025-07-09T06:30:00.000000Z'
                  - added_by: admin
                    ip_address: 49.0.81.155
                    reason: Admin access
                    timestamp: '2025-07-09T06:30:00.000000Z'
                message: Retrieved whitelist with 3 IP addresses
                success: true
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Whitelist retrieved successfully
      security:
      - HTTPBearer: []
      summary: Get Ip Whitelist
      tags:
      - admin
      - Admin Panel
    post:
      description: Add IP address to whitelist
      operationId: add_ip_to_whitelist_admin_rate_limit_whitelist_post
      requestBody:
        content:
          application/json:
            example:
              ip_address: 203.0.113.45
              reason: Office network access
            schema:
              additionalProperties:
                type: string
              title: Ip Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Successful Response
        '201':
          content:
            application/json:
              example:
                data:
                  added_by: admin
                  ip_address: 203.0.113.45
                  reason: Office network
                  timestamp: '2025-07-09T06:30:00.000000Z'
                  total_whitelisted: 4
                message: IP 203.0.113.45 successfully added to whitelist
                success: true
          description: IP successfully added to whitelist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Ip To Whitelist
      tags:
      - admin
      - Admin Panel
  /admin/rate-limit/whitelist/{ip_address}:
    delete:
      description: Remove IP address from whitelist
      operationId: remove_ip_from_whitelist_admin_rate_limit_whitelist__ip_address__delete
      parameters:
      - in: path
        name: ip_address
        required: true
        schema:
          title: Ip Address
          type: string
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  ip_address: 203.0.113.45
                  removed_by: admin
                  timestamp: '2025-07-09T06:30:00.000000Z'
                  total_whitelisted: 3
                message: IP 203.0.113.45 successfully removed from whitelist
                success: true
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: IP successfully removed from whitelist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Remove Ip From Whitelist
      tags:
      - admin
      - Admin Panel
  /admin/security/alerts/active:
    get:
      description: Get active security alerts
      operationId: get_active_alerts_admin_security_alerts_active_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Active Alerts
      tags:
      - security
      - security
      - Security Management
  /admin/security/alerts/{alert_id}/acknowledge:
    post:
      description: Acknowledge a security alert
      operationId: acknowledge_alert_admin_security_alerts__alert_id__acknowledge_post
      parameters:
      - in: path
        name: alert_id
        required: true
        schema:
          title: Alert Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Acknowledge Alert
      tags:
      - security
      - security
      - Security Management
  /admin/security/alerts/{alert_id}/resolve:
    post:
      description: Resolve a security alert
      operationId: resolve_alert_admin_security_alerts__alert_id__resolve_post
      parameters:
      - in: path
        name: alert_id
        required: true
        schema:
          title: Alert Id
          type: string
      - in: query
        name: resolution
        required: true
        schema:
          title: Resolution
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Resolve Alert
      tags:
      - security
      - security
      - Security Management
  /admin/security/audit/events:
    get:
      description: Get security audit events
      operationId: get_security_events_admin_security_audit_events_get
      parameters:
      - in: query
        name: event_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Event Type
      - in: query
        name: severity
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Severity
      - in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
      - in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Start Date
      - in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: End Date
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Security Events
      tags:
      - security
      - security
      - Security Management
  /admin/security/audit/summary:
    get:
      description: Get security events summary
      operationId: get_security_summary_admin_security_audit_summary_get
      parameters:
      - in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Start Date
      - in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: End Date
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Security Summary
      tags:
      - security
      - security
      - Security Management
  /admin/security/blacklist/{ip_address}:
    delete:
      description: Remove IP address from blacklist
      operationId: remove_from_blacklist_admin_security_blacklist__ip_address__delete
      parameters:
      - in: path
        name: ip_address
        required: true
        schema:
          title: Ip Address
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Remove From Blacklist
      tags:
      - security
      - security
      - Security Management
    post:
      description: Add IP address to blacklist
      operationId: add_to_blacklist_admin_security_blacklist__ip_address__post
      parameters:
      - in: path
        name: ip_address
        required: true
        schema:
          title: Ip Address
          type: string
      - description: Reason for blacklisting
        in: query
        name: reason
        required: true
        schema:
          description: Reason for blacklisting
          title: Reason
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add To Blacklist
      tags:
      - security
      - security
      - Security Management
  /admin/security/config:
    get:
      description: Get current security configuration
      operationId: get_security_config_admin_security_config_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Security Config
      tags:
      - security
      - security
      - Security Management
  /admin/security/encryption/generate-api-key:
    post:
      description: Generate new API key
      operationId: generate_api_key_admin_security_encryption_generate_api_key_post
      parameters:
      - description: Description for the API key
        in: query
        name: description
        required: true
        schema:
          description: Description for the API key
          title: Description
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Api Key
      tags:
      - security
      - security
      - Security Management
  /admin/security/encryption/rotate-keys:
    post:
      description: Rotate encryption keys (requires superadmin)
      operationId: rotate_encryption_keys_admin_security_encryption_rotate_keys_post
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Rotate Encryption Keys
      tags:
      - security
      - security
      - Security Management
  /admin/security/rate-limits/{identifier}:
    get:
      description: Get rate limit status for an identifier
      operationId: get_rate_limit_status_admin_security_rate_limits__identifier__get
      parameters:
      - in: path
        name: identifier
        required: true
        schema:
          title: Identifier
          type: string
      - in: query
        name: limit_type
        required: false
        schema:
          default: global
          pattern: ^(global|user|api_key)$
          title: Limit Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Rate Limit Status
      tags:
      - security
      - security
      - Security Management
  /admin/security/rate-limits/{identifier}/reset:
    post:
      description: Reset rate limit for an identifier
      operationId: reset_rate_limit_admin_security_rate_limits__identifier__reset_post
      parameters:
      - in: path
        name: identifier
        required: true
        schema:
          title: Identifier
          type: string
      - in: query
        name: limit_type
        required: false
        schema:
          default: global
          pattern: ^(global|user|api_key)$
          title: Limit Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Reset Rate Limit
      tags:
      - security
      - security
      - Security Management
  /admin/test-raw-endpoint:
    get:
      description: Simple test endpoint
      operationId: test_raw_endpoint_admin_test_raw_endpoint_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Test Raw Endpoint
      tags:
      - admin
      - Admin Panel
  /analytics/anomalies/detect:
    get:
      description: Detect anomalies in vital signs data
      operationId: detect_anomalies_analytics_anomalies_detect_get
      parameters:
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Filter by patient ID
        in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by patient ID
          title: Patient Id
      - description: Z-score threshold for anomaly detection
        in: query
        name: threshold
        required: false
        schema:
          default: 2.0
          description: Z-score threshold for anomaly detection
          maximum: 4.0
          minimum: 1.0
          title: Threshold
          type: number
      - description: Number of days to analyze
        in: query
        name: days
        required: false
        schema:
          default: 7
          description: Number of days to analyze
          maximum: 30
          minimum: 1
          title: Days
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Anomalies detected successfully
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Detect Anomalies
      tags:
      - analytics
  /analytics/devices/utilization:
    get:
      description: Get device utilization analytics
      operationId: get_device_utilization_analytics_devices_utilization_get
      parameters:
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Filter by device type
        in: query
        name: device_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by device type
          title: Device Type
      - description: Analysis period
        in: query
        name: period
        required: false
        schema:
          default: monthly
          description: Analysis period
          title: Period
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Device utilization analytics retrieved successfully
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Device Utilization
      tags:
      - analytics
  /analytics/export/{format}:
    post:
      description: Export analytics data in various formats
      operationId: export_analytics_data_analytics_export__format__post
      parameters:
      - in: path
        name: format
        required: true
        schema:
          title: Format
          type: string
      - description: Type of report to export
        in: query
        name: report_type
        required: true
        schema:
          description: Type of report to export
          title: Report Type
          type: string
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Start date for export
        in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Start date for export
          title: Start Date
      - description: End date for export
        in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: End date for export
          title: End Date
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Analytics data exported successfully
        '400':
          description: Invalid export format
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Export Analytics Data
      tags:
      - analytics
  /analytics/health-risks/{patient_id}:
    get:
      description: Get health risk predictions for a patient
      operationId: get_health_risk_predictions_analytics_health_risks__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - description: Include health recommendations
        in: query
        name: include_recommendations
        required: false
        schema:
          default: true
          description: Include health recommendations
          title: Include Recommendations
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Health risk predictions retrieved successfully
        '401':
          description: Unauthorized
        '404':
          description: Patient not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Health Risk Predictions
      tags:
      - analytics
  /analytics/patients/statistics:
    get:
      description: Get comprehensive patient statistics and analytics
      operationId: get_patient_statistics_analytics_patients_statistics_get
      parameters:
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Start date for analysis
        in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Start date for analysis
          title: Start Date
      - description: End date for analysis
        in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: End date for analysis
          title: End Date
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Patient statistics retrieved successfully
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Patient Statistics
      tags:
      - analytics
  /analytics/reports/summary/{report_type}:
    get:
      description: Generate summary analytics reports
      operationId: generate_summary_report_analytics_reports_summary__report_type__get
      parameters:
      - in: path
        name: report_type
        required: true
        schema:
          title: Report Type
          type: string
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Start date for report
        in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Start date for report
          title: Start Date
      - description: End date for report
        in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: End date for report
          title: End Date
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Summary report generated successfully
        '400':
          description: Invalid report type
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Generate Summary Report
      tags:
      - analytics
  /analytics/trends/vitals:
    get:
      description: 'Get vital signs trends analysis


        **Required Parameters:**

        - vital_type: Type of vital sign to analyze (heart_rate, blood_pressure, temperature,
        spo2, respiratory_rate)


        **Optional Parameters:**

        - patient_id: Analyze trends for specific patient

        - hospital_id: Filter by hospital

        - days: Number of days to include in analysis (1-365)


        **Example Usage:**

        - `/analytics/trends/vitals?vital_type=heart_rate&days=7`

        - `/analytics/trends/vitals?vital_type=blood_pressure&patient_id=123&days=30`'
      operationId: get_vital_trends_analytics_trends_vitals_get
      parameters:
      - description: 'Type of vital sign (required): heart_rate, blood_pressure, temperature,
          spo2, respiratory_rate'
        in: query
        name: vital_type
        required: true
        schema:
          description: 'Type of vital sign (required): heart_rate, blood_pressure,
            temperature, spo2, respiratory_rate'
          title: Vital Type
          type: string
      - description: Filter by specific patient ID
        in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by specific patient ID
          title: Patient Id
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Number of days to analyze
        in: query
        name: days
        required: false
        schema:
          default: 30
          description: Number of days to analyze
          maximum: 365
          minimum: 1
          title: Days
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Vital signs trends retrieved successfully
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized
        '422':
          description: Missing required parameters
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Vital Trends
      tags:
      - analytics
  /analytics/vitals/{patient_id}:
    get:
      description: Get vital signs analytics for a patient
      operationId: get_vital_signs_analytics_analytics_vitals__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - description: Type of vital sign (blood_pressure, heart_rate, temperature,
          spo2)
        in: query
        name: vital_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Type of vital sign (blood_pressure, heart_rate, temperature,
            spo2)
          title: Vital Type
      - description: Analysis period (daily, weekly, monthly, quarterly, yearly)
        in: query
        name: period
        required: false
        schema:
          default: weekly
          description: Analysis period (daily, weekly, monthly, quarterly, yearly)
          title: Period
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Vital signs analytics retrieved successfully
        '401':
          description: Unauthorized
        '404':
          description: Patient not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Vital Signs Analytics
      tags:
      - analytics
  /api/ava4/data:
    post:
      description: Receive data from AVA4 device
      operationId: receive_ava4_data_api_ava4_data_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ava4DataRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ava4DataResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Receive Ava4 Data
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/debug-patient-query/{patient_id}:
    get:
      description: Debug endpoint to test patient_id queries
      operationId: debug_patient_query_api_ava4_debug_patient_query__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Debug Patient Query
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/devices:
    get:
      description: Get AVA4 devices with advanced filtering and search
      operationId: get_ava4_devices_api_ava4_devices_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
      - in: query
        name: active_only
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Active Only
      - in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
      - in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: sort_by
        required: false
        schema:
          default: created_at
          title: Sort By
          type: string
      - in: query
        name: sort_order
        required: false
        schema:
          default: desc
          title: Sort Order
          type: string
      - in: query
        name: include_patient_info
        required: false
        schema:
          default: false
          title: Include Patient Info
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Ava4 Devices
      tags:
      - ava4
      - AVA4 Device
    post:
      description: Create a new AVA4 device
      operationId: create_ava4_device_api_ava4_devices_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ava4DeviceCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Ava4 Device
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/devices/table:
    get:
      description: Get AVA4 devices in table format with advanced features
      operationId: get_ava4_devices_table_api_ava4_devices_table_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 25
          title: Limit
          type: integer
      - in: query
        name: active_only
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Active Only
      - in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
      - in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: sort_by
        required: false
        schema:
          default: created_at
          title: Sort By
          type: string
      - in: query
        name: sort_order
        required: false
        schema:
          default: desc
          title: Sort Order
          type: string
      - in: query
        name: columns
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Columns
      - in: query
        name: export_format
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Export Format
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Ava4 Devices Table
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/devices/{device_id}:
    delete:
      description: Delete (soft delete) an AVA4 device
      operationId: delete_ava4_device_api_ava4_devices__device_id__delete
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Ava4 Device
      tags:
      - ava4
      - AVA4 Device
    get:
      description: Get specific AVA4 device
      operationId: get_ava4_device_api_ava4_devices__device_id__get
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Ava4 Device
      tags:
      - ava4
      - AVA4 Device
    put:
      description: Update an AVA4 device
      operationId: update_ava4_device_api_ava4_devices__device_id__put
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ava4DeviceUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Ava4 Device
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/medical-history/analytics:
    get:
      description: "## System-Wide Medical Analytics\n    \n    Get comprehensive\
        \ analytics and insights across all medical history collections.\n    \n \
        \   ### Features:\n    - **System Overview**: Total records, collections,\
        \ and patients\n    - **Collection Statistics**: Record counts and status\
        \ per collection\n    - **Data Quality Metrics**: Active vs inactive collections\n\
        \    - **Performance Insights**: Top collections by activity\n    - **Real-time\
        \ Data**: Live system statistics\n    \n    ### Analytics Included:\n    -\
        \ Total medical records across all collections\n    - Number of patients with\
        \ medical data\n    - Collection-wise record distribution\n    - Data quality\
        \ and completeness metrics\n    - Top performing collections\n    \n    ###\
        \ Response Structure:\n    - `summary`: High-level system statistics\n   \
        \ - `collections`: Detailed collection analytics\n    - `top_collections`:\
        \ Most active collections ranked\n    \n    ### Use Cases:\n    - System monitoring\
        \ and health checks\n    - Data quality assessment\n    - Performance optimization\n\
        \    - Resource planning\n    - Compliance reporting\n    \n    ### Authentication:\n\
        \    Requires valid JWT Bearer token."
      operationId: get_medical_history_analytics_api_ava4_medical_history_analytics_get
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  collections:
                    blood_pressure_histories:
                      last_updated: '2024-01-15T10:30:00Z'
                      record_count: 21542
                      status: active
                  summary:
                    active_collections: 13
                    patients_with_medical_data: 246
                    total_collections: 13
                    total_medical_records: 56219
                  top_collections:
                  - - temprature_data_histories
                    - 34115
                  - - blood_pressure_histories
                    - 21542
                message: Medical history analytics retrieved successfully
                success: true
              schema:
                $ref: '#/components/schemas/MedicalAnalyticsResponse'
          description: System-wide medical analytics retrieved successfully
        '401':
          description: Authentication required
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get System-Wide Medical Analytics
      tags:
      - ava4
      - AVA4 Device
      - Medical History
  /api/ava4/medical-history/analytics/{patient_id}:
    get:
      description: Get comprehensive medical analytics for a specific patient
      operationId: get_patient_medical_analytics_api_ava4_medical_history_analytics__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patient Medical Analytics
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/medical-history/collections:
    get:
      description: "## Medical History Collections Overview\n    \n    Get comprehensive\
        \ information about all medical history collections in the system.\n    \n\
        \    ### Features:\n    - **Collection Statistics**: Record counts, status,\
        \ and metadata\n    - **Data Fields**: Available fields for each collection\
        \ type\n    - **System Overview**: Total records and active collections\n\
        \    - **Real-time Data**: Live collection statistics\n    \n    ### Collections\
        \ Included:\n    - Blood Pressure Histories\n    - Blood Sugar Histories \
        \ \n    - Body Data Histories\n    - Temperature Data Histories\n    - SPO2\
        \ Histories\n    - Sleep Data Histories\n    - Step Histories\n    - Medication\
        \ Histories\n    - Allergy Histories\n    - And more...\n    \n    ### Response\
        \ Data:\n    - `summary`: Overall system statistics\n    - `collections`:\
        \ Detailed collection information\n    - `top_collections`: Most active collections\
        \ by record count\n    \n    ### Authentication:\n    Requires valid JWT Bearer\
        \ token."
      operationId: get_medical_history_collections_api_ava4_medical_history_collections_get
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  collections:
                    blood_pressure_histories:
                      data_fields:
                      - systolic
                      - diastolic
                      - pulse
                      name: Blood Pressure History
                      record_count: 21542
                      status: active
                  summary:
                    active_collections: 13
                    empty_collections: 0
                    total_collections: 13
                    total_records: 56219
                message: Medical history collections retrieved successfully
                success: true
              schema:
                $ref: '#/components/schemas/MedicalHistoryCollectionsResponse'
          description: Medical history collections retrieved successfully
        '401':
          description: Authentication required
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Medical History Collections Overview
      tags:
      - ava4
      - AVA4 Device
      - Medical History
  /api/ava4/medical-history/patient/{patient_id}:
    get:
      description: "## Patient Medical History Retrieval\n    \n    Get comprehensive\
        \ medical history for a specific patient across all data types.\n    \n  \
        \  ### Features:\n    - **Complete Medical Records**: All medical data types\
        \ for the patient\n    - **Flexible Filtering**: Filter by collection type,\
        \ date range\n    - **Pagination Support**: Efficient handling of large datasets\n\
        \    - **Multi-Collection Data**: Blood pressure, temperature, SPO2, etc.\n\
        \    - **Structured Response**: Organized by medical data type\n    \n   \
        \ ### Query Parameters:\n    - `collection_type`: Filter by specific medical\
        \ data type (optional)\n    - `limit`: Number of records per collection (default:\
        \ 100)\n    - `skip`: Number of records to skip (default: 0)\n    - `date_from`:\
        \ Start date filter (ISO format, optional)\n    - `date_to`: End date filter\
        \ (ISO format, optional)\n    \n    ### Medical Data Types:\n    - `blood_pressure_histories`:\
        \ Blood pressure readings\n    - `temprature_data_histories`: Temperature\
        \ measurements\n    - `spo2_histories`: Oxygen saturation levels\n    - `blood_sugar_histories`:\
        \ Blood glucose readings\n    - `sleep_data_histories`: Sleep tracking data\n\
        \    - `step_histories`: Physical activity data\n    - And more...\n    \n\
        \    ### Response Structure:\n    - `summary`: Patient overview and record\
        \ counts\n    - `medical_history`: Organized data by collection type\n   \
        \ - `pagination`: Current pagination status\n    \n    ### Authentication:\n\
        \    Requires valid JWT Bearer token."
      operationId: get_patient_medical_history_api_ava4_medical_history_patient__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - description: Filter by specific medical data type
        in: query
        name: collection_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by specific medical data type
          title: Collection Type
      - description: Maximum number of records per collection
        in: query
        name: limit
        required: false
        schema:
          default: 100
          description: Maximum number of records per collection
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - description: Number of records to skip
        in: query
        name: skip
        required: false
        schema:
          default: 0
          description: Number of records to skip
          minimum: 0
          title: Skip
          type: integer
      - description: Start date filter (ISO format)
        in: query
        name: date_from
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Start date filter (ISO format)
          title: Date From
      - description: End date filter (ISO format)
        in: query
        name: date_to
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: End date filter (ISO format)
          title: Date To
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  medical_history:
                    temprature_data_histories:
                      count: 2574
                      records:
                      - temprature_data: 36.5
                        temprature_import_date: '2024-01-15T10:30:00Z'
                  summary:
                    collections_with_data: 4
                    date_range:
                      from: '2022-01-01T00:00:00Z'
                      to: '2024-12-31T23:59:59Z'
                    patient_id: 622035a5fd26d7b6d9b7730c
                    total_records: 2853
                message: Patient medical history retrieved successfully
                success: true
              schema:
                $ref: '#/components/schemas/PatientMedicalHistoryResponse'
          description: Patient medical history retrieved successfully
        '401':
          description: Authentication required
        '404':
          description: Patient not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Patient Medical History
      tags:
      - ava4
      - AVA4 Device
      - Medical History
  /api/ava4/medical-history/trends/{patient_id}:
    get:
      description: "## Medical Trends Analysis\n    \n    Analyze medical trends and\
        \ patterns for a specific patient over time.\n    \n    ### Features:\n  \
        \  - **Statistical Analysis**: Min, max, average, latest values\n    - **Time-based\
        \ Trends**: Configurable time periods\n    - **Multiple Metrics**: Support\
        \ for various medical data types\n    - **Trend Visualization**: Data ready\
        \ for charts and graphs\n    - **Historical Analysis**: Long-term health monitoring\n\
        \    \n    ### Supported Metric Types:\n    - `blood_pressure`: Systolic,\
        \ diastolic, pulse readings\n    - `blood_sugar`: Fasting, post-meal glucose\
        \ levels\n    - `temperature`: Body temperature measurements\n    - `spo2`:\
        \ Oxygen saturation and pulse rate\n    - `body_data`: Weight, BMI, body composition\n\
        \    - `sleep`: Sleep duration and quality metrics\n    - `steps`: Physical\
        \ activity tracking\n    - `creatinine`: Kidney function markers\n    - `lipid`:\
        \ Cholesterol and lipid profiles\n    \n    ### Query Parameters:\n    - `metric_type`:\
        \ Type of medical data to analyze (required)\n    - `days`: Number of days\
        \ to analyze (default: 30, max: 3650)\n    \n    ### Response Analytics:\n\
        \    - `total_readings`: Number of data points analyzed\n    - `date_range`:\
        \ Time period covered\n    - `statistics`: Statistical analysis per metric\n\
        \    - `trends`: Time-series data for visualization\n    \n    ### Authentication:\n\
        \    Requires valid JWT Bearer token."
      operationId: get_patient_medical_trends_api_ava4_medical_history_trends__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - in: query
        name: metric_type
        required: true
        schema:
          title: Metric Type
          type: string
      - description: Number of days to analyze
        in: query
        name: days
        required: false
        schema:
          default: 30
          description: Number of days to analyze
          maximum: 3650
          minimum: 1
          title: Days
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  analytics:
                    date_range:
                      days: 1000
                      end: '2025-07-06T11:51:45.234672'
                      start: '2022-10-10T11:51:45.234672'
                    statistics:
                      temprature_data:
                        avg: 36.34
                        count: 34115
                        latest: 36.6
                        max: 44.2
                        min: 21.6
                        unit: "\xB0C"
                    total_readings: 34115
                message: Medical trends analysis completed successfully
                success: true
              schema:
                $ref: '#/components/schemas/MedicalTrendsResponse'
          description: Medical trends analysis completed successfully
        '400':
          description: Invalid metric type or parameters
        '401':
          description: Authentication required
        '404':
          description: Patient not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Patient Medical Trends Analysis
      tags:
      - ava4
      - AVA4 Device
      - Medical History
  /api/ava4/patient-info:
    get:
      description: Get patient basic information by AVA4 device MAC address for device
        mapping
      operationId: get_patient_info_by_mac_api_ava4_patient_info_get
      parameters:
      - in: query
        name: mac_address
        required: true
        schema:
          title: Mac Address
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patient Info By Mac
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/patients-raw:
    get:
      description: Get raw patient documents - simplified version
      operationId: get_raw_patients_simple_api_ava4_patients_raw_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 5
          maximum: 50
          minimum: 1
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Raw Patients Simple
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/patients/raw-documents:
    get:
      description: "## AVA4 Raw Patient Document Analysis\n    \n    Access complete\
        \ MongoDB patient documents for AVA4 device integration analysis.\n    \n\
        \    ### Features:\n    - **Complete Patient Structure**: All 269 fields per\
        \ patient document\n    - **AVA4 Device Integration**: Focus on AVA4-related\
        \ patient fields\n    - **Field Analysis**: Automatic data type detection\
        \ and statistics\n    - **Sample Values**: Preview of actual field content\n\
        \    - **Standard Field Detection**: Identification of core patient fields\
        \ vs extended data\n    - **Pagination Support**: Handle large document sets\
        \ efficiently\n    \n    ### Key AVA4 Integration Fields:\n    \n    ####\
        \ **AVA4 Device Identifiers**:\n    - `ava_mac_address`: Primary AVA4 device\
        \ MAC address\n    - `ava_box_id`: AVA4 box/gateway identifier\n    - `ava_sim_card`:\
        \ SIM card information for connectivity\n    - `ava_box_version`: Device firmware/software\
        \ version\n    \n    #### **Medical Device MAC Addresses**:\n    - `blood_pressure_mac_address`:\
        \ BP monitor MAC address\n    - `blood_glucose_mac_address`: Glucose meter\
        \ MAC address\n    - `body_temperature_mac_address`: Temperature sensor MAC\
        \ address\n    - `fingertip_pulse_oximeter_mac_address`: SPO2 sensor MAC address\n\
        \    - `cholesterol_mac_address`: Cholesterol meter MAC address\n    \n  \
        \  #### **Medical Alert Thresholds for AVA4**:\n    - **Blood Pressure**:\
        \ `bp_sbp_above`, `bp_sbp_below`, `bp_dbp_above`, `bp_dbp_below`\n    - **Blood\
        \ Sugar**: `glucose_normal_before`, `glucose_normal_after`\n    - **Temperature**:\
        \ `temperature_normal_above`, `temperature_normal_below`\n    - **SPO2**:\
        \ `spo2_normal_above`, `spo2_normal_below`\n    \n    ### Query Parameters:\n\
        \    - `limit`: Number of documents to return (1-50, default: 5)\n    - `skip`:\
        \ Number of documents to skip for pagination\n    - `patient_id`: Filter by\
        \ specific patient ObjectId\n    - `include_deleted`: Include soft-deleted\
        \ patients (default: false)\n    \n    ### Response Features:\n    - **Raw\
        \ Documents**: Complete MongoDB structure preserved\n    - **Field Analysis**:\
        \ Data type detection and usage statistics per field\n    - **Standard Field\
        \ Detection**: Identifies core vs extended patient fields\n    - **Sample\
        \ Values**: Up to 3 sample values per field for preview\n    - **Pagination\
        \ Info**: Total count and navigation details\n    \n    ### AVA4 Use Cases:\n\
        \    - **Device Configuration**: Map patient thresholds to AVA4 alerts\n \
        \   - **Patient Device Linking**: Associate patients with AVA4 devices\n \
        \   - **Medical Integration**: Understand patient medical data structure\n\
        \    - **Alert Setup**: Configure AVA4 medical alerts based on patient data\n\
        \    - **Data Migration**: Map existing patient data to AVA4 format\n    \n\
        \    ### Standard Patient Fields (29 core fields):\n    `_id`, `first_name`,\
        \ `last_name`, `nickname`, `gender`, `birth_date`, `id_card`, \n    `phone`,\
        \ `email`, `address`, `province_code`, `district_code`, `sub_district_code`,\
        \ \n    `postal_code`, `emergency_contact_name`, `emergency_contact_phone`,\
        \ \n    `emergency_contact_relationship`, `blood_type`, `height`, `weight`,\
        \ `bmi`, \n    `watch_mac_address`, `ava_mac_address`, `new_hospital_ids`,\
        \ `created_at`, \n    `updated_at`, `is_active`, `is_deleted`\n    \n    ###\
        \ Authentication:\n    Requires valid JWT Bearer token."
      operationId: get_raw_patient_documents_api_ava4_patients_raw_documents_get
      parameters:
      - description: Number of raw documents to return
        in: query
        name: limit
        required: false
        schema:
          default: 5
          description: Number of raw documents to return
          maximum: 50
          minimum: 1
          title: Limit
          type: integer
      - description: Number of documents to skip
        in: query
        name: skip
        required: false
        schema:
          default: 0
          description: Number of documents to skip
          minimum: 0
          title: Skip
          type: integer
      - description: Filter by specific patient ID
        in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by specific patient ID
          title: Patient Id
      - description: Include soft-deleted patients
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          description: Include soft-deleted patients
          title: Include Deleted
          type: boolean
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  field_analysis:
                    _id:
                      count: 1
                      data_type: str
                      is_standard_field: true
                      sample_values:
                      - 620c83a78ae03f05312cb9b5
                    ava_mac_address:
                      count: 1
                      data_type: str
                      is_standard_field: true
                      sample_values:
                      - AA:BB:CC:DD:EE:FF
                    bp_sbp_above:
                      count: 1
                      data_type: int
                      is_standard_field: false
                      sample_values:
                      - 140
                  filters:
                    include_deleted: false
                  metadata:
                    collection: patients
                    query_filter: '{''is_deleted'': {''$ne'': True}}'
                    timestamp: '2024-01-15T10:30:00.000000Z'
                  pagination:
                    has_more: true
                    limit: 5
                    skip: 0
                  raw_documents:
                  - _id: 620c83a78ae03f05312cb9b5
                    amy_id: AMY001
                    ava_box_id: AVA4-001
                    ava_mac_address: AA:BB:CC:DD:EE:FF
                    blood_glucose_mac_address: ''
                    blood_pressure_mac_address: 11:22:33:44:55:66
                    bp_dbp_above: 90
                    bp_dbp_below: 60
                    bp_sbp_above: 140
                    bp_sbp_below: 90
                    created_at: '2022-02-16T04:55:03.469000'
                    first_name: TEST 001
                    glucose_normal_after: 140
                    glucose_normal_before: 100
                    hospital_data: []
                    last_name: Patient 1
                    phone: '789456789'
                  returned_count: 1
                  standard_patient_fields:
                  - _id
                  - first_name
                  - last_name
                  - ava_mac_address
                  total_count: 431
                message: Raw patient documents retrieved successfully
                success: true
              schema: {}
          description: Raw patient documents retrieved successfully
        '400':
          description: Invalid patient ID format
        '401':
          description: Authentication required
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Raw Patient Documents (AVA4)
      tags:
      - ava4
      - AVA4 Device
      - AVA4 Device
      - Raw Documents
  /api/ava4/sub-devices:
    get:
      description: Get AVA4 sub-devices (medical devices) connected to a specific
        AVA4 box
      operationId: get_ava4_sub_devices_api_ava4_sub_devices_get
      parameters:
      - in: query
        name: mac_address
        required: true
        schema:
          title: Mac Address
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Ava4 Sub Devices
      tags:
      - ava4
      - AVA4 Device
    post:
      description: Register a new AVA4 sub-device (medical device) for a patient
      operationId: register_ava4_sub_device_api_ava4_sub_devices_post
      parameters:
      - in: query
        name: mac_address
        required: true
        schema:
          title: Mac Address
          type: string
      - in: query
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - in: query
        name: device_type
        required: true
        schema:
          title: Device Type
          type: string
      - in: query
        name: device_name
        required: true
        schema:
          title: Device Name
          type: string
      - in: query
        name: model
        required: false
        schema:
          title: Model
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Register Ava4 Sub Device
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/sub-devices/analytics:
    get:
      description: Get analytics for AVA4 sub-devices
      operationId: get_ava4_sub_device_analytics_api_ava4_sub_devices_analytics_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Ava4 Sub Device Analytics
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/sub-devices/discovery:
    get:
      description: Discover available AVA4 sub-devices for registration
      operationId: discover_ava4_sub_devices_api_ava4_sub_devices_discovery_get
      parameters:
      - in: query
        name: box_mac_address
        required: false
        schema:
          title: Box Mac Address
          type: string
      - in: query
        name: scan_duration
        required: false
        schema:
          default: 30
          title: Scan Duration
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Discover Ava4 Sub Devices
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/sub-devices/patient-relationship/{patient_id}:
    get:
      description: Analyze the complete relationship between a patient and their devices
      operationId: analyze_patient_device_relationship_api_ava4_sub_devices_patient_relationship__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Analyze Patient Device Relationship
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/sub-devices/raw-documents:
    get:
      description: Get raw documents to examine structure and relationships - supports
        both devices and patients
      operationId: get_raw_amy_devices_documents_api_ava4_sub_devices_raw_documents_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 5
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
      - in: query
        name: patient_id
        required: false
        schema:
          title: Patient Id
          type: string
      - description: 'Type of data: ''devices'' or ''patients'''
        in: query
        name: data_type
        required: false
        schema:
          default: devices
          description: 'Type of data: ''devices'' or ''patients'''
          title: Data Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Raw Amy Devices Documents
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/sub-devices/table:
    get:
      description: Get AVA4 sub-devices in table format with advanced filtering
      operationId: get_ava4_sub_devices_table_api_ava4_sub_devices_table_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 25
          title: Limit
          type: integer
      - in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
      - in: query
        name: device_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Type
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: sort_by
        required: false
        schema:
          default: device_name
          title: Sort By
          type: string
      - in: query
        name: sort_order
        required: false
        schema:
          default: asc
          title: Sort Order
          type: string
      - in: query
        name: columns
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Columns
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Ava4 Sub Devices Table
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/sub-devices/{patient_id}/{device_type}:
    delete:
      description: Unregister an AVA4 sub-device from a patient
      operationId: unregister_ava4_sub_device_api_ava4_sub_devices__patient_id___device_type__delete
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - in: path
        name: device_type
        required: true
        schema:
          title: Device Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Unregister Ava4 Sub Device
      tags:
      - ava4
      - AVA4 Device
    put:
      description: Update an AVA4 sub-device for a patient
      operationId: update_ava4_sub_device_api_ava4_sub_devices__patient_id___device_type__put
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - in: path
        name: device_type
        required: true
        schema:
          title: Device Type
          type: string
      - in: query
        name: mac_address
        required: false
        schema:
          title: Mac Address
          type: string
      - in: query
        name: device_name
        required: false
        schema:
          title: Device Name
          type: string
      - in: query
        name: model
        required: false
        schema:
          title: Model
          type: string
      - in: query
        name: is_active
        required: false
        schema:
          title: Is Active
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Ava4 Sub Device
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/test-medical-devices/{patient_id}:
    get:
      description: Test endpoint to check medical devices for a specific patient
      operationId: test_medical_devices_api_ava4_test_medical_devices__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Test Medical Devices
      tags:
      - ava4
      - AVA4 Device
  /api/ava4/test-patient-raw:
    get:
      description: Simple test endpoint for patient raw data
      operationId: test_patient_raw_endpoint_api_ava4_test_patient_raw_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Test Patient Raw Endpoint
      tags:
      - ava4
      - AVA4 Device
  /api/devices/:
    get:
      description: Get devices with filtering
      operationId: get_devices_api_devices__get
      parameters:
      - in: query
        name: device_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Type
      - in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
      - in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
      - in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Devices
      tags:
      - device-crud
      - Device CRUD Operations
    post:
      description: Create new device
      operationId: api_create_device_api_devices__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__routes__device_crud__DeviceCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Api Create Device
      tags:
      - device-crud
      - Device CRUD Operations
  /api/devices/data:
    get:
      description: Get device data with filtering
      operationId: get_device_data_api_devices_data_get
      parameters:
      - in: query
        name: device_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Id
      - in: query
        name: device_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Device Type
      - in: query
        name: data_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Data Type
      - in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Patient Id
      - in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Start Date
      - in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: End Date
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          minimum: 0
          title: Skip
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Device Data
      tags:
      - device-crud
      - Device CRUD Operations
    post:
      description: Create new device data entry
      operationId: create_device_data_api_devices_data_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDataCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Device Data
      tags:
      - device-crud
      - Device CRUD Operations
  /api/devices/data/{observation_id}:
    delete:
      description: Soft delete device data record
      operationId: delete_device_data_api_devices_data__observation_id__delete
      parameters:
      - in: path
        name: observation_id
        required: true
        schema:
          title: Observation Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Device Data
      tags:
      - device-crud
      - Device CRUD Operations
    get:
      description: Get specific device data record
      operationId: get_device_data_record_api_devices_data__observation_id__get
      parameters:
      - in: path
        name: observation_id
        required: true
        schema:
          title: Observation Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Device Data Record
      tags:
      - device-crud
      - Device CRUD Operations
    put:
      description: Update device data record
      operationId: update_device_data_api_devices_data__observation_id__put
      parameters:
      - in: path
        name: observation_id
        required: true
        schema:
          title: Observation Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDataUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Device Data
      tags:
      - device-crud
      - Device CRUD Operations
  /api/devices/{device_id}:
    delete:
      description: Soft delete device
      operationId: api_delete_device_api_devices__device_id__delete
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      - description: 'Device type: ava4, kati, qube-vital'
        in: query
        name: device_type
        required: true
        schema:
          description: 'Device type: ava4, kati, qube-vital'
          title: Device Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Api Delete Device
      tags:
      - device-crud
      - Device CRUD Operations
    get:
      description: Get specific device
      operationId: api_get_device_api_devices__device_id__get
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      - description: 'Device type: ava4, kati, qube-vital'
        in: query
        name: device_type
        required: true
        schema:
          description: 'Device type: ava4, kati, qube-vital'
          title: Device Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Api Get Device
      tags:
      - device-crud
      - Device CRUD Operations
    put:
      description: Update device
      operationId: api_update_device_api_devices__device_id__put
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      - description: 'Device type: ava4, kati, qube-vital'
        in: query
        name: device_type
        required: true
        schema:
          description: 'Device type: ava4, kati, qube-vital'
          title: Device Type
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__routes__device_crud__DeviceUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Api Update Device
      tags:
      - device-crud
      - Device CRUD Operations
  /api/kati/data:
    post:
      description: Receive data from Kati Watch
      operationId: receive_kati_data_api_kati_data_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KatiDataRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KatiDataResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Receive Kati Data
      tags:
      - kati
      - Kati Watch
  /api/kati/devices:
    get:
      description: Get Kati Watch devices
      operationId: get_kati_devices_api_kati_devices_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
      - in: query
        name: active_only
        required: false
        schema:
          default: true
          title: Active Only
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Kati Devices
      tags:
      - kati
      - Kati Watch
  /api/kati/devices/{device_id}:
    delete:
      description: Soft delete Kati Watch device
      operationId: delete_kati_device_api_kati_devices__device_id__delete
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Kati Device
      tags:
      - kati
      - Kati Watch
    get:
      description: Get specific Kati Watch device
      operationId: get_kati_device_api_kati_devices__device_id__get
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Kati Device
      tags:
      - kati
      - Kati Watch
  /api/kati/patient-info:
    get:
      description: Get patient basic information by Kati watch IMEI for device mapping
      operationId: get_patient_info_by_imei_api_kati_patient_info_get
      parameters:
      - description: Kati watch IMEI
        in: query
        name: imei
        required: true
        schema:
          description: Kati watch IMEI
          maxLength: 50
          minLength: 1
          title: Imei
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Patient Info By Imei Api Kati Patient Info Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patient Info By Imei
      tags:
      - kati
      - Kati Watch
  /api/kati/patients/with-watch:
    get:
      description: "## Patients with Kati Watch Assignment\n            \n       \
        \     Get list of patients who have been assigned a Kati Watch device.\n \
        \           \n            ### Response Fields:\n            - `patient_id`:\
        \ Unique patient identifier\n            - `first_name`: Patient first name\n\
        \            - `last_name`: Patient last name (surname)\n            - `hospital_name`:\
        \ Hospital name where patient is registered\n            - `watch_imei`: Assigned\
        \ Kati watch IMEI\n            - `watch_status`: Current watch status (online/offline)\n\
        \            - `is_active`: Patient active status\n            \n        \
        \    ### Filtering Options:\n            - `search`: Search by patient name\n\
        \            - `hospital_id`: Filter by specific hospital\n            - `watch_status`:\
        \ Filter by watch status (online/offline)\n            - Pagination: `limit`\
        \ and `skip`"
      operationId: get_patients_with_watch_api_kati_patients_with_watch_get
      parameters:
      - description: Number of patients to return
        in: query
        name: limit
        required: false
        schema:
          default: 100
          description: Number of patients to return
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - description: Number of patients to skip
        in: query
        name: skip
        required: false
        schema:
          default: 0
          description: Number of patients to skip
          minimum: 0
          title: Skip
          type: integer
      - description: Search by patient name
        in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search by patient name
          title: Search
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Filter by watch status (online/offline)
        in: query
        name: watch_status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by watch status (online/offline)
          title: Watch Status
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Patients With Watch Api Kati Patients With Watch
                  Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patients with Kati Watch Assignment
      tags:
      - kati
      - Kati Watch
  /api/kati/patients/without-watch:
    get:
      description: "## Patients without Kati Watch Assignment\n            \n    \
        \        Get list of patients who have NOT been assigned a Kati Watch device.\n\
        \            \n            ### Response Fields:\n            - `patient_id`:\
        \ Unique patient identifier\n            - `first_name`: Patient first name\n\
        \            - `last_name`: Patient last name (surname)\n            - `hospital_name`:\
        \ Hospital name where patient is registered\n            - `watch_imei`: null\
        \ (no watch assigned)\n            - `watch_status`: null (no watch assigned)\n\
        \            - `is_active`: Patient active status\n            \n        \
        \    ### Filtering Options:\n            - `search`: Search by patient name\n\
        \            - `hospital_id`: Filter by specific hospital\n            - Pagination:\
        \ `limit` and `skip`"
      operationId: get_patients_without_watch_api_kati_patients_without_watch_get
      parameters:
      - description: Number of patients to return
        in: query
        name: limit
        required: false
        schema:
          default: 100
          description: Number of patients to return
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - description: Number of patients to skip
        in: query
        name: skip
        required: false
        schema:
          default: 0
          description: Number of patients to skip
          minimum: 0
          title: Skip
          type: integer
      - description: Search by patient name
        in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search by patient name
          title: Search
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Patients Without Watch Api Kati Patients Without
                  Watch Get
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patients without Kati Watch Assignment
      tags:
      - kati
      - Kati Watch
  /api/kati/test:
    get:
      description: Simple test endpoint
      operationId: test_endpoint_api_kati_test_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Test Endpoint
      tags:
      - kati
      - Kati Watch
  /api/kati/test-auth:
    get:
      description: Test endpoint that requires authentication
      operationId: test_auth_endpoint_api_kati_test_auth_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Test Auth Endpoint
      tags:
      - kati
      - Kati Watch
  /api/medical-devices/patient/{mac_address}:
    get:
      description: Find which patient a medical device belongs to by MAC address
      operationId: find_patient_by_device_mac_api_medical_devices_patient__mac_address__get
      parameters:
      - in: path
        name: mac_address
        required: true
        schema:
          title: Mac Address
          type: string
      - in: query
        name: include_patient_info
        required: false
        schema:
          default: true
          title: Include Patient Info
          type: boolean
      - in: query
        name: include_device_details
        required: false
        schema:
          default: false
          title: Include Device Details
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Find Patient By Device Mac
      tags:
      - device-lookup
      - Medical Device Lookup
  /api/patients/medical-devices/table:
    get:
      description: Get patient medical device registries in table format
      operationId: get_patient_devices_table_api_patients_medical_devices_table_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 25
          title: Limit
          type: integer
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: sort_by
        required: false
        schema:
          default: created_at
          title: Sort By
          type: string
      - in: query
        name: sort_order
        required: false
        schema:
          default: desc
          title: Sort Order
          type: string
      - in: query
        name: columns
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Columns
      - in: query
        name: export_format
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Export Format
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patient Devices Table
      tags:
      - patient-devices
      - Patient Medical Devices
  /api/patients/{patient_id}/medical-devices:
    get:
      description: Get all medical devices registered to a specific patient
      operationId: get_patient_medical_devices_api_patients__patient_id__medical_devices_get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - in: query
        name: include_device_info
        required: false
        schema:
          default: false
          title: Include Device Info
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patient Medical Devices
      tags:
      - patient-devices
      - Patient Medical Devices
    post:
      description: Register medical devices to a patient (create new registry)
      operationId: register_patient_medical_devices_api_patients__patient_id__medical_devices_post
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientDeviceRegistry'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Register Patient Medical Devices
      tags:
      - patient-devices
      - Patient Medical Devices
    put:
      description: Update medical devices registry for a patient
      operationId: update_patient_medical_devices_api_patients__patient_id__medical_devices_put
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientDeviceRegistryUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Patient Medical Devices
      tags:
      - patient-devices
      - Patient Medical Devices
  /api/patients/{patient_id}/medical-devices/{device_type}:
    delete:
      description: Unregister a specific device type from a patient
      operationId: unregister_patient_device_api_patients__patient_id__medical_devices__device_type__delete
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - in: path
        name: device_type
        required: true
        schema:
          title: Device Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Unregister Patient Device
      tags:
      - patient-devices
      - Patient Medical Devices
  /api/qube-vital/analytics/hospitals:
    get:
      description: Get hospital analytics for Qube-Vital devices
      operationId: get_hospital_analytics_api_qube_vital_analytics_hospitals_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Hospital Analytics
      tags:
      - qube-vital
      - Qube-Vital
  /api/qube-vital/data:
    post:
      description: Receive data from Qube-Vital device
      operationId: receive_qube_vital_data_api_qube_vital_data_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QubeVitalDataRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QubeVitalDataResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Receive Qube Vital Data
      tags:
      - qube-vital
      - Qube-Vital
  /api/qube-vital/devices:
    get:
      description: Get Qube-Vital devices with advanced filtering and search
      operationId: get_qube_vital_devices_api_qube_vital_devices_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
      - in: query
        name: active_only
        required: false
        schema:
          default: true
          title: Active Only
          type: boolean
      - in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
      - in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: sort_by
        required: false
        schema:
          default: created_at
          title: Sort By
          type: string
      - in: query
        name: sort_order
        required: false
        schema:
          default: desc
          title: Sort Order
          type: string
      - in: query
        name: include_hospital_info
        required: false
        schema:
          default: false
          title: Include Hospital Info
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Qube Vital Devices
      tags:
      - qube-vital
      - Qube-Vital
    post:
      description: Create a new Qube-Vital device
      operationId: create_qube_vital_device_api_qube_vital_devices_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QubeVitalDeviceCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Qube Vital Device
      tags:
      - qube-vital
      - Qube-Vital
  /api/qube-vital/devices/table:
    get:
      description: Get Qube-Vital devices in table format with advanced features
      operationId: get_qube_vital_devices_table_api_qube_vital_devices_table_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 25
          title: Limit
          type: integer
      - in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Hospital Id
      - in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: sort_by
        required: false
        schema:
          default: created_at
          title: Sort By
          type: string
      - in: query
        name: sort_order
        required: false
        schema:
          default: desc
          title: Sort Order
          type: string
      - in: query
        name: columns
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Columns
      - in: query
        name: export_format
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Export Format
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Qube Vital Devices Table
      tags:
      - qube-vital
      - Qube-Vital
  /api/qube-vital/devices/{device_id}:
    delete:
      description: Delete (soft delete) a Qube-Vital device
      operationId: delete_qube_vital_device_api_qube_vital_devices__device_id__delete
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Qube Vital Device
      tags:
      - qube-vital
      - Qube-Vital
    get:
      description: Get specific Qube-Vital device
      operationId: get_qube_vital_device_api_qube_vital_devices__device_id__get
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Qube Vital Device
      tags:
      - qube-vital
      - Qube-Vital
    put:
      description: Update a Qube-Vital device
      operationId: update_qube_vital_device_api_qube_vital_devices__device_id__put
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QubeVitalDeviceUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Qube Vital Device
      tags:
      - qube-vital
      - Qube-Vital
  /api/qube-vital/devices/{device_id}/hospital:
    put:
      description: Assign a Qube-Vital device to a hospital
      operationId: assign_device_to_hospital_api_qube_vital_devices__device_id__hospital_put
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      - in: query
        name: hospital_id
        required: true
        schema:
          title: Hospital Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Assign Device To Hospital
      tags:
      - qube-vital
      - Qube-Vital
  /api/qube-vital/hospital-info:
    get:
      description: Get hospital information by Qube-Vital device IMEI for hospital
        mapping
      operationId: get_hospital_info_by_device_api_qube_vital_hospital_info_get
      parameters:
      - in: query
        name: imei
        required: true
        schema:
          title: Imei
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Hospital Info By Device
      tags:
      - qube-vital
      - Qube-Vital
  /api/qube-vital/hospitals:
    get:
      description: Get hospitals with their Qube-Vital device counts
      operationId: get_hospitals_with_devices_api_qube_vital_hospitals_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
      - in: query
        name: include_device_count
        required: false
        schema:
          default: true
          title: Include Device Count
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Hospitals With Devices
      tags:
      - qube-vital
      - Qube-Vital
  /api/qube-vital/hospitals/{hospital_id}/devices:
    get:
      description: Get all Qube-Vital devices assigned to a specific hospital
      operationId: get_hospital_devices_api_qube_vital_hospitals__hospital_id__devices_get
      parameters:
      - in: path
        name: hospital_id
        required: true
        schema:
          title: Hospital Id
          type: string
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          title: Limit
          type: integer
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
      - in: query
        name: active_only
        required: false
        schema:
          default: true
          title: Active Only
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Hospital Devices
      tags:
      - qube-vital
      - Qube-Vital
  /api/v1/audit/hash/cleanup:
    post:
      description: Clean up old audit logs according to retention policy
      operationId: cleanup_audit_logs_api_v1_audit_hash_cleanup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CleanupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Cleanup Old Audit Logs
      tags:
      - hash-audit
      - Hash Audit
  /api/v1/audit/hash/export:
    get:
      description: Export audit logs in various formats for compliance and analysis
      operationId: export_audit_logs_api_v1_audit_hash_export_get
      parameters:
      - description: Export start date
        in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Export start date
          title: Start Date
      - description: Export end date
        in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Export end date
          title: End Date
      - description: 'Export format: json, csv'
        in: query
        name: format
        required: false
        schema:
          default: json
          description: 'Export format: json, csv'
          title: Format
          type: string
      - description: Filter by operation types
        in: query
        name: operation_types
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by operation types
          title: Operation Types
      - description: Maximum records to export
        in: query
        name: max_records
        required: false
        schema:
          default: 10000
          description: Maximum records to export
          maximum: 100000
          minimum: 1
          title: Max Records
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Export Audit Logs
      tags:
      - hash-audit
      - Hash Audit
  /api/v1/audit/hash/health:
    get:
      description: Get health status of the audit logging system
      operationId: get_audit_system_health_api_v1_audit_hash_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Audit System Health
      tags:
      - hash-audit
      - Hash Audit
  /api/v1/audit/hash/logs:
    get:
      description: Query audit logs with comprehensive filtering options
      operationId: query_audit_logs_api_v1_audit_hash_logs_get
      parameters:
      - description: Start date (ISO format)
        in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Start date (ISO format)
          title: Start Date
      - description: End date (ISO format)
        in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: End date (ISO format)
          title: End Date
      - description: Comma-separated operation types
        in: query
        name: operation_types
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated operation types
          title: Operation Types
      - description: Comma-separated status values
        in: query
        name: status_filter
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated status values
          title: Status Filter
      - description: Comma-separated severity levels
        in: query
        name: severity_filter
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated severity levels
          title: Severity Filter
      - description: User ID
        in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: User ID
          title: User Id
      - description: FHIR resource type
        in: query
        name: fhir_resource_type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: FHIR resource type
          title: Fhir Resource Type
      - description: FHIR resource ID
        in: query
        name: fhir_resource_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: FHIR resource ID
          title: Fhir Resource Id
      - description: Patient ID
        in: query
        name: patient_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient ID
          title: Patient Id
      - description: Blockchain hash
        in: query
        name: blockchain_hash
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Blockchain hash
          title: Blockchain Hash
      - description: Show only error logs
        in: query
        name: has_errors_only
        required: false
        schema:
          default: false
          description: Show only error logs
          title: Has Errors Only
          type: boolean
      - description: Limit results
        in: query
        name: limit
        required: false
        schema:
          default: 100
          description: Limit results
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      - description: Offset for pagination
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: Offset for pagination
          minimum: 0
          title: Offset
          type: integer
      - description: Sort field
        in: query
        name: sort_by
        required: false
        schema:
          default: timestamp
          description: Sort field
          title: Sort By
          type: string
      - description: Sort order
        in: query
        name: sort_order
        required: false
        schema:
          default: -1
          description: Sort order
          title: Sort Order
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Query Audit Logs
      tags:
      - hash-audit
      - Hash Audit
  /api/v1/audit/hash/recent:
    get:
      description: Get recent audit activity for monitoring and alerting
      operationId: get_recent_audit_activity_api_v1_audit_hash_recent_get
      parameters:
      - description: Look back time in minutes
        in: query
        name: minutes
        required: false
        schema:
          default: 60
          description: Look back time in minutes
          maximum: 1440
          minimum: 1
          title: Minutes
          type: integer
      - description: Filter by operation types
        in: query
        name: operation_types
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by operation types
          title: Operation Types
      - description: Filter by severity levels
        in: query
        name: severity_filter
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by severity levels
          title: Severity Filter
      - description: Maximum results
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Maximum results
          maximum: 500
          minimum: 1
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Recent Audit Activity
      tags:
      - hash-audit
      - Hash Audit
  /api/v1/audit/hash/resources/{resource_type}/{resource_id}/trail:
    get:
      description: Get complete audit trail for a specific FHIR resource
      operationId: get_resource_audit_trail_api_v1_audit_hash_resources__resource_type___resource_id__trail_get
      parameters:
      - description: FHIR resource type
        in: path
        name: resource_type
        required: true
        schema:
          description: FHIR resource type
          title: Resource Type
          type: string
      - description: FHIR resource ID
        in: path
        name: resource_id
        required: true
        schema:
          description: FHIR resource ID
          title: Resource Id
          type: string
      - description: Include verification history
        in: query
        name: include_verification_history
        required: false
        schema:
          default: true
          description: Include verification history
          title: Include Verification History
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Resource Audit Trail
      tags:
      - hash-audit
      - Hash Audit
  /api/v1/audit/hash/statistics:
    get:
      description: Get comprehensive audit log statistics and analytics
      operationId: get_audit_statistics_api_v1_audit_hash_statistics_get
      parameters:
      - description: Start date for statistics
        in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Start date for statistics
          title: Start Date
      - description: End date for statistics
        in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: End date for statistics
          title: End Date
      - description: Group statistics by field
        in: query
        name: group_by
        required: false
        schema:
          default: operation_type
          description: Group statistics by field
          title: Group By
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Audit Statistics
      tags:
      - hash-audit
      - Hash Audit
  /api/v1/audit/hash/users/{user_id}/trail:
    get:
      description: Get comprehensive audit trail for a specific user
      operationId: get_user_audit_trail_api_v1_audit_hash_users__user_id__trail_get
      parameters:
      - description: User ID to get audit trail for
        in: path
        name: user_id
        required: true
        schema:
          description: User ID to get audit trail for
          title: User Id
          type: string
      - description: Start date for trail
        in: query
        name: start_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Start date for trail
          title: Start Date
      - description: End date for trail
        in: query
        name: end_date
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: End date for trail
          title: End Date
      - description: Maximum number of results
        in: query
        name: limit
        required: false
        schema:
          default: 100
          description: Maximum number of results
          maximum: 1000
          minimum: 1
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get User Audit Trail
      tags:
      - hash-audit
      - Hash Audit
  /auth/login:
    post:
      description: Login endpoint - Fixed implementation
      operationId: login_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                message: Login successful
                refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                success: true
                token_type: bearer
                user:
                  full_name: Administrator
                  role: admin
                  username: admin
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: Login successful
        '401':
          content:
            application/json:
              example:
                detail: Invalid credentials
          description: Invalid credentials
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '503':
          content:
            application/json:
              example:
                detail: 'Authentication service unavailable: Connection timeout'
          description: Authentication service unavailable
      summary: Login
      tags:
      - authentication
      - Authentication
  /auth/me:
    get:
      description: Get comprehensive current user info from Stardust-V1 JWT
      operationId: get_me_auth_me_get
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  authentication_source: Stardust-V1
                  email: admin@my-firstcare.com
                  full_name: Administrator
                  permissions:
                  - read
                  - write
                  - admin
                  phone: +66-XXX-XXX-XXXX
                  role: admin
                  system_access:
                    can_access_admin: true
                    can_modify_data: true
                    can_view_data: true
                    is_superadmin: false
                  token_type: JWT
                  username: admin
                message: Comprehensive user information retrieved successfully from
                  Stardust-V1 JWT
                request_id: d4e5f6g7-h8i9-0123-defg-456789012345
                success: true
                timestamp: '2025-07-07T07:08:07.633870Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: User information retrieved successfully
        '401':
          content:
            application/json:
              example:
                detail: Invalid or expired token
          description: Authentication required
      security:
      - HTTPBearer: []
      summary: Get Me
      tags:
      - authentication
      - Authentication
  /auth/refresh:
    post:
      description: Refresh token endpoint - Fixed implementation
      operationId: refresh_token_auth_refresh_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                message: Token refreshed successfully
                success: true
                token_type: bearer
                user: {}
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: Token refreshed successfully
        '401':
          content:
            application/json:
              example:
                detail: Invalid refresh token
          description: Invalid refresh token
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Refresh Token
      tags:
      - authentication
      - Authentication
  /auth/simple-login:
    post:
      description: Simple test login endpoint
      operationId: simple_login_auth_simple_login_post
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Simple Login
      tags:
      - authentication
      - Authentication
  /fhir/R5/CarePlan:
    get:
      description: Search FHIR R5 CarePlan resources
      operationId: search_care_plans_fhir_R5_CarePlan_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Care plan category
        in: query
        name: category
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Care plan category
          title: Category
      - description: Care plan status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Care plan status
          title: Status
      - description: Care plan intent
        in: query
        name: intent
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Care plan intent
          title: Intent
      - description: Date range
        in: query
        name: date
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Date range
          title: Date
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search CarePlans
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 CarePlan resource
      operationId: create_care_plan_fhir_R5_CarePlan_post
      requestBody:
        content:
          application/json:
            schema:
              title: Care Plan Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create CarePlan
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/CarePlan/{care_plan_id}:
    delete:
      description: Delete a FHIR R5 CarePlan resource
      operationId: delete_care_plan_fhir_R5_CarePlan__care_plan_id__delete
      parameters:
      - description: CarePlan ID
        in: path
        name: care_plan_id
        required: true
        schema:
          description: CarePlan ID
          title: Care Plan Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete CarePlan
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 CarePlan resource by ID
      operationId: get_care_plan_fhir_R5_CarePlan__care_plan_id__get
      parameters:
      - description: CarePlan ID
        in: path
        name: care_plan_id
        required: true
        schema:
          description: CarePlan ID
          title: Care Plan Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get CarePlan by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 CarePlan resource
      operationId: update_care_plan_fhir_R5_CarePlan__care_plan_id__put
      parameters:
      - description: CarePlan ID
        in: path
        name: care_plan_id
        required: true
        schema:
          description: CarePlan ID
          title: Care Plan Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Care Plan Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update CarePlan
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Device:
    get:
      description: Search FHIR R5 Device resources
      operationId: search_devices_fhir_R5_Device_get
      parameters:
      - description: Device identifier
        in: query
        name: identifier
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Device identifier
          title: Identifier
      - description: Device type
        in: query
        name: type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Device type
          title: Type
      - description: Manufacturer
        in: query
        name: manufacturer
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Manufacturer
          title: Manufacturer
      - description: Model number
        in: query
        name: model
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Model number
          title: Model
      - description: Device status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Device status
          title: Status
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Devices
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 Device resource
      operationId: create_device_fhir_R5_Device_post
      requestBody:
        content:
          application/json:
            schema:
              title: Device Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Device
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Device/{device_id}:
    delete:
      description: Delete a FHIR R5 Device resource
      operationId: delete_device_fhir_R5_Device__device_id__delete
      parameters:
      - description: Device ID
        in: path
        name: device_id
        required: true
        schema:
          description: Device ID
          title: Device Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Device
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 Device resource by ID
      operationId: get_device_fhir_R5_Device__device_id__get
      parameters:
      - description: Device ID
        in: path
        name: device_id
        required: true
        schema:
          description: Device ID
          title: Device Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Device by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 Device resource
      operationId: update_device_fhir_R5_Device__device_id__put
      parameters:
      - description: Device ID
        in: path
        name: device_id
        required: true
        schema:
          description: Device ID
          title: Device Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Device Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Device
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/DiagnosticReport:
    get:
      description: Search FHIR R5 DiagnosticReport resources
      operationId: search_diagnostic_reports_fhir_R5_DiagnosticReport_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Report category
        in: query
        name: category
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Report category
          title: Category
      - description: Report code
        in: query
        name: code
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Report code
          title: Code
      - description: Date range
        in: query
        name: date
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Date range
          title: Date
      - description: Report status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Report status
          title: Status
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search DiagnosticReports
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a FHIR R5 DiagnosticReport resource
      operationId: create_diagnostic_report_fhir_R5_DiagnosticReport_post
      requestBody:
        content:
          application/json:
            schema:
              title: Diagnostic Report Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create DiagnosticReport
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/DiagnosticReport/{diagnostic_report_id}:
    delete:
      description: Delete a FHIR R5 DiagnosticReport
      operationId: delete_diagnostic_report_fhir_R5_DiagnosticReport__diagnostic_report_id__delete
      parameters:
      - description: DiagnosticReport ID
        in: path
        name: diagnostic_report_id
        required: true
        schema:
          description: DiagnosticReport ID
          title: Diagnostic Report Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete DiagnosticReport
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 DiagnosticReport by ID
      operationId: get_diagnostic_report_fhir_R5_DiagnosticReport__diagnostic_report_id__get
      parameters:
      - description: DiagnosticReport ID
        in: path
        name: diagnostic_report_id
        required: true
        schema:
          description: DiagnosticReport ID
          title: Diagnostic Report Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get DiagnosticReport by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 DiagnosticReport
      operationId: update_diagnostic_report_fhir_R5_DiagnosticReport__diagnostic_report_id__put
      parameters:
      - description: DiagnosticReport ID
        in: path
        name: diagnostic_report_id
        required: true
        schema:
          description: DiagnosticReport ID
          title: Diagnostic Report Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Diagnostic Report Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update DiagnosticReport
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/DocumentReference:
    get:
      description: Search FHIR R5 DocumentReference resources
      operationId: search_document_references_fhir_R5_DocumentReference_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Document type
        in: query
        name: type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Document type
          title: Type
      - description: Document category
        in: query
        name: category
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Document category
          title: Category
      - description: Date range
        in: query
        name: date
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Date range
          title: Date
      - description: Document status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Document status
          title: Status
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search DocumentReferences
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a FHIR R5 DocumentReference resource
      operationId: create_document_reference_fhir_R5_DocumentReference_post
      requestBody:
        content:
          application/json:
            schema:
              title: Document Reference Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create DocumentReference
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/DocumentReference/{document_reference_id}:
    delete:
      description: Delete a FHIR R5 DocumentReference
      operationId: delete_document_reference_fhir_R5_DocumentReference__document_reference_id__delete
      parameters:
      - description: DocumentReference ID
        in: path
        name: document_reference_id
        required: true
        schema:
          description: DocumentReference ID
          title: Document Reference Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete DocumentReference
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 DocumentReference by ID
      operationId: get_document_reference_fhir_R5_DocumentReference__document_reference_id__get
      parameters:
      - description: DocumentReference ID
        in: path
        name: document_reference_id
        required: true
        schema:
          description: DocumentReference ID
          title: Document Reference Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get DocumentReference by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 DocumentReference
      operationId: update_document_reference_fhir_R5_DocumentReference__document_reference_id__put
      parameters:
      - description: DocumentReference ID
        in: path
        name: document_reference_id
        required: true
        schema:
          description: DocumentReference ID
          title: Document Reference Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Document Reference Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update DocumentReference
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Flag:
    get:
      description: Search FHIR R5 Flag resources
      operationId: search_flags_fhir_R5_Flag_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Flag category
        in: query
        name: category
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Flag category
          title: Category
      - description: Flag code
        in: query
        name: code
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Flag code
          title: Code
      - description: Flag status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Flag status
          title: Status
      - description: Date range
        in: query
        name: date
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Date range
          title: Date
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Flags
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 Flag resource
      operationId: create_flag_fhir_R5_Flag_post
      requestBody:
        content:
          application/json:
            schema:
              title: Flag Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Flag
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Flag/{flag_id}:
    delete:
      description: Delete a FHIR R5 Flag resource
      operationId: delete_flag_fhir_R5_Flag__flag_id__delete
      parameters:
      - description: Flag ID
        in: path
        name: flag_id
        required: true
        schema:
          description: Flag ID
          title: Flag Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Flag
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 Flag resource by ID
      operationId: get_flag_fhir_R5_Flag__flag_id__get
      parameters:
      - description: Flag ID
        in: path
        name: flag_id
        required: true
        schema:
          description: Flag ID
          title: Flag Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Flag by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 Flag resource
      operationId: update_flag_fhir_R5_Flag__flag_id__put
      parameters:
      - description: Flag ID
        in: path
        name: flag_id
        required: true
        schema:
          description: Flag ID
          title: Flag Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Flag Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Flag
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Goal:
    get:
      description: Search FHIR R5 Goal resources
      operationId: search_goals_fhir_R5_Goal_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Goal category
        in: query
        name: category
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Goal category
          title: Category
      - description: Goal lifecycle status
        in: query
        name: lifecycle-status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Goal lifecycle status
          title: Lifecycle-Status
      - description: Goal achievement status
        in: query
        name: achievement-status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Goal achievement status
          title: Achievement-Status
      - description: Goal start date
        in: query
        name: start-date
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Goal start date
          title: Start-Date
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Goals
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 Goal resource
      operationId: create_goal_fhir_R5_Goal_post
      requestBody:
        content:
          application/json:
            schema:
              title: Goal Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Goal
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Goal/{goal_id}:
    delete:
      description: Delete a FHIR R5 Goal resource
      operationId: delete_goal_fhir_R5_Goal__goal_id__delete
      parameters:
      - description: Goal ID
        in: path
        name: goal_id
        required: true
        schema:
          description: Goal ID
          title: Goal Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Goal
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 Goal resource by ID
      operationId: get_goal_fhir_R5_Goal__goal_id__get
      parameters:
      - description: Goal ID
        in: path
        name: goal_id
        required: true
        schema:
          description: Goal ID
          title: Goal Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Goal by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 Goal resource
      operationId: update_goal_fhir_R5_Goal__goal_id__put
      parameters:
      - description: Goal ID
        in: path
        name: goal_id
        required: true
        schema:
          description: Goal ID
          title: Goal Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Goal Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Goal
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/MedicationStatement:
    get:
      description: Search FHIR R5 MedicationStatement resources
      operationId: search_medication_statements_fhir_R5_MedicationStatement_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: MedicationStatement status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: MedicationStatement status
          title: Status
      - description: Medication reference
        in: query
        name: medication
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Medication reference
          title: Medication
      - description: Date range when medication was taken
        in: query
        name: effective
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Date range when medication was taken
          title: Effective
      - description: Information source
        in: query
        name: source
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Information source
          title: Source
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search MedicationStatements
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a FHIR R5 MedicationStatement resource
      operationId: create_medication_statement_fhir_R5_MedicationStatement_post
      requestBody:
        content:
          application/json:
            schema:
              title: Medication Statement Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create MedicationStatement
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/MedicationStatement/{medication_statement_id}:
    delete:
      description: Delete a FHIR R5 MedicationStatement
      operationId: delete_medication_statement_fhir_R5_MedicationStatement__medication_statement_id__delete
      parameters:
      - description: MedicationStatement ID
        in: path
        name: medication_statement_id
        required: true
        schema:
          description: MedicationStatement ID
          title: Medication Statement Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete MedicationStatement
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 MedicationStatement by ID
      operationId: get_medication_statement_fhir_R5_MedicationStatement__medication_statement_id__get
      parameters:
      - description: MedicationStatement ID
        in: path
        name: medication_statement_id
        required: true
        schema:
          description: MedicationStatement ID
          title: Medication Statement Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get MedicationStatement by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 MedicationStatement
      operationId: update_medication_statement_fhir_R5_MedicationStatement__medication_statement_id__put
      parameters:
      - description: MedicationStatement ID
        in: path
        name: medication_statement_id
        required: true
        schema:
          description: MedicationStatement ID
          title: Medication Statement Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Medication Statement Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update MedicationStatement
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Observation:
    get:
      description: Search FHIR R5 Observation resources
      operationId: search_observations_fhir_R5_Observation_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Observation code
        in: query
        name: code
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Observation code
          title: Code
      - description: Observation category
        in: query
        name: category
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Observation category
          title: Category
      - description: Date range
        in: query
        name: date
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Date range
          title: Date
      - description: Device reference
        in: query
        name: device
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Device reference
          title: Device
      - description: Observation status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Observation status
          title: Status
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Observations
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 Observation resource
      operationId: create_observation_fhir_R5_Observation_post
      requestBody:
        content:
          application/json:
            schema:
              title: Observation Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Observation
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Observation/from-mqtt:
    post:
      description: Create FHIR R5 Observations from AVA4 MQTT data
      operationId: create_observation_from_mqtt_fhir_R5_Observation_from_mqtt_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_create_observation_from_mqtt_fhir_R5_Observation_from_mqtt_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Observation from AVA4 MQTT
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Observation/{observation_id}:
    delete:
      description: Delete a FHIR R5 Observation resource
      operationId: delete_observation_fhir_R5_Observation__observation_id__delete
      parameters:
      - description: Observation ID
        in: path
        name: observation_id
        required: true
        schema:
          description: Observation ID
          title: Observation Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Observation
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 Observation resource by ID
      operationId: get_observation_fhir_R5_Observation__observation_id__get
      parameters:
      - description: Observation ID
        in: path
        name: observation_id
        required: true
        schema:
          description: Observation ID
          title: Observation Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Observation by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 Observation resource
      operationId: update_observation_fhir_R5_Observation__observation_id__put
      parameters:
      - description: Observation ID
        in: path
        name: observation_id
        required: true
        schema:
          description: Observation ID
          title: Observation Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Observation Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Observation
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Organization:
    get:
      description: Search FHIR R5 Organization resources
      operationId: search_organizations_fhir_R5_Organization_get
      parameters:
      - description: Organization identifier
        in: query
        name: identifier
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Organization identifier
          title: Identifier
      - description: Organization name
        in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Organization name
          title: Name
      - description: Organization type
        in: query
        name: type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Organization type
          title: Type
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Organizations
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 Organization resource
      operationId: create_organization_fhir_R5_Organization_post
      requestBody:
        content:
          application/json:
            schema:
              title: Organization Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Organization
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Organization/{organization_id}:
    get:
      description: Get a FHIR R5 Organization resource by ID
      operationId: get_organization_fhir_R5_Organization__organization_id__get
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        schema:
          description: Organization ID
          title: Organization Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Organization by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 Organization resource
      operationId: update_organization_fhir_R5_Organization__organization_id__put
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        schema:
          description: Organization ID
          title: Organization Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Organization Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Organization
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Patient:
    get:
      description: Search FHIR R5 Patient resources
      operationId: search_patients_fhir_R5_Patient_get
      parameters:
      - description: Patient identifier
        in: query
        name: identifier
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient identifier
          title: Identifier
      - description: Patient name
        in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient name
          title: Name
      - description: Birth date
        in: query
        name: birthdate
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Birth date
          title: Birthdate
      - description: Gender
        in: query
        name: gender
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Gender
          title: Gender
      - description: Managing organization
        in: query
        name: organization
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Managing organization
          title: Organization
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Patients
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 Patient resource
      operationId: create_patient_fhir_R5_Patient_post
      requestBody:
        content:
          application/json:
            schema:
              title: Patient Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Patient
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Patient/{patient_id}:
    delete:
      description: Delete a FHIR R5 Patient resource
      operationId: delete_patient_fhir_R5_Patient__patient_id__delete
      parameters:
      - description: Patient ID
        in: path
        name: patient_id
        required: true
        schema:
          description: Patient ID
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Patient
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 Patient resource by ID
      operationId: get_patient_fhir_R5_Patient__patient_id__get
      parameters:
      - description: Patient ID
        in: path
        name: patient_id
        required: true
        schema:
          description: Patient ID
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Patient by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 Patient resource
      operationId: update_patient_fhir_R5_Patient__patient_id__put
      parameters:
      - description: Patient ID
        in: path
        name: patient_id
        required: true
        schema:
          description: Patient ID
          title: Patient Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Patient Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Patient
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/RelatedPerson:
    get:
      description: Search FHIR R5 RelatedPerson resources
      operationId: search_related_persons_fhir_R5_RelatedPerson_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Relationship type
        in: query
        name: relationship
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Relationship type
          title: Relationship
      - description: Related person name
        in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Related person name
          title: Name
      - description: Contact information
        in: query
        name: telecom
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Contact information
          title: Telecom
      - description: Active status
        in: query
        name: active
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Active status
          title: Active
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search RelatedPersons
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 RelatedPerson resource
      operationId: create_related_person_fhir_R5_RelatedPerson_post
      requestBody:
        content:
          application/json:
            schema:
              title: Related Person Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create RelatedPerson
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/RelatedPerson/{related_person_id}:
    delete:
      description: Delete a FHIR R5 RelatedPerson resource
      operationId: delete_related_person_fhir_R5_RelatedPerson__related_person_id__delete
      parameters:
      - description: RelatedPerson ID
        in: path
        name: related_person_id
        required: true
        schema:
          description: RelatedPerson ID
          title: Related Person Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete RelatedPerson
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 RelatedPerson resource by ID
      operationId: get_related_person_fhir_R5_RelatedPerson__related_person_id__get
      parameters:
      - description: RelatedPerson ID
        in: path
        name: related_person_id
        required: true
        schema:
          description: RelatedPerson ID
          title: Related Person Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get RelatedPerson by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 RelatedPerson resource
      operationId: update_related_person_fhir_R5_RelatedPerson__related_person_id__put
      parameters:
      - description: RelatedPerson ID
        in: path
        name: related_person_id
        required: true
        schema:
          description: RelatedPerson ID
          title: Related Person Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Related Person Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update RelatedPerson
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/RiskAssessment:
    get:
      description: Search FHIR R5 RiskAssessment resources
      operationId: search_risk_assessments_fhir_R5_RiskAssessment_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Assessment method
        in: query
        name: method
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Assessment method
          title: Method
      - description: Assessment code
        in: query
        name: code
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Assessment code
          title: Code
      - description: Assessment status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Assessment status
          title: Status
      - description: Date range
        in: query
        name: date
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Date range
          title: Date
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search RiskAssessments
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 RiskAssessment resource
      operationId: create_risk_assessment_fhir_R5_RiskAssessment_post
      requestBody:
        content:
          application/json:
            schema:
              title: Risk Assessment Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create RiskAssessment
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/RiskAssessment/{risk_assessment_id}:
    delete:
      description: Delete a FHIR R5 RiskAssessment resource
      operationId: delete_risk_assessment_fhir_R5_RiskAssessment__risk_assessment_id__delete
      parameters:
      - description: RiskAssessment ID
        in: path
        name: risk_assessment_id
        required: true
        schema:
          description: RiskAssessment ID
          title: Risk Assessment Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete RiskAssessment
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 RiskAssessment resource by ID
      operationId: get_risk_assessment_fhir_R5_RiskAssessment__risk_assessment_id__get
      parameters:
      - description: RiskAssessment ID
        in: path
        name: risk_assessment_id
        required: true
        schema:
          description: RiskAssessment ID
          title: Risk Assessment Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get RiskAssessment by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 RiskAssessment resource
      operationId: update_risk_assessment_fhir_R5_RiskAssessment__risk_assessment_id__put
      parameters:
      - description: RiskAssessment ID
        in: path
        name: risk_assessment_id
        required: true
        schema:
          description: RiskAssessment ID
          title: Risk Assessment Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Risk Assessment Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update RiskAssessment
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/ServiceRequest:
    get:
      description: Search FHIR R5 ServiceRequest resources
      operationId: search_service_requests_fhir_R5_ServiceRequest_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Service category
        in: query
        name: category
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Service category
          title: Category
      - description: Service code
        in: query
        name: code
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Service code
          title: Code
      - description: Request status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Request status
          title: Status
      - description: Request intent
        in: query
        name: intent
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Request intent
          title: Intent
      - description: Date authored
        in: query
        name: authored
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Date authored
          title: Authored
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search ServiceRequests
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 ServiceRequest resource
      operationId: create_service_request_fhir_R5_ServiceRequest_post
      requestBody:
        content:
          application/json:
            schema:
              title: Service Request Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create ServiceRequest
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/ServiceRequest/{service_request_id}:
    delete:
      description: Delete a FHIR R5 ServiceRequest resource
      operationId: delete_service_request_fhir_R5_ServiceRequest__service_request_id__delete
      parameters:
      - description: ServiceRequest ID
        in: path
        name: service_request_id
        required: true
        schema:
          description: ServiceRequest ID
          title: Service Request Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete ServiceRequest
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 ServiceRequest resource by ID
      operationId: get_service_request_fhir_R5_ServiceRequest__service_request_id__get
      parameters:
      - description: ServiceRequest ID
        in: path
        name: service_request_id
        required: true
        schema:
          description: ServiceRequest ID
          title: Service Request Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get ServiceRequest by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 ServiceRequest resource
      operationId: update_service_request_fhir_R5_ServiceRequest__service_request_id__put
      parameters:
      - description: ServiceRequest ID
        in: path
        name: service_request_id
        required: true
        schema:
          description: ServiceRequest ID
          title: Service Request Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Service Request Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update ServiceRequest
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Specimen:
    get:
      description: Search FHIR R5 Specimen resources
      operationId: search_specimens_fhir_R5_Specimen_get
      parameters:
      - description: Patient reference
        in: query
        name: patient
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Patient reference
          title: Patient
      - description: Specimen type
        in: query
        name: type
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Specimen type
          title: Type
      - description: Specimen status
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Specimen status
          title: Status
      - description: Collection date
        in: query
        name: collected
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Collection date
          title: Collected
      - description: Accession identifier
        in: query
        name: accession
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Accession identifier
          title: Accession
      - description: Number of results
        in: query
        name: _count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results
          title: ' Count'
      - description: Search offset
        in: query
        name: _offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Search offset
          title: ' Offset'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Specimens
      tags:
      - fhir-r5
      - FHIR R5
    post:
      description: Create a new FHIR R5 Specimen resource
      operationId: create_specimen_fhir_R5_Specimen_post
      requestBody:
        content:
          application/json:
            schema:
              title: Specimen Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Specimen
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/Specimen/{specimen_id}:
    delete:
      description: Delete a FHIR R5 Specimen resource
      operationId: delete_specimen_fhir_R5_Specimen__specimen_id__delete
      parameters:
      - description: Specimen ID
        in: path
        name: specimen_id
        required: true
        schema:
          description: Specimen ID
          title: Specimen Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Specimen
      tags:
      - fhir-r5
      - FHIR R5
    get:
      description: Get a FHIR R5 Specimen resource by ID
      operationId: get_specimen_fhir_R5_Specimen__specimen_id__get
      parameters:
      - description: Specimen ID
        in: path
        name: specimen_id
        required: true
        schema:
          description: Specimen ID
          title: Specimen Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Specimen by ID
      tags:
      - fhir-r5
      - FHIR R5
    put:
      description: Update a FHIR R5 Specimen resource
      operationId: update_specimen_fhir_R5_Specimen__specimen_id__put
      parameters:
      - description: Specimen ID
        in: path
        name: specimen_id
        required: true
        schema:
          description: Specimen ID
          title: Specimen Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Specimen Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Specimen
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/analytics/summary:
    get:
      description: Get summary analytics of all FHIR R5 resources
      operationId: get_fhir_summary_fhir_R5_analytics_summary_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: FHIR R5 Resources Summary
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/blockchain/$chain-export:
    get:
      description: Export the complete blockchain hash chain for backup or analysis
      operationId: export_blockchain_chain_fhir_R5_blockchain__chain_export_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Export Blockchain Chain
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/blockchain/$chain-info:
    get:
      description: Get comprehensive information about the FHIR blockchain hash chain
      operationId: get_blockchain_chain_info_fhir_R5_blockchain__chain_info_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Blockchain Chain Information
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/blockchain/$chain-verify:
    get:
      description: Verify the integrity of the entire blockchain hash chain
      operationId: verify_blockchain_chain_integrity_fhir_R5_blockchain__chain_verify_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Verify Blockchain Chain Integrity
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/blockchain/$statistics:
    get:
      description: Get comprehensive blockchain and FHIR resource statistics
      operationId: get_blockchain_statistics_fhir_R5_blockchain__statistics_get
      parameters:
      - description: Include detailed per-resource statistics
        in: query
        name: include_resource_details
        required: false
        schema:
          default: false
          description: Include detailed per-resource statistics
          title: Include Resource Details
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Blockchain Statistics
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/metadata:
    get:
      description: Get FHIR R5 Capability Statement
      operationId: get_capability_statement_fhir_R5_metadata_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: FHIR R5 Capability Statement
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/migration/amy/allergy-history:
    post:
      description: Migrate AMY allergy history to FHIR R5 AllergyIntolerance resources
      operationId: migrate_amy_allergy_history_fhir_R5_migration_amy_allergy_history_post
      requestBody:
        content:
          application/json:
            schema:
              description: Patient ObjectId from AMY
              title: Patient Id
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Migrate AMY Allergy History
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/migration/amy/body-data:
    post:
      description: Migrate AMY body data to FHIR R5 Observation resources
      operationId: migrate_amy_body_data_fhir_R5_migration_amy_body_data_post
      requestBody:
        content:
          application/json:
            schema:
              description: Patient ObjectId from AMY
              title: Patient Id
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Migrate AMY Body Data
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/migration/amy/comprehensive-patient:
    post:
      description: Comprehensive migration of AMY patient data to all relevant FHIR
        R5 resources
      operationId: migrate_amy_comprehensive_patient_fhir_R5_migration_amy_comprehensive_patient_post
      requestBody:
        content:
          application/json:
            schema:
              description: Patient ObjectId from AMY
              title: Patient Id
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Comprehensive AMY Patient Migration
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/migration/amy/emergency-contacts:
    post:
      description: Migrate AMY emergency contact data to FHIR RelatedPerson resources
      operationId: migrate_amy_emergency_contacts_fhir_R5_migration_amy_emergency_contacts_post
      requestBody:
        content:
          application/json:
            schema:
              description: Patient ObjectId from AMY
              title: Patient Id
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Migrate AMY Emergency Contacts
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/migration/amy/medication-history:
    post:
      description: Migrate AMY medication history to FHIR R5 MedicationStatement resources
      operationId: migrate_amy_medication_history_fhir_R5_migration_amy_medication_history_post
      requestBody:
        content:
          application/json:
            schema:
              description: Patient ObjectId from AMY
              title: Patient Id
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Migrate AMY Medication History
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/migration/amy/patient-alerts:
    post:
      description: Migrate AMY patient alert data to FHIR Flag resources
      operationId: migrate_amy_patient_alerts_fhir_R5_migration_amy_patient_alerts_post
      requestBody:
        content:
          application/json:
            schema:
              description: Patient ObjectId from AMY
              title: Patient Id
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Migrate AMY Patient Alerts
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/migration/amy/patient-devices:
    post:
      description: Migrate AMY patient device data to FHIR Device resources
      operationId: migrate_amy_patient_devices_fhir_R5_migration_amy_patient_devices_post
      requestBody:
        content:
          application/json:
            schema:
              description: Patient ObjectId from AMY
              title: Patient Id
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Migrate AMY Patient Devices
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/migration/amy/patient-goals:
    post:
      description: Migrate AMY patient goal data to FHIR Goal resources
      operationId: migrate_amy_patient_goals_fhir_R5_migration_amy_patient_goals_post
      requestBody:
        content:
          application/json:
            schema:
              description: Patient ObjectId from AMY
              title: Patient Id
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Migrate AMY Patient Goals
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/{resource_type}/$verify-batch:
    post:
      description: Verify the blockchain hash integrity of multiple FHIR resources
      operationId: verify_batch_blockchain_hashes_fhir_R5__resource_type___verify_batch_post
      parameters:
      - description: FHIR resource type
        in: path
        name: resource_type
        required: true
        schema:
          description: FHIR resource type
          title: Resource Type
          type: string
      requestBody:
        content:
          application/json:
            schema:
              description: List of resource IDs to verify
              items:
                type: string
              title: Resource Ids
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Verify Batch Resource Blockchain Hashes
      tags:
      - fhir-r5
      - FHIR R5
  /fhir/R5/{resource_type}/{resource_id}/$verify:
    get:
      description: Verify the blockchain hash integrity of a specific FHIR resource
      operationId: verify_resource_blockchain_hash_fhir_R5__resource_type___resource_id___verify_get
      parameters:
      - description: FHIR resource type
        in: path
        name: resource_type
        required: true
        schema:
          description: FHIR resource type
          title: Resource Type
          type: string
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        schema:
          description: Resource ID
          title: Resource Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Verify Resource Blockchain Hash
      tags:
      - fhir-r5
      - FHIR R5
  /health:
    get:
      description: Health check endpoint
      operationId: health_check_health_get
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  active_alerts: 0
                  alert_summary:
                    by_level:
                      critical: 0
                      high: 0
                      low: 0
                      medium: 0
                    last_24h: 0
                    total_active: 0
                    total_historical: 0
                  environment: production
                  mongodb: connected
                  status: healthy
                  version: 1.0.0
                message: Service is healthy
                request_id: a1b2c3d4-e5f6-7890-abcd-ef1234567890
                success: true
                timestamp: '2025-07-07T07:08:07.633870Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Health check successful
        '503':
          content:
            application/json:
              example:
                error_count: 1
                errors:
                - error_code: SERVICE_UNAVAILABLE
                  error_type: system_error
                  message: MongoDB connection is unhealthy
                  suggestion: Please try again later
                request_id: b2c3d4e5-f6g7-8901-bcde-f23456789012
                success: false
                timestamp: '2025-07-07T07:08:07.633870Z'
          description: Service unavailable
      summary: Health Check
  /realtime/events:
    get:
      description: 'Server-Sent Events endpoint for real-time updates


        Returns all system-wide events'
      operationId: sse_endpoint_realtime_events_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Sse Endpoint
      tags:
      - realtime
      - realtime
      - Real-time Communication
  /realtime/events/device/{device_type}/{device_id}:
    get:
      description: 'Server-Sent Events endpoint for device-specific updates


        Returns events related to a specific device'
      operationId: device_sse_endpoint_realtime_events_device__device_type___device_id__get
      parameters:
      - in: path
        name: device_type
        required: true
        schema:
          title: Device Type
          type: string
      - in: path
        name: device_id
        required: true
        schema:
          title: Device Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Device Sse Endpoint
      tags:
      - realtime
      - realtime
      - Real-time Communication
  /realtime/events/hospital/{hospital_id}:
    get:
      description: 'Server-Sent Events endpoint for hospital-specific updates


        Returns events related to a specific hospital'
      operationId: hospital_sse_endpoint_realtime_events_hospital__hospital_id__get
      parameters:
      - in: path
        name: hospital_id
        required: true
        schema:
          title: Hospital Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Hospital Sse Endpoint
      tags:
      - realtime
      - realtime
      - Real-time Communication
  /realtime/events/patient/{patient_id}:
    get:
      description: 'Server-Sent Events endpoint for patient-specific updates


        Returns events related to a specific patient'
      operationId: patient_sse_endpoint_realtime_events_patient__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Patient Sse Endpoint
      tags:
      - realtime
      - realtime
      - Real-time Communication
  /realtime/stats:
    get:
      description: Get WebSocket connection statistics
      operationId: get_websocket_stats_realtime_stats_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Websocket Stats
      tags:
      - realtime
      - realtime
      - Real-time Communication
  /realtime/test/publish:
    post:
      description: "Test endpoint to publish events (development only)\n\nExample\
        \ payload:\n{\n    \"event_type\": \"patient.vitals.update\",\n    \"patient_id\"\
        : \"507f1f77bcf86cd799439011\",\n    \"vitals\": {\n        \"blood_pressure\"\
        : {\"systolic\": 120, \"diastolic\": 80},\n        \"heart_rate\": 72,\n \
        \       \"temperature\": 36.5\n    }\n}"
      operationId: test_publish_event_realtime_test_publish_post
      requestBody:
        content:
          application/json:
            schema:
              title: Event Data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Test Publish Event
      tags:
      - realtime
      - realtime
      - Real-time Communication
  /reports/generate/{template_id}:
    post:
      description: Generate a report immediately
      operationId: generate_report_reports_generate__template_id__post
      parameters:
      - in: path
        name: template_id
        required: true
        schema:
          title: Template Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Successful Response
        '202':
          description: Report generation started
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Template not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Generate Report
      tags:
      - reports
      - reports
  /reports/jobs:
    get:
      description: List report generation jobs
      operationId: list_report_jobs_reports_jobs_get
      parameters:
      - description: Filter by template ID
        in: query
        name: template_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by template ID
          title: Template Id
      - description: Maximum number of jobs to return
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Maximum number of jobs to return
          maximum: 100
          minimum: 1
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Report jobs retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: List Report Jobs
      tags:
      - reports
      - reports
  /reports/jobs/{job_id}:
    get:
      description: Get a specific report job
      operationId: get_report_job_reports_jobs__job_id__get
      parameters:
      - in: path
        name: job_id
        required: true
        schema:
          title: Job Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Report job retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Job not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Report Job
      tags:
      - reports
      - reports
  /reports/jobs/{job_id}/output:
    get:
      description: Get the output of a completed report job
      operationId: get_report_output_reports_jobs__job_id__output_get
      parameters:
      - in: path
        name: job_id
        required: true
        schema:
          title: Job Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Report output retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Job or output not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Report Output
      tags:
      - reports
      - reports
  /reports/schedule/check:
    post:
      description: Manually trigger scheduled report check (for testing)
      operationId: check_scheduled_reports_reports_schedule_check_post
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Scheduled reports checked
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Check Scheduled Reports
      tags:
      - reports
      - reports
  /reports/templates:
    get:
      description: List all report templates
      operationId: list_report_templates_reports_templates_get
      parameters:
      - description: Show only active templates
        in: query
        name: active_only
        required: false
        schema:
          default: true
          description: Show only active templates
          title: Active Only
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Report templates retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: List Report Templates
      tags:
      - reports
      - reports
    post:
      description: Create a new report template
      operationId: create_report_template_reports_templates_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReportTemplateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Successful Response
        '201':
          description: Report template created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Create Report Template
      tags:
      - reports
      - reports
  /reports/templates/{template_id}:
    delete:
      description: Delete a report template
      operationId: delete_report_template_reports_templates__template_id__delete
      parameters:
      - in: path
        name: template_id
        required: true
        schema:
          title: Template Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Report template deleted successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Template not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Delete Report Template
      tags:
      - reports
      - reports
    get:
      description: Get a specific report template
      operationId: get_report_template_reports_templates__template_id__get
      parameters:
      - in: path
        name: template_id
        required: true
        schema:
          title: Template Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Report template retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Template not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Report Template
      tags:
      - reports
      - reports
    put:
      description: Update an existing report template
      operationId: update_report_template_reports_templates__template_id__put
      parameters:
      - in: path
        name: template_id
        required: true
        schema:
          title: Template Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReportTemplateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Report template updated successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request data
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Template not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Update Report Template
      tags:
      - reports
      - reports
  /reports/types:
    get:
      description: Get available report types, formats, and frequencies
      operationId: get_report_types_reports_types_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Report types retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
      security:
      - HTTPBearer: []
      summary: Get Report Types
      tags:
      - reports
      - reports
  /status:
    get:
      description: Get detailed status information about the API including endpoint
        statistics
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  failed_endpoints:
                    example: 10
                    type: integer
                  last_updated:
                    format: date-time
                    type: string
                  status:
                    example: operational
                    type: string
                  success_rate:
                    example: 65.0
                    type: number
                  tested_endpoints:
                    example: 40
                    type: integer
                  total_endpoints:
                    example: 194
                    type: integer
                  working_endpoints:
                    example: 26
                    type: integer
                type: object
          description: API status information
      summary: API Status Information
      tags:
      - system
  /test-schema:
    get:
      description: Test endpoint to force registration of response models in OpenAPI
        schema
      operationId: test_schema_endpoint_test_schema_get
      responses:
        '200':
          content:
            application/json:
              example:
                data:
                  schema_registered: true
                message: Schema test endpoint - this forces FastAPI to register SuccessResponse
                  in OpenAPI
                request_id: test-schema-endpoint
                success: true
                timestamp: '2025-07-07T07:08:07.633870Z'
              schema:
                $ref: '#/components/schemas/app__utils__error_definitions__SuccessResponse'
          description: Schema test endpoint response
      summary: Test Schema Endpoint
  /visualization/charts/anomaly-scatter/{patient_id}:
    get:
      description: Get vital signs anomaly data formatted for scatter plot charts
      operationId: get_anomaly_scatter_chart_visualization_charts_anomaly_scatter__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - description: Type of vital sign
        in: query
        name: vital_type
        required: true
        schema:
          description: Type of vital sign
          title: Vital Type
          type: string
      - description: Number of days to analyze
        in: query
        name: days
        required: false
        schema:
          default: 30
          description: Number of days to analyze
          maximum: 90
          minimum: 1
          title: Days
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Anomaly scatter plot data retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Anomaly Scatter Chart
      tags:
      - visualization
      - visualization
  /visualization/charts/device-utilization:
    get:
      description: Get device utilization data formatted for charts
      operationId: get_device_utilization_chart_visualization_charts_device_utilization_get
      parameters:
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Analysis period
        in: query
        name: period
        required: false
        schema:
          default: weekly
          description: Analysis period
          title: Period
          type: string
      - description: Chart type (bar, line, area)
        in: query
        name: chart_type
        required: false
        schema:
          default: bar
          description: Chart type (bar, line, area)
          title: Chart Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Device utilization chart data retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Device Utilization Chart
      tags:
      - visualization
      - visualization
  /visualization/charts/patient-demographics:
    get:
      description: Get patient demographics data formatted for charts
      operationId: get_patient_demographics_chart_visualization_charts_patient_demographics_get
      parameters:
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Chart type (bar, pie, donut)
        in: query
        name: chart_type
        required: false
        schema:
          default: bar
          description: Chart type (bar, pie, donut)
          title: Chart Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Patient demographics chart data retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Patient Demographics Chart
      tags:
      - visualization
      - visualization
  /visualization/charts/risk-distribution:
    get:
      description: Get patient risk distribution formatted for charts
      operationId: get_risk_distribution_chart_visualization_charts_risk_distribution_get
      parameters:
      - description: Filter by hospital ID
        in: query
        name: hospital_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by hospital ID
          title: Hospital Id
      - description: Chart type (pie, donut, bar)
        in: query
        name: chart_type
        required: false
        schema:
          default: pie
          description: Chart type (pie, donut, bar)
          title: Chart Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Risk distribution chart data retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Risk Distribution Chart
      tags:
      - visualization
      - visualization
  /visualization/charts/risk-gauge/{patient_id}:
    get:
      description: Get patient risk score formatted for gauge chart
      operationId: get_risk_gauge_chart_visualization_charts_risk_gauge__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Risk gauge chart data retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Patient not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Risk Gauge Chart
      tags:
      - visualization
      - visualization
  /visualization/charts/system-overview:
    get:
      description: Get system overview data for dashboard
      operationId: get_system_overview_charts_visualization_charts_system_overview_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: System overview dashboard data retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get System Overview Charts
      tags:
      - visualization
      - visualization
  /visualization/charts/vital-trends/{patient_id}:
    get:
      description: Get vital signs trends formatted for time-series charts
      operationId: get_vital_trends_chart_visualization_charts_vital_trends__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - description: Type of vital sign
        in: query
        name: vital_type
        required: true
        schema:
          description: Type of vital sign
          title: Vital Type
          type: string
      - description: Number of days to display
        in: query
        name: days
        required: false
        schema:
          default: 7
          description: Number of days to display
          maximum: 90
          minimum: 1
          title: Days
          type: integer
      - description: Chart type (line, area)
        in: query
        name: chart_type
        required: false
        schema:
          default: line
          description: Chart type (line, area)
          title: Chart Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__base__SuccessResponse'
          description: Vital signs trend chart data retrieved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Patient not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      security:
      - HTTPBearer: []
      summary: Get Vital Trends Chart
      tags:
      - visualization
      - visualization
servers:
- description: Development server
  url: http://localhost:5054
- description: Production server
  url: https://stardust.my-firstcare.com
tags:
- description: System health and status endpoints
  name: system
- description: Authentication and authorization endpoints
  name: authentication
- description: Administrative operations and management
  name: admin
- description: Master data management (hospitals, provinces, districts)
  name: master-data
- description: Device management and mapping
  name: devices
- description: Patient management and profiles
  name: patients
- description: Medical history and records
  name: medical-history
- description: Hospital user management
  name: hospital-users
- description: Analytics and reporting
  name: analytics
- description: Security and monitoring
  name: security
- description: Geographic data and dropdowns
  name: geographic
- description: AVA4 device integration
  name: ava4
- description: Kati watch integration
  name: kati
- description: Qube-Vital device integration
  name: qube-vital
- description: Real-time data and WebSocket endpoints
  name: realtime
- description: Performance monitoring and metrics
  name: performance
