{
  "openapi": "3.1.0",
  "info": {
    "title": "My FirstCare Opera Panel",
    "description": "\n# My FirstCare Opera Panel API\n\nA comprehensive Medical IoT Device Management System for healthcare institutions.\n\n## Features\n\n### üè• **Device Management**\n- **AVA4 Devices**: Blood pressure, glucose monitoring\n- **Kati Watches**: Continuous vital sign monitoring \n- **Qube-Vital**: Advanced medical sensors\n\n### üë• **Patient Management**\n- Complete patient profiles and medical history\n- Real-time device data integration\n- Multi-hospital support\n- **Raw Document Access**: 431 patients with 269 fields per document\n\n### üìã **Raw Patient Document Analysis**\nAccess complete MongoDB patient documents with comprehensive field analysis:\n\n#### **Core Patient Fields (269 total)**:\n- **Demographics**: `first_name`, `last_name`, `gender`, `birth_date`, `id_card`, `phone`\n- **Location**: `address_1`, `address_2`, `province_code`, `district_code`, `sub_district_code`\n- **Medical IDs**: `amy_id`, `hn_id_no`, `patient_id`\n- **Emergency Contacts**: `emergency_contact_name`, `emergency_contact_phone`\n\n#### **Medical Device Integration (MAC Addresses)**:\n- **AVA4 Devices**: `ava_mac_address`, `ava_box_id`, `ava_sim_card`\n- **Blood Pressure**: `blood_pressure_mac_address`\n- **Blood Glucose**: `blood_glucose_mac_address`\n- **Temperature**: `body_temperature_mac_address`\n- **Pulse Oximetry**: `fingertip_pulse_oximeter_mac_address`\n- **Smartwatches**: `watch_mac_address`\n- **Cholesterol**: `cholesterol_mac_address`\n\n#### **Medical Alert Thresholds**:\n- **Blood Pressure**: `bp_sbp_above`, `bp_sbp_below`, `bp_dbp_above`, `bp_dbp_below`\n- **Blood Sugar**: `glucose_normal_before`, `glucose_normal_after`\n- **Temperature**: `temperature_normal_above`, `temperature_normal_below`\n- **SPO2**: `spo2_normal_above`, `spo2_normal_below`\n- **Cholesterol**: `cholesterol_above`, `cholesterol_below`\n\n#### **Medical History Fields**:\n- **Vital Signs**: Blood pressure, temperature, SPO2, heart rate\n- **Lab Results**: Creatinine, cholesterol, BUN levels\n- **Body Metrics**: Weight, BMI, body composition\n- **Medication**: Current medications, allergies, dosages\n- **Activity**: Sleep data, step counts, exercise patterns\n\n#### **Raw Document Endpoints**:\n- `GET /admin/patients-raw-documents` - Admin access to raw patient documents\n- `GET /api/ava4/patients/raw-documents` - AVA4 specific raw patient data\n- `GET /api/ava4/sub-devices/raw-documents` - Raw device documents with patient linkages\n\n### üîê **Security & Authentication**\n- **JWT-based Authentication**: All protected endpoints require Bearer tokens\n- **Stardust-V1 Integration**: Centralized authentication system\n- **FHIR R5 Audit Logging**: Complete audit trail\n- **Role-based Access Control**: Fine-grained permissions\n\n### üìä **Analytics & Monitoring**\n- Real-time dashboards\n- Performance metrics\n- Alert management\n- Medical trend analysis\n\n## Data Structure Analysis\n\n### **Patient Document Structure (431 Documents)**\nEach patient document contains **269 fields** including:\n\n1. **Core Demographics** (15 fields): Name, contact, identification\n2. **Medical Device MAC Addresses** (12 fields): IoT device integration\n3. **Alert Thresholds** (24 fields): Customizable medical alert limits\n4. **Medical History Integration** (50+ fields): Historical data references\n5. **Hospital Integration** (10 fields): Multi-hospital support\n6. **Audit Fields** (8 fields): Created, updated, deleted tracking\n7. **Additional Medical Data** (150+ fields): Comprehensive health metrics\n\n### **Raw Document Analysis Features**\n- **Field Type Analysis**: Automatic detection of data types per field\n- **Sample Value Extraction**: Preview of actual field values\n- **ObjectId Identification**: MongoDB relationship mapping\n- **Field Usage Statistics**: Count of populated fields across documents\n- **JSON Structure Preservation**: Complete document hierarchy maintained\n\n## Authentication\n\nMost endpoints require authentication using JWT Bearer tokens:\n\n1. **Obtain Token**: Use `/auth/login` with valid credentials\n2. **Use Token**: Include `Authorization: Bearer <token>` header\n3. **Refresh Token**: Use `/auth/refresh` when token expires\n\n### Public Endpoints (No Authentication Required)\n- `GET /` - API information\n- `GET /health` - System health check\n- `GET /docs` - API documentation\n- `GET /api/kati/test` - Kati API test endpoint\n- `POST /auth/login` - Authentication login\n- `POST /auth/refresh` - Token refresh\n\n### Protected Endpoints (Authentication Required)\n- All `/admin/*` endpoints\n- All `/api/*/devices` endpoints  \n- All `/api/*/data` endpoints\n- `/auth/me` - Current user information\n\n### **Raw Patient Document Endpoints** (Authentication Required)\n- `GET /admin/patients` - Complete patient documents (269 fields)\n- `GET /admin/patients-raw-documents` - Raw document analysis\n- `GET /api/ava4/patients/raw-documents` - AVA4 patient raw data\n- `GET /api/ava4/sub-devices/raw-documents` - Device-patient linkages\n\n## Error Handling\n\nThe API uses structured error responses with:\n- Consistent error codes and messages\n- Request ID tracking\n- Detailed field validation\n- Security event logging\n\n## Rate Limiting & Security\n\n- Brute force detection\n- SQL injection monitoring  \n- Request rate limiting\n- Comprehensive audit logging\n\n## Database Statistics\n\n- **431 Patients** with complete medical profiles\n- **269 Fields per Patient Document** \n- **6,898 Medical Records** across 14 collections\n- **Real-time IoT Device Integration**\n- **FHIR R5 Compliant Audit Logging**\n",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/simple-login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Simple Login",
        "description": "Simple test login endpoint",
        "operationId": "simple_login_auth_simple_login_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login",
        "description": "Login endpoint - Fixed implementation",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                },
                "example": {
                  "success": true,
                  "message": "Login successful",
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "token_type": "bearer",
                  "user": {
                    "username": "admin",
                    "role": "admin",
                    "full_name": "Administrator"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid credentials"
                }
              }
            }
          },
          "503": {
            "description": "Authentication service unavailable",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Authentication service unavailable: Connection timeout"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout",
        "description": "Logout endpoint - Proxy to Stardust-V1",
        "operationId": "logout_auth_logout_post",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Successfully logged out",
                  "data": {
                    "status": "logged_out"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Register",
        "description": "Register new user endpoint - Proxy to Stardust-V1",
        "operationId": "register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "User registered successfully",
                  "data": {
                    "username": "newuser",
                    "email": "newuser@example.com",
                    "status": "pending_approval"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Registration failed",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Username already exists"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/roles": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Roles",
        "description": "Get available roles endpoint",
        "operationId": "get_roles_auth_roles_get",
        "responses": {
          "200": {
            "description": "Available roles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Available roles retrieved successfully",
                  "data": [
                    {
                      "role": "viewer",
                      "permissions": [
                        "read:patients",
                        "read:devices",
                        "read:history"
                      ],
                      "description": "Read-only access to patient and device data"
                    },
                    {
                      "role": "operator",
                      "permissions": [
                        "read:patients",
                        "read:devices",
                        "read:history",
                        "write:devices",
                        "submit:data"
                      ],
                      "description": "Can read data and submit device readings"
                    },
                    {
                      "role": "admin",
                      "permissions": [
                        "read:all",
                        "write:all",
                        "delete:data",
                        "manage:devices",
                        "admin:panel"
                      ],
                      "description": "Full administrative access"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/users": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Users",
        "description": "Get users list endpoint - Admin only",
        "operationId": "get_users_auth_users_get",
        "responses": {
          "200": {
            "description": "Users list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Users list retrieved successfully",
                  "data": [
                    {
                      "username": "admin",
                      "email": "admin@my-firstcare.com",
                      "full_name": "Administrator",
                      "role": "admin",
                      "is_active": true,
                      "created_at": "2025-01-01T00:00:00Z"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Insufficient permissions to view users"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/users/{username}": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get User",
        "description": "Get specific user details endpoint",
        "operationId": "get_user_auth_users__username__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "User details retrieved successfully",
                  "data": {
                    "username": "admin",
                    "email": "admin@my-firstcare.com",
                    "full_name": "Administrator",
                    "role": "admin",
                    "is_active": true,
                    "created_at": "2025-01-01T00:00:00Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "User not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me/photo": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Profile Photo",
        "description": "Get user profile photo endpoint",
        "operationId": "get_profile_photo_auth_me_photo_get",
        "responses": {
          "200": {
            "description": "User profile photo retrieved successfully",
            "content": {
              "application/json": {
                "schema": {}
              },
              "image/*": {
                "example": "Binary image data"
              }
            }
          },
          "404": {
            "description": "Profile photo not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Profile photo not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Upload Profile Photo",
        "description": "Upload user profile photo endpoint",
        "operationId": "upload_profile_photo_auth_me_photo_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_profile_photo_auth_me_photo_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Profile photo uploaded successfully",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "success": true,
                  "message": "Profile photo uploaded successfully",
                  "data": {
                    "filename": "profile_photo.jpg",
                    "size": 1024
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid file format",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid file format. Only JPEG, PNG, and GIF are allowed."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "authentication"
        ],
        "summary": "Delete Profile Photo",
        "description": "Delete user profile photo",
        "operationId": "delete_profile_photo_auth_me_photo_delete",
        "responses": {
          "200": {
            "description": "Profile photo deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Profile photo deleted successfully",
                  "data": {
                    "status": "photo_deleted"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile photo not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Refresh Token",
        "description": "Refresh token endpoint - Fixed implementation",
        "operationId": "refresh_token_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                },
                "example": {
                  "success": true,
                  "message": "Token refreshed successfully",
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "token_type": "bearer",
                  "user": {}
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid refresh token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Me",
        "description": "Get comprehensive current user info from Stardust-V1 JWT",
        "operationId": "get_me_auth_me_get",
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Comprehensive user information retrieved successfully from Stardust-V1 JWT",
                  "data": {
                    "username": "admin",
                    "role": "admin",
                    "full_name": "Administrator",
                    "email": "admin@my-firstcare.com",
                    "phone": "+66-XXX-XXX-XXXX",
                    "permissions": [
                      "read",
                      "write",
                      "admin"
                    ],
                    "authentication_source": "Stardust-V1",
                    "token_type": "JWT",
                    "system_access": {
                      "can_access_admin": true,
                      "can_modify_data": true,
                      "can_view_data": true,
                      "is_superadmin": false
                    }
                  },
                  "request_id": "d4e5f6g7-h8i9-0123-defg-456789012345",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid or expired token"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "authentication"
        ],
        "summary": "Update Profile",
        "description": "Update user profile fields (full_name, email, phone)",
        "operationId": "update_profile_auth_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Profile updated successfully",
                  "data": {
                    "updated_fields": [
                      "full_name",
                      "email"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/me/password": {
      "put": {
        "tags": [
          "authentication"
        ],
        "summary": "Change Password",
        "description": "Change user password",
        "operationId": "change_password_auth_me_password_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Password changed successfully",
                  "data": {
                    "status": "password_updated"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Forgot Password",
        "description": "Request password reset (forgot password)",
        "operationId": "forgot_password_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Password reset email sent successfully",
                  "data": {
                    "email_sent": true
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Reset Password",
        "description": "Reset password using token",
        "operationId": "reset_password_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Password reset successfully",
                  "data": {
                    "status": "password_reset"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register-request": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Register Request",
        "description": "Submit registration request for panel access",
        "operationId": "register_request_auth_register_request_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Registration request submitted successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Registration request submitted successfully",
                  "data": {
                    "request_id": "req_123456",
                    "status": "pending"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Request already exists"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/registration-requests": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Registration Requests",
        "description": "Get all registration requests (Admin only)",
        "operationId": "get_registration_requests_auth_registration_requests_get",
        "responses": {
          "200": {
            "description": "Registration requests retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Registration requests retrieved successfully",
                  "data": {
                    "requests": []
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/registration-requests/{request_id}/approve": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Approve Registration Request",
        "description": "Approve or reject registration request (Admin only)",
        "operationId": "approve_registration_request_auth_registration_requests__request_id__approve_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveRequestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration request processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Registration request processed successfully",
                  "data": {
                    "request_id": "req_123456",
                    "status": "approved"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Request not found"
          },
          "403": {
            "description": "Access denied - Admin only"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/registration-requests/history": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Registration History",
        "description": "Get registration request history (Admin only)",
        "operationId": "get_registration_history_auth_registration_requests_history_get",
        "responses": {
          "200": {
            "description": "Registration request history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Registration request history retrieved successfully",
                  "data": {
                    "history": []
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/data": {
      "post": {
        "tags": [
          "ava4"
        ],
        "summary": "Receive Ava4 Data",
        "description": "Receive data from AVA4 device",
        "operationId": "receive_ava4_data_api_ava4_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ava4DataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ava4DataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/devices": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Ava4 Devices",
        "description": "Get AVA4 devices with advanced filtering and search",
        "operationId": "get_ava4_devices_api_ava4_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active Only"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "include_patient_info",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Patient Info"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ava4"
        ],
        "summary": "Create Ava4 Device",
        "description": "Create a new AVA4 device",
        "operationId": "create_ava4_device_api_ava4_devices_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ava4DeviceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/devices/table": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Ava4 Devices Table",
        "description": "Get AVA4 devices in table format with advanced features",
        "operationId": "get_ava4_devices_table_api_ava4_devices_table_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active Only"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "columns",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Columns"
            }
          },
          {
            "name": "export_format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Export Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/devices/{device_id}": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Ava4 Device",
        "description": "Get specific AVA4 device",
        "operationId": "get_ava4_device_api_ava4_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ava4"
        ],
        "summary": "Update Ava4 Device",
        "description": "Update an AVA4 device",
        "operationId": "update_ava4_device_api_ava4_devices__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ava4DeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ava4"
        ],
        "summary": "Delete Ava4 Device",
        "description": "Delete (soft delete) an AVA4 device",
        "operationId": "delete_ava4_device_api_ava4_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/patient-info": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Patient Info By Mac",
        "description": "Get patient basic information by AVA4 device MAC address for device mapping",
        "operationId": "get_patient_info_by_mac_api_ava4_patient_info_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mac_address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Ava4 Sub Devices",
        "description": "Get AVA4 sub-devices (medical devices) connected to a specific AVA4 box",
        "operationId": "get_ava4_sub_devices_api_ava4_sub_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mac_address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ava4"
        ],
        "summary": "Register Ava4 Sub Device",
        "description": "Register a new AVA4 sub-device (medical device) for a patient",
        "operationId": "register_ava4_sub_device_api_ava4_sub_devices_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mac_address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          },
          {
            "name": "device_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Name"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Model"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices/table": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Ava4 Sub Devices Table",
        "description": "Get AVA4 sub-devices in table format with advanced filtering",
        "operationId": "get_ava4_sub_devices_table_api_ava4_sub_devices_table_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "title": "Limit"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "device_name",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "title": "Sort Order"
            }
          },
          {
            "name": "columns",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Columns"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/test-medical-devices/{patient_id}": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Test Medical Devices",
        "description": "Test endpoint to check medical devices for a specific patient",
        "operationId": "test_medical_devices_api_ava4_test_medical_devices__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices/{patient_id}/{device_type}": {
      "put": {
        "tags": [
          "ava4"
        ],
        "summary": "Update Ava4 Sub Device",
        "description": "Update an AVA4 sub-device for a patient",
        "operationId": "update_ava4_sub_device_api_ava4_sub_devices__patient_id___device_type__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "device_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          },
          {
            "name": "mac_address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          },
          {
            "name": "device_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Device Name"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Model"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ava4"
        ],
        "summary": "Unregister Ava4 Sub Device",
        "description": "Unregister an AVA4 sub-device from a patient",
        "operationId": "unregister_ava4_sub_device_api_ava4_sub_devices__patient_id___device_type__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "device_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices/analytics": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Ava4 Sub Device Analytics",
        "description": "Get analytics for AVA4 sub-devices",
        "operationId": "get_ava4_sub_device_analytics_api_ava4_sub_devices_analytics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/sub-devices/discovery": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Discover Ava4 Sub Devices",
        "description": "Discover available AVA4 sub-devices for registration",
        "operationId": "discover_ava4_sub_devices_api_ava4_sub_devices_discovery_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "box_mac_address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Box Mac Address"
            }
          },
          {
            "name": "scan_duration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Scan Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices/raw-documents": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Raw Amy Devices Documents",
        "description": "Get raw documents to examine structure and relationships - supports both devices and patients",
        "operationId": "get_raw_amy_devices_documents_api_ava4_sub_devices_raw_documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "data_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Type of data: 'devices' or 'patients'",
              "default": "devices",
              "title": "Data Type"
            },
            "description": "Type of data: 'devices' or 'patients'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/sub-devices/patient-relationship/{patient_id}": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Analyze Patient Device Relationship",
        "description": "Analyze the complete relationship between a patient and their devices",
        "operationId": "analyze_patient_device_relationship_api_ava4_sub_devices_patient_relationship__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/debug-patient-query/{patient_id}": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Debug Patient Query",
        "description": "Debug endpoint to test patient_id queries",
        "operationId": "debug_patient_query_api_ava4_debug_patient_query__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/medical-history/collections": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Medical History Collections Overview",
        "description": "## Medical History Collections Overview\n    \n    Get comprehensive information about all medical history collections in the system.\n    \n    ### Features:\n    - **Collection Statistics**: Record counts, status, and metadata\n    - **Data Fields**: Available fields for each collection type\n    - **System Overview**: Total records and active collections\n    - **Real-time Data**: Live collection statistics\n    \n    ### Collections Included:\n    - Blood Pressure Histories\n    - Blood Sugar Histories  \n    - Body Data Histories\n    - Temperature Data Histories\n    - SPO2 Histories\n    - Sleep Data Histories\n    - Step Histories\n    - Medication Histories\n    - Allergy Histories\n    - And more...\n    \n    ### Response Data:\n    - `summary`: Overall system statistics\n    - `collections`: Detailed collection information\n    - `top_collections`: Most active collections by record count\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_medical_history_collections_api_ava4_medical_history_collections_get",
        "responses": {
          "200": {
            "description": "Medical history collections retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalHistoryCollectionsResponse"
                },
                "example": {
                  "success": true,
                  "message": "Medical history collections retrieved successfully",
                  "data": {
                    "summary": {
                      "total_collections": 13,
                      "total_records": 56219,
                      "active_collections": 13,
                      "empty_collections": 0
                    },
                    "collections": {
                      "blood_pressure_histories": {
                        "name": "Blood Pressure History",
                        "record_count": 21542,
                        "status": "active",
                        "data_fields": [
                          "systolic",
                          "diastolic",
                          "pulse"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/medical-history/patient/{patient_id}": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Patient Medical History",
        "description": "## Patient Medical History Retrieval\n    \n    Get comprehensive medical history for a specific patient across all data types.\n    \n    ### Features:\n    - **Complete Medical Records**: All medical data types for the patient\n    - **Flexible Filtering**: Filter by collection type, date range\n    - **Pagination Support**: Efficient handling of large datasets\n    - **Multi-Collection Data**: Blood pressure, temperature, SPO2, etc.\n    - **Structured Response**: Organized by medical data type\n    \n    ### Query Parameters:\n    - `collection_type`: Filter by specific medical data type (optional)\n    - `limit`: Number of records per collection (default: 100)\n    - `skip`: Number of records to skip (default: 0)\n    - `date_from`: Start date filter (ISO format, optional)\n    - `date_to`: End date filter (ISO format, optional)\n    \n    ### Medical Data Types:\n    - `blood_pressure_histories`: Blood pressure readings\n    - `temprature_data_histories`: Temperature measurements\n    - `spo2_histories`: Oxygen saturation levels\n    - `blood_sugar_histories`: Blood glucose readings\n    - `sleep_data_histories`: Sleep tracking data\n    - `step_histories`: Physical activity data\n    - And more...\n    \n    ### Response Structure:\n    - `summary`: Patient overview and record counts\n    - `medical_history`: Organized data by collection type\n    - `pagination`: Current pagination status\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_patient_medical_history_api_ava4_medical_history_patient__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "collection_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific medical data type",
              "title": "Collection Type"
            },
            "description": "Filter by specific medical data type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of records per collection",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of records per collection"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date filter (ISO format)",
              "title": "Date From"
            },
            "description": "Start date filter (ISO format)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date filter (ISO format)",
              "title": "Date To"
            },
            "description": "End date filter (ISO format)"
          }
        ],
        "responses": {
          "200": {
            "description": "Patient medical history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientMedicalHistoryResponse"
                },
                "example": {
                  "success": true,
                  "message": "Patient medical history retrieved successfully",
                  "data": {
                    "summary": {
                      "patient_id": "622035a5fd26d7b6d9b7730c",
                      "total_records": 2853,
                      "collections_with_data": 4,
                      "date_range": {
                        "from": "2022-01-01T00:00:00Z",
                        "to": "2024-12-31T23:59:59Z"
                      }
                    },
                    "medical_history": {
                      "temprature_data_histories": {
                        "count": 2574,
                        "records": [
                          {
                            "temprature_data": 36.5,
                            "temprature_import_date": "2024-01-15T10:30:00Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Patient not found"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/medical-history/trends/{patient_id}": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Patient Medical Trends Analysis",
        "description": "## Medical Trends Analysis\n    \n    Analyze medical trends and patterns for a specific patient over time.\n    \n    ### Features:\n    - **Statistical Analysis**: Min, max, average, latest values\n    - **Time-based Trends**: Configurable time periods\n    - **Multiple Metrics**: Support for various medical data types\n    - **Trend Visualization**: Data ready for charts and graphs\n    - **Historical Analysis**: Long-term health monitoring\n    \n    ### Supported Metric Types:\n    - `blood_pressure`: Systolic, diastolic, pulse readings\n    - `blood_sugar`: Fasting, post-meal glucose levels\n    - `temperature`: Body temperature measurements\n    - `spo2`: Oxygen saturation and pulse rate\n    - `body_data`: Weight, BMI, body composition\n    - `sleep`: Sleep duration and quality metrics\n    - `steps`: Physical activity tracking\n    - `creatinine`: Kidney function markers\n    - `lipid`: Cholesterol and lipid profiles\n    \n    ### Query Parameters:\n    - `metric_type`: Type of medical data to analyze (required)\n    - `days`: Number of days to analyze (default: 30, max: 3650)\n    \n    ### Response Analytics:\n    - `total_readings`: Number of data points analyzed\n    - `date_range`: Time period covered\n    - `statistics`: Statistical analysis per metric\n    - `trends`: Time-series data for visualization\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_patient_medical_trends_api_ava4_medical_history_trends__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "metric_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metric Type"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 3650,
              "minimum": 1,
              "description": "Number of days to analyze",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Medical trends analysis completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalTrendsResponse"
                },
                "example": {
                  "success": true,
                  "message": "Medical trends analysis completed successfully",
                  "data": {
                    "analytics": {
                      "total_readings": 34115,
                      "date_range": {
                        "start": "2022-10-10T11:51:45.234672",
                        "end": "2025-07-06T11:51:45.234672",
                        "days": 1000
                      },
                      "statistics": {
                        "temprature_data": {
                          "count": 34115,
                          "min": 21.6,
                          "max": 44.2,
                          "avg": 36.34,
                          "latest": 36.6,
                          "unit": "¬∞C"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid metric type or parameters"
          },
          "404": {
            "description": "Patient not found"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/medical-history/analytics": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get System-Wide Medical Analytics",
        "description": "## System-Wide Medical Analytics\n    \n    Get comprehensive analytics and insights across all medical history collections.\n    \n    ### Features:\n    - **System Overview**: Total records, collections, and patients\n    - **Collection Statistics**: Record counts and status per collection\n    - **Data Quality Metrics**: Active vs inactive collections\n    - **Performance Insights**: Top collections by activity\n    - **Real-time Data**: Live system statistics\n    \n    ### Analytics Included:\n    - Total medical records across all collections\n    - Number of patients with medical data\n    - Collection-wise record distribution\n    - Data quality and completeness metrics\n    - Top performing collections\n    \n    ### Response Structure:\n    - `summary`: High-level system statistics\n    - `collections`: Detailed collection analytics\n    - `top_collections`: Most active collections ranked\n    \n    ### Use Cases:\n    - System monitoring and health checks\n    - Data quality assessment\n    - Performance optimization\n    - Resource planning\n    - Compliance reporting\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_medical_history_analytics_api_ava4_medical_history_analytics_get",
        "responses": {
          "200": {
            "description": "System-wide medical analytics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalAnalyticsResponse"
                },
                "example": {
                  "success": true,
                  "message": "Medical history analytics retrieved successfully",
                  "data": {
                    "summary": {
                      "total_collections": 13,
                      "active_collections": 13,
                      "total_medical_records": 56219,
                      "patients_with_medical_data": 246
                    },
                    "collections": {
                      "blood_pressure_histories": {
                        "record_count": 21542,
                        "status": "active",
                        "last_updated": "2024-01-15T10:30:00Z"
                      }
                    },
                    "top_collections": [
                      [
                        "temprature_data_histories",
                        34115
                      ],
                      [
                        "blood_pressure_histories",
                        21542
                      ]
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/medical-history/analytics/{patient_id}": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Patient Medical Analytics",
        "description": "Get comprehensive medical analytics for a specific patient",
        "operationId": "get_patient_medical_analytics_api_ava4_medical_history_analytics__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/patients/raw-documents": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Raw Patient Documents (AVA4)",
        "description": "## AVA4 Raw Patient Document Analysis\n    \n    Access complete MongoDB patient documents for AVA4 device integration analysis.\n    \n    ### Features:\n    - **Complete Patient Structure**: All 269 fields per patient document\n    - **AVA4 Device Integration**: Focus on AVA4-related patient fields\n    - **Field Analysis**: Automatic data type detection and statistics\n    - **Sample Values**: Preview of actual field content\n    - **Standard Field Detection**: Identification of core patient fields vs extended data\n    - **Pagination Support**: Handle large document sets efficiently\n    \n    ### Key AVA4 Integration Fields:\n    \n    #### **AVA4 Device Identifiers**:\n    - `ava_mac_address`: Primary AVA4 device MAC address\n    - `ava_box_id`: AVA4 box/gateway identifier\n    - `ava_sim_card`: SIM card information for connectivity\n    - `ava_box_version`: Device firmware/software version\n    \n    #### **Medical Device MAC Addresses**:\n    - `blood_pressure_mac_address`: BP monitor MAC address\n    - `blood_glucose_mac_address`: Glucose meter MAC address\n    - `body_temperature_mac_address`: Temperature sensor MAC address\n    - `fingertip_pulse_oximeter_mac_address`: SPO2 sensor MAC address\n    - `cholesterol_mac_address`: Cholesterol meter MAC address\n    \n    #### **Medical Alert Thresholds for AVA4**:\n    - **Blood Pressure**: `bp_sbp_above`, `bp_sbp_below`, `bp_dbp_above`, `bp_dbp_below`\n    - **Blood Sugar**: `glucose_normal_before`, `glucose_normal_after`\n    - **Temperature**: `temperature_normal_above`, `temperature_normal_below`\n    - **SPO2**: `spo2_normal_above`, `spo2_normal_below`\n    \n    ### Query Parameters:\n    - `limit`: Number of documents to return (1-50, default: 5)\n    - `skip`: Number of documents to skip for pagination\n    - `patient_id`: Filter by specific patient ObjectId\n    - `include_deleted`: Include soft-deleted patients (default: false)\n    \n    ### Response Features:\n    - **Raw Documents**: Complete MongoDB structure preserved\n    - **Field Analysis**: Data type detection and usage statistics per field\n    - **Standard Field Detection**: Identifies core vs extended patient fields\n    - **Sample Values**: Up to 3 sample values per field for preview\n    - **Pagination Info**: Total count and navigation details\n    \n    ### AVA4 Use Cases:\n    - **Device Configuration**: Map patient thresholds to AVA4 alerts\n    - **Patient Device Linking**: Associate patients with AVA4 devices\n    - **Medical Integration**: Understand patient medical data structure\n    - **Alert Setup**: Configure AVA4 medical alerts based on patient data\n    - **Data Migration**: Map existing patient data to AVA4 format\n    \n    ### Standard Patient Fields (29 core fields):\n    `_id`, `first_name`, `last_name`, `nickname`, `gender`, `birth_date`, `id_card`, \n    `phone`, `email`, `address`, `province_code`, `district_code`, `sub_district_code`, \n    `postal_code`, `emergency_contact_name`, `emergency_contact_phone`, \n    `emergency_contact_relationship`, `blood_type`, `height`, `weight`, `bmi`, \n    `watch_mac_address`, `ava_mac_address`, `new_hospital_ids`, `created_at`, \n    `updated_at`, `is_active`, `is_deleted`\n    \n    ### Authentication:\n    Requires valid JWT Bearer token.",
        "operationId": "get_raw_patient_documents_api_ava4_patients_raw_documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Number of raw documents to return",
              "default": 5,
              "title": "Limit"
            },
            "description": "Number of raw documents to return"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of documents to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of documents to skip"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific patient ID",
              "title": "Patient Id"
            },
            "description": "Filter by specific patient ID"
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include soft-deleted patients",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include soft-deleted patients"
          }
        ],
        "responses": {
          "200": {
            "description": "Raw patient documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "success": true,
                  "message": "Raw patient documents retrieved successfully",
                  "data": {
                    "raw_documents": [
                      {
                        "_id": "620c83a78ae03f05312cb9b5",
                        "first_name": "TEST 001",
                        "last_name": "Patient 1",
                        "phone": "789456789",
                        "ava_mac_address": "AA:BB:CC:DD:EE:FF",
                        "ava_box_id": "AVA4-001",
                        "blood_pressure_mac_address": "11:22:33:44:55:66",
                        "blood_glucose_mac_address": "",
                        "bp_sbp_above": 140,
                        "bp_sbp_below": 90,
                        "bp_dbp_above": 90,
                        "bp_dbp_below": 60,
                        "glucose_normal_before": 100,
                        "glucose_normal_after": 140,
                        "created_at": "2022-02-16T04:55:03.469000",
                        "hospital_data": [],
                        "amy_id": "AMY001"
                      }
                    ],
                    "total_count": 431,
                    "returned_count": 1,
                    "field_analysis": {
                      "_id": {
                        "count": 1,
                        "sample_values": [
                          "620c83a78ae03f05312cb9b5"
                        ],
                        "is_standard_field": true,
                        "data_type": "str"
                      },
                      "ava_mac_address": {
                        "count": 1,
                        "sample_values": [
                          "AA:BB:CC:DD:EE:FF"
                        ],
                        "is_standard_field": true,
                        "data_type": "str"
                      },
                      "bp_sbp_above": {
                        "count": 1,
                        "sample_values": [
                          140
                        ],
                        "is_standard_field": false,
                        "data_type": "int"
                      }
                    },
                    "standard_patient_fields": [
                      "_id",
                      "first_name",
                      "last_name",
                      "ava_mac_address"
                    ],
                    "pagination": {
                      "limit": 5,
                      "skip": 0,
                      "has_more": true
                    },
                    "filters": {
                      "include_deleted": false
                    },
                    "metadata": {
                      "collection": "patients",
                      "query_filter": "{'is_deleted': {'$ne': True}}",
                      "timestamp": "2024-01-15T10:30:00.000000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid patient ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ava4/test-patient-raw": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Test Patient Raw Endpoint",
        "description": "Simple test endpoint for patient raw data",
        "operationId": "test_patient_raw_endpoint_api_ava4_test_patient_raw_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ava4/patients-raw": {
      "get": {
        "tags": [
          "ava4"
        ],
        "summary": "Get Raw Patients Simple",
        "description": "Get raw patient documents - simplified version",
        "operationId": "get_raw_patients_simple_api_ava4_patients_raw_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 5,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/kati/data": {
      "post": {
        "tags": [
          "kati"
        ],
        "summary": "Receive Kati Data",
        "description": "Receive data from Kati Watch",
        "operationId": "receive_kati_data_api_kati_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KatiDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KatiDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/kati/test": {
      "get": {
        "tags": [
          "kati"
        ],
        "summary": "Test Endpoint",
        "description": "Simple test endpoint",
        "operationId": "test_endpoint_api_kati_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/kati/test-auth": {
      "get": {
        "tags": [
          "kati"
        ],
        "summary": "Test Auth Endpoint",
        "description": "Test endpoint that requires authentication",
        "operationId": "test_auth_endpoint_api_kati_test_auth_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/kati/devices": {
      "get": {
        "tags": [
          "kati"
        ],
        "summary": "Get Kati Devices",
        "description": "Get Kati Watch devices",
        "operationId": "get_kati_devices_api_kati_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/kati/devices/{device_id}": {
      "get": {
        "tags": [
          "kati"
        ],
        "summary": "Get Kati Device",
        "description": "Get specific Kati Watch device",
        "operationId": "get_kati_device_api_kati_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "kati"
        ],
        "summary": "Delete Kati Device",
        "description": "Soft delete Kati Watch device",
        "operationId": "delete_kati_device_api_kati_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/kati/patient-info": {
      "get": {
        "tags": [
          "kati"
        ],
        "summary": "Get Patient Info By Imei",
        "description": "Get patient basic information by Kati watch IMEI for device mapping",
        "operationId": "get_patient_info_by_imei_api_kati_patient_info_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "imei",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "description": "Kati watch IMEI",
              "title": "Imei"
            },
            "description": "Kati watch IMEI"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Patient Info By Imei Api Kati Patient Info Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/kati/patients/with-watch": {
      "get": {
        "tags": [
          "kati"
        ],
        "summary": "Get Patients with Kati Watch Assignment",
        "description": "## Patients with Kati Watch Assignment\n            \n            Get list of patients who have been assigned a Kati Watch device.\n            \n            ### Response Fields:\n            - `patient_id`: Unique patient identifier\n            - `first_name`: Patient first name\n            - `last_name`: Patient last name (surname)\n            - `hospital_name`: Hospital name where patient is registered\n            - `watch_imei`: Assigned Kati watch IMEI\n            - `watch_status`: Current watch status (online/offline)\n            - `is_active`: Patient active status\n            \n            ### Filtering Options:\n            - `search`: Search by patient name\n            - `hospital_id`: Filter by specific hospital\n            - `watch_status`: Filter by watch status (online/offline)\n            - Pagination: `limit` and `skip`",
        "operationId": "get_patients_with_watch_api_kati_patients_with_watch_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of patients to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of patients to return"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of patients to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of patients to skip"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by patient name",
              "title": "Search"
            },
            "description": "Search by patient name"
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "watch_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by watch status (online/offline)",
              "title": "Watch Status"
            },
            "description": "Filter by watch status (online/offline)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Patients With Watch Api Kati Patients With Watch Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/kati/patients/without-watch": {
      "get": {
        "tags": [
          "kati"
        ],
        "summary": "Get Patients without Kati Watch Assignment",
        "description": "## Patients without Kati Watch Assignment\n            \n            Get list of patients who have NOT been assigned a Kati Watch device.\n            \n            ### Response Fields:\n            - `patient_id`: Unique patient identifier\n            - `first_name`: Patient first name\n            - `last_name`: Patient last name (surname)\n            - `hospital_name`: Hospital name where patient is registered\n            - `watch_imei`: null (no watch assigned)\n            - `watch_status`: null (no watch assigned)\n            - `is_active`: Patient active status\n            \n            ### Filtering Options:\n            - `search`: Search by patient name\n            - `hospital_id`: Filter by specific hospital\n            - Pagination: `limit` and `skip`",
        "operationId": "get_patients_without_watch_api_kati_patients_without_watch_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of patients to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of patients to return"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of patients to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of patients to skip"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by patient name",
              "title": "Search"
            },
            "description": "Search by patient name"
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Patients Without Watch Api Kati Patients Without Watch Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/data": {
      "post": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Receive Qube Vital Data",
        "description": "Receive data from Qube-Vital device",
        "operationId": "receive_qube_vital_data_api_qube_vital_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QubeVitalDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QubeVitalDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/qube-vital/devices": {
      "get": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Get Qube Vital Devices",
        "description": "Get Qube-Vital devices with advanced filtering and search",
        "operationId": "get_qube_vital_devices_api_qube_vital_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hospital Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "include_hospital_info",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Hospital Info"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Create Qube Vital Device",
        "description": "Create a new Qube-Vital device",
        "operationId": "create_qube_vital_device_api_qube_vital_devices_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QubeVitalDeviceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/devices/table": {
      "get": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Get Qube Vital Devices Table",
        "description": "Get Qube-Vital devices in table format with advanced features",
        "operationId": "get_qube_vital_devices_table_api_qube_vital_devices_table_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "title": "Limit"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hospital Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "columns",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Columns"
            }
          },
          {
            "name": "export_format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Export Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/devices/{device_id}": {
      "get": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Get Qube Vital Device",
        "description": "Get specific Qube-Vital device",
        "operationId": "get_qube_vital_device_api_qube_vital_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Update Qube Vital Device",
        "description": "Update a Qube-Vital device",
        "operationId": "update_qube_vital_device_api_qube_vital_devices__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QubeVitalDeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Delete Qube Vital Device",
        "description": "Delete (soft delete) a Qube-Vital device",
        "operationId": "delete_qube_vital_device_api_qube_vital_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/devices/{device_id}/hospital": {
      "put": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Assign Device To Hospital",
        "description": "Assign a Qube-Vital device to a hospital",
        "operationId": "assign_device_to_hospital_api_qube_vital_devices__device_id__hospital_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hospital Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/analytics/hospitals": {
      "get": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Get Hospital Analytics",
        "description": "Get hospital analytics for Qube-Vital devices",
        "operationId": "get_hospital_analytics_api_qube_vital_analytics_hospitals_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/qube-vital/hospital-info": {
      "get": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Get Hospital Info By Device",
        "description": "Get hospital information by Qube-Vital device IMEI for hospital mapping",
        "operationId": "get_hospital_info_by_device_api_qube_vital_hospital_info_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "imei",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Imei"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/hospitals/{hospital_id}/devices": {
      "get": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Get Hospital Devices",
        "description": "Get all Qube-Vital devices assigned to a specific hospital",
        "operationId": "get_hospital_devices_api_qube_vital_hospitals__hospital_id__devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hospital Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/qube-vital/hospitals": {
      "get": {
        "tags": [
          "qube-vital"
        ],
        "summary": "Get Hospitals With Devices",
        "description": "Get hospitals with their Qube-Vital device counts",
        "operationId": "get_hospitals_with_devices_api_qube_vital_hospitals_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "include_device_count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Device Count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/patients": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Patients",
        "description": "Get patients with filtering and pagination",
        "operationId": "get_patients_admin_patients_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hospital Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patients retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Patients retrieved successfully",
                  "data": {
                    "patients": [
                      {
                        "_id": "507f1f77bcf86cd799439011",
                        "first_name": "John",
                        "last_name": "Doe",
                        "gender": "male",
                        "birth_date": "1990-01-15",
                        "phone": "+66-XXX-XXX-XXXX",
                        "hospital_id": "507f1f77bcf86cd799439012"
                      }
                    ],
                    "total": 431,
                    "limit": 100,
                    "skip": 0
                  },
                  "request_id": "e5f6g7h8-i9j0-1234-efgh-567890123456",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Authentication required"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error_count": 1,
                  "errors": [
                    {
                      "error_code": "INTERNAL_SERVER_ERROR",
                      "error_type": "system_error",
                      "message": "Failed to retrieve patients: Database connection error",
                      "suggestion": "Please try again later or contact support if the issue persists"
                    }
                  ],
                  "request_id": "f6g7h8i9-j0k1-2345-fghi-678901234567",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Patient",
        "description": "Create new patient",
        "operationId": "create_patient_admin_patients_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Create Patient Admin Patients Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/patients/search": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Search Patients Post",
        "description": "Search patients using POST request (better for Thai characters)",
        "operationId": "search_patients_post_admin_patients_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Search Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/patients/{patient_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Patient",
        "description": "Get specific patient",
        "operationId": "get_patient_admin_patients__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Patient Admin Patients  Patient Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Patient",
        "description": "Update patient",
        "operationId": "update_patient_admin_patients__patient_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Patient Admin Patients  Patient Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Patient",
        "description": "Soft delete patient",
        "operationId": "delete_patient_admin_patients__patient_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Patient Admin Patients  Patient Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/test-raw-endpoint": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Test Raw Endpoint",
        "description": "Simple test endpoint",
        "operationId": "test_raw_endpoint_admin_test_raw_endpoint_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/patients-raw-documents": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Raw Patient Documents",
        "description": "## Raw Patient Document Analysis\n    \n    Access complete MongoDB patient documents without serialization for analysis and debugging.\n    \n    ### Features:\n    - **Complete Raw Structure**: All 269 fields per patient document\n    - **Field Analysis**: Automatic data type detection and statistics\n    - **Sample Values**: Preview of actual field content\n    - **ObjectId Mapping**: MongoDB relationship identification\n    - **Pagination Support**: Handle large document sets efficiently\n    - **Filtering Options**: Patient ID and deletion status filters\n    \n    ### Document Structure (269 Fields):\n    \n    #### **Core Demographics** (15 fields):\n    - `first_name`, `last_name`, `gender`, `birth_date`\n    - `id_card`, `phone`, `email`, `nickname`\n    - `address_1`, `address_2`, `province_code`, `district_code`\n    \n    #### **Medical Device MAC Addresses** (12 fields):\n    - `ava_mac_address`, `watch_mac_address`\n    - `blood_pressure_mac_address`, `blood_glucose_mac_address`\n    - `body_temperature_mac_address`, `fingertip_pulse_oximeter_mac_address`\n    - `cholesterol_mac_address`\n    \n    #### **Medical Alert Thresholds** (24 fields):\n    - Blood Pressure: `bp_sbp_above`, `bp_sbp_below`, `bp_dbp_above`, `bp_dbp_below`\n    - Blood Sugar: `glucose_normal_before`, `glucose_normal_after`\n    - Temperature: `temperature_normal_above`, `temperature_normal_below`\n    - SPO2: `spo2_normal_above`, `spo2_normal_below`\n    - Cholesterol: `cholesterol_above`, `cholesterol_below`\n    \n    #### **Medical History Integration** (50+ fields):\n    - Import dates: `blood_preassure_import_date`, `cretinines_import_date`\n    - Sources: `blood_preassure_source`, `blood_sugar_source`\n    - Symptoms: `blood_sugar_symptoms`, `blood_sugar_other_symptoms`\n    - Lab results: `bmi`, `cholesterol`, `bun`, `creatinine`\n    \n    #### **Hospital & Location Data** (10 fields):\n    - `hospital_data`, `new_hospital_ids`\n    - `admit_at`, `admit_status`, `date_of_visit`\n    \n    #### **Audit & Tracking** (8 fields):\n    - `created_at`, `updated_at`, `deleted_at`\n    - `is_active`, `is_deleted`, `deleted_by`\n    \n    ### Query Parameters:\n    - `limit`: Number of documents to return (1-50, default: 5)\n    - `skip`: Number of documents to skip for pagination\n    - `patient_id`: Filter by specific patient ObjectId\n    - `include_deleted`: Include soft-deleted patients (default: false)\n    \n    ### Response Features:\n    - **Raw Documents**: Complete MongoDB structure preserved\n    - **Field Analysis**: Data type detection and usage statistics\n    - **Sample Values**: Up to 3 sample values per field\n    - **ObjectId Detection**: Automatic relationship mapping\n    - **Pagination Info**: Total count and navigation details\n    \n    ### Use Cases:\n    - **Database Analysis**: Understand complete patient data structure\n    - **Integration Planning**: Map fields for external system integration\n    - **Data Migration**: Analyze field usage and data types\n    - **Debugging**: Inspect raw MongoDB documents\n    - **API Development**: Understand available patient fields\n    \n    ### Authentication:\n    Requires valid JWT Bearer token with admin privileges.",
        "operationId": "get_raw_patient_documents_admin_patients_raw_documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Number of raw documents to return",
              "default": 5,
              "title": "Limit"
            },
            "description": "Number of raw documents to return"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of documents to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of documents to skip"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific patient ID",
              "title": "Patient Id"
            },
            "description": "Filter by specific patient ID"
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include soft-deleted patients",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include soft-deleted patients"
          }
        ],
        "responses": {
          "200": {
            "description": "Raw patient documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "success": true,
                  "message": "Raw patient documents retrieved successfully",
                  "data": {
                    "raw_documents": [
                      {
                        "_id": {
                          "$oid": "620c83a78ae03f05312cb9b5"
                        },
                        "first_name": "TEST 001",
                        "last_name": "Patient 1",
                        "phone": "789456789",
                        "ava_mac_address": "",
                        "blood_pressure_mac_address": "",
                        "bp_sbp_above": 0,
                        "bp_sbp_below": 0,
                        "created_at": {
                          "$date": "2022-02-16T04:55:03.469000"
                        },
                        "hospital_data": [],
                        "amy_id": ""
                      }
                    ],
                    "total_count": 431,
                    "returned_count": 1,
                    "field_analysis": {
                      "_id": {
                        "count": 1,
                        "data_types": [
                          "ObjectId"
                        ],
                        "sample_values": [
                          "620c83a78ae03f05312cb9b5"
                        ],
                        "is_object_id": true
                      },
                      "first_name": {
                        "count": 1,
                        "data_types": [
                          "str"
                        ],
                        "sample_values": [
                          "TEST 001"
                        ],
                        "is_object_id": false
                      },
                      "bp_sbp_above": {
                        "count": 1,
                        "data_types": [
                          "int"
                        ],
                        "sample_values": [
                          0
                        ],
                        "is_object_id": false
                      }
                    },
                    "pagination": {
                      "limit": 5,
                      "skip": 0,
                      "has_more": true
                    },
                    "filters": {
                      "include_deleted": false
                    },
                    "metadata": {
                      "collection": "patients",
                      "query_filter": "{'is_deleted': {'$ne': True}}",
                      "timestamp": "2024-01-15T10:30:00.000000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid patient ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/devices": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Devices",
        "description": "Get devices by type",
        "operationId": "get_devices_admin_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Devices Admin Devices Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Legacy Create Device",
        "description": "Create new device",
        "operationId": "legacy_create_device_admin_devices_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routes__admin__DeviceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/devices/{device_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Legacy Get Device",
        "description": "Get specific device by ID",
        "operationId": "legacy_get_device_admin_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Legacy Update Device",
        "description": "Update device",
        "operationId": "legacy_update_device_admin_devices__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routes__admin__DeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Legacy Delete Device",
        "description": "Soft delete device",
        "operationId": "legacy_delete_device_admin_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history/{history_type}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Medical History",
        "description": "Get medical history by type",
        "operationId": "get_medical_history_admin_medical_history__history_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Medical History Admin Medical History  History Type  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history/{history_type}/{record_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Medical History Record by ID",
        "description": "## Get Medical History Record by ID\n\nRetrieve a specific medical history record by its ID.\n\n### Supported History Types:\n- `blood_pressure`, `blood_sugar`, `body_data`, `creatinine`, `lipid`\n- `sleep_data`, `spo2`, `step`, `temperature`, `medication`\n- `allergy`, `underlying_disease`, `admit_data`\n\n### Features:\n- **Record Validation**: Validates ObjectId format\n- **Error Handling**: Comprehensive error responses\n- **Data Serialization**: Proper MongoDB ObjectId handling\n- **Audit Trail**: Request tracking with request_id\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "get_medical_history_record_admin_medical_history__history_type___record_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Medical history record retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Medical history record retrieved successfully",
                  "data": {
                    "record": {
                      "_id": "507f1f77bcf86cd799439011",
                      "patient_id": "507f1f77bcf86cd799439012",
                      "history_type": "blood_pressure",
                      "values": {
                        "systolic": 120,
                        "diastolic": 80,
                        "pulse": 72
                      },
                      "created_at": "2024-01-15T10:30:00.000Z"
                    },
                    "history_type": "blood_pressure"
                  },
                  "request_id": "medical-history-001",
                  "timestamp": "2025-07-10T12:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid record ID format or history type"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Medical history record not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/master-data/{data_type}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Master Data by Type",
        "description": "## Master Data Management\n\nGet master data by type with comprehensive examples and multilingual support.\n\n### Query Parameters:\n- `limit`: Number of records (1-1000, default: 100)\n- `skip`: Pagination offset (default: 0)\n- `search`: Search across data fields\n- `is_active`: **Filter by active status** (true/false, optional) - **Works for ALL data types**\n- `province_code`: Filter by province code (for geographic data)\n- `district_code`: Filter by district code (for geographic data)\n- `sub_district_code`: Filter by sub-district code (for geographic data)\n\n### üîπ **Active Status Filtering (is_active)**\n**Available for ALL master data types:**\n- `GET /admin/master-data/provinces?is_active=true` - Active provinces only\n- `GET /admin/master-data/districts?is_active=false` - Inactive districts only\n- `GET /admin/master-data/hospitals?is_active=true` - Active hospitals only\n- `GET /admin/master-data/blood_groups?is_active=true` - Active blood groups only\n- And so on for all data types...\n\n### Supported Data Types:\n\n#### ü©∏ **Blood Groups** (`blood_groups`)\n- **12 Blood Types**: Complete blood group system with Rh factors\n- **Multilingual**: English and Thai names\n- **Examples**: AB:Rh-, O:Rh+, A:Rh-, B:Rh+, etc.\n- **Usage**: Patient blood type classification\n- **Active Filter**: `?is_active=true/false`\n\n#### üåç **Nations** (`nations`) \n- **229 Countries**: Complete country list\n- **Multilingual**: English and Thai names\n- **Examples**: Thailand, Argentina, United States, etc.\n- **Usage**: Patient nationality classification\n- **Active Filter**: `?is_active=true/false`\n\n#### üé® **Human Skin Colors** (`human_skin_colors`)\n- **6 Skin Types**: Complete skin color classification\n- **Multilingual**: English and Thai names  \n- **Examples**: BLACK, Dark Brown, Light Brown, etc.\n- **Usage**: Patient skin color classification\n- **Active Filter**: `?is_active=true/false`\n\n#### üè• **Hospital Wards** (`ward_lists`)\n- **9 Ward Types**: Complete hospital ward classification\n- **Multilingual**: English and Thai names\n- **Examples**: ER, OPD, IPD, Home Ward, SLEEP LAB, KATI, R&D, etc.\n- **Usage**: Patient ward classification and hospital department management\n- **Active Filter**: `?is_active=true/false`\n\n#### üë• **Staff Types** (`staff_types`)\n- **6 Staff Types**: Complete hospital personnel classification\n- **Multilingual**: English and Thai names\n- **Examples**: Doctor, Nurse, Hospital Staff, Medical Staff, Village Health Volunteer, Ambulance Operation Staff\n- **Usage**: Hospital personnel classification and access control\n- **Active Filter**: `?is_active=true/false`\n\n#### üè• **Underlying Diseases** (`underlying_diseases`)\n- **8 Disease Types**: Complete underlying disease classification\n- **Multilingual**: English and Thai names\n- **Examples**: Hypertension, Diabetes Mellitus, Dyslipidemia, Cardiovascular Disease, Stroke, Chronic Kidney Disease\n- **Usage**: Patient medical history and disease tracking\n- **Active Filter**: `?is_active=true/false`\n\n#### üè• **Hospitals** (`hospitals`)\n- **12,350+ Hospitals**: Complete hospital database\n- **Enhanced Address**: Detailed location information\n- **Contact Info**: Phone, email, website\n- **Services**: Bed capacity, emergency services\n- **Active Filter**: `?is_active=true/false`\n\n#### üó∫Ô∏è **Geographic Data**\n- **Provinces** (`provinces`): 79 provinces - **Active Filter**: `?is_active=true/false`\n- **Districts** (`districts`): Administrative districts - **Active Filter**: `?is_active=true/false`\n- **Sub-districts** (`sub_districts`): Administrative sub-districts - **Active Filter**: `?is_active=true/false`\n\n### Response Features:\n- **Multilingual Support**: All data includes English and Thai names\n- **Pagination**: Efficient data loading with limit/skip\n- **Search**: Full-text search across all fields\n- **Filtering**: Geographic and status-based filtering\n- **CRUD Operations**: Complete Create, Read, Update, Delete support\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "get_master_data_admin_master_data__data_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 5000,
              "minimum": 1,
              "description": "Number of records per page (max 5000)",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of records per page (max 5000)"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip for pagination",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip for pagination"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "province_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Province Code"
            }
          },
          {
            "name": "district_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "District Code"
            }
          },
          {
            "name": "sub_district_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sub District Code"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          }
        ],
        "responses": {
          "200": {
            "description": "Master data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "examples": {
                  "hospitals_response": {
                    "summary": "Hospital data with enhanced address information",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "507f1f77bcf86cd799439011",
                            "name": [
                              {
                                "code": "en",
                                "name": "Bangkok General Hospital"
                              },
                              {
                                "code": "th",
                                "name": "‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û"
                              }
                            ],
                            "en_name": "Bangkok General Hospital",
                            "province_code": 10,
                            "district_code": 1003,
                            "sub_district_code": 100301,
                            "organizecode": 1001,
                            "hospital_area_code": "10330",
                            "is_active": true,
                            "is_deleted": false,
                            "address": "123 Rama IV Road, Pathum Wan, Bangkok 10330",
                            "address_details": {
                              "street_address": "123 Rama IV Road",
                              "building_name": "Medical Center Tower",
                              "floor": "Ground Floor - 15th Floor",
                              "room": "Reception: Room 101",
                              "postal_code": "10330",
                              "postal_box": "P.O. Box 1234"
                            },
                            "location": {
                              "latitude": 13.7563,
                              "longitude": 100.5018,
                              "elevation": 2.5,
                              "precision": "GPS"
                            },
                            "contact": {
                              "phone": "+66-2-123-4567",
                              "phone_2": "+66-2-123-4568",
                              "fax": "+66-2-123-4569",
                              "mobile": "+66-81-123-4567",
                              "emergency_phone": "+66-2-123-1911",
                              "email": "info@bgh.co.th",
                              "email_admin": "admin@bgh.co.th",
                              "website": "https://www.bgh.co.th"
                            },
                            "services": {
                              "bed_capacity": 500,
                              "emergency_services": true,
                              "trauma_center": true,
                              "icu_beds": 50,
                              "operating_rooms": 15,
                              "service_plan_type": "A",
                              "accreditation": "JCI"
                            },
                            "phone": "+66-2-123-4567",
                            "email": "info@bgh.co.th",
                            "website": "https://www.bgh.co.th",
                            "bed_capacity": 500,
                            "service_plan_type": "A",
                            "image_url": "https://cdn.bgh.co.th/logo.png",
                            "auto_login_liff_id": "1234567890-abcdefgh",
                            "disconnect_liff_id": "1234567890-ijklmnop",
                            "login_liff_id": "1234567890-qrstuvwx",
                            "mac_hv01_box": "AA:BB:CC:DD:EE:FF",
                            "notifyToken": "LINE_NOTIFY_TOKEN_123",
                            "is_acknowledge": true,
                            "is_admit_discard": true,
                            "is_body_data": true,
                            "is_lab_data": true,
                            "is_status_change": true,
                            "created_at": "2024-01-15T08:00:00.000Z",
                            "updated_at": "2024-01-15T10:30:00.000Z",
                            "__v": 2
                          }
                        ],
                        "total": 12350,
                        "data_type": "hospitals",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-01-15T10:30:00.000Z"
                    }
                  },
                  "provinces_response": {
                    "summary": "Province data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "507f1f77bcf86cd799439011",
                            "code": 10,
                            "name": [
                              {
                                "code": "en",
                                "name": "Bangkok"
                              },
                              {
                                "code": "th",
                                "name": "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£"
                              }
                            ],
                            "en_name": "Bangkok",
                            "is_active": true,
                            "is_deleted": false
                          }
                        ],
                        "total": 79,
                        "data_type": "provinces"
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-01-15T10:30:00.000Z"
                    }
                  },
                  "blood_groups_response": {
                    "summary": "Blood groups master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "61f7e7ca3036bd2d8f4bb958",
                            "name": [
                              {
                                "code": "en",
                                "name": "AB : Rh-"
                              },
                              {
                                "code": "th",
                                "name": "‡πÄ‡∏≠‡∏ö‡∏µ : ‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏≠‡∏ä ‡∏•‡∏ö"
                              }
                            ],
                            "en_name": "AB : Rh-",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-01-31T13:44:42.283Z",
                            "updated_at": "2022-01-31T13:44:42.283Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "61f7e7ca3036bd2d8f4bb959",
                            "name": [
                              {
                                "code": "en",
                                "name": "O : Rh+"
                              },
                              {
                                "code": "th",
                                "name": "‡πÇ‡∏≠ : ‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏≠‡∏ä ‡∏ö‡∏ß‡∏Å"
                              }
                            ],
                            "en_name": "O : Rh+",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-01-31T13:44:42.283Z",
                            "updated_at": "2022-01-31T13:44:42.283Z",
                            "unique_id": 2,
                            "__v": 0
                          }
                        ],
                        "total": 12,
                        "data_type": "blood_groups",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-07-07T18:51:48.000Z"
                    }
                  },
                  "human_skin_colors_response": {
                    "summary": "Human skin colors master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "61f7e6f73036bd2d8f4bb952",
                            "name": [
                              {
                                "code": "en",
                                "name": "BLACK"
                              },
                              {
                                "code": "th",
                                "name": "‡∏î‡∏≥"
                              }
                            ],
                            "en_name": "BLACK",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-01-31T13:41:11.223Z",
                            "updated_at": "2022-01-31T13:41:11.223Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "61f7e6f73036bd2d8f4bb953",
                            "name": [
                              {
                                "code": "en",
                                "name": "Dark Brown"
                              },
                              {
                                "code": "th",
                                "name": "‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÄ‡∏Ç‡πâ‡∏°"
                              }
                            ],
                            "en_name": "Dark Brown",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-01-31T13:41:11.223Z",
                            "updated_at": "2022-01-31T13:41:11.223Z",
                            "unique_id": 2,
                            "__v": 0
                          }
                        ],
                        "total": 6,
                        "data_type": "human_skin_colors",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-07-07T18:51:48.000Z"
                    }
                  },
                  "nations_response": {
                    "summary": "Nations/countries master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "61f8b5f33036bd2d8f4bb970",
                            "name": [
                              {
                                "code": "en",
                                "name": "Argentina"
                              },
                              {
                                "code": "th",
                                "name": "‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏à‡∏ô‡∏ï‡∏¥‡∏ô‡∏≤"
                              }
                            ],
                            "en_name": "Argentina",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-02-01T04:24:19.685Z",
                            "updated_at": "2024-05-07T10:22:17.982Z",
                            "unique_id": 2,
                            "__v": 1
                          },
                          {
                            "_id": "61f8b5f33036bd2d8f4bb971",
                            "name": [
                              {
                                "code": "en",
                                "name": "Thailand"
                              },
                              {
                                "code": "th",
                                "name": "‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢"
                              }
                            ],
                            "en_name": "Thailand",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2022-02-01T04:24:19.685Z",
                            "updated_at": "2024-05-07T10:22:17.982Z",
                            "unique_id": 3,
                            "__v": 1
                          }
                        ],
                        "total": 229,
                        "data_type": "nations",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "g7h8i9j0-k1l2-3456-ghij-789012345678",
                      "timestamp": "2025-07-07T18:51:48.000Z"
                    }
                  },
                  "staff_types_response": {
                    "summary": "Staff types master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "663220b2a9e900f9ded0a62f",
                            "name": [
                              {
                                "code": "en",
                                "name": "Doctor"
                              },
                              {
                                "code": "th",
                                "name": "‡πÅ‡∏û‡∏ó‡∏¢‡πå"
                              }
                            ],
                            "en_name": "Doctor",
                            "is_active": true,
                            "is_deleted": false,
                            "is_this_userform_user": false,
                            "created_at": "2024-05-01T11:00:02.415Z",
                            "updated_at": "2024-05-06T10:21:53.354Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "663220baa9e900f9ded0a632",
                            "name": [
                              {
                                "code": "en",
                                "name": "Nurse"
                              },
                              {
                                "code": "th",
                                "name": "‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•"
                              }
                            ],
                            "en_name": "Nurse",
                            "is_active": true,
                            "is_deleted": false,
                            "is_this_userform_user": false,
                            "created_at": "2024-05-01T11:00:10.523Z",
                            "updated_at": "2024-05-06T10:22:01.705Z",
                            "unique_id": 2,
                            "__v": 0
                          },
                          {
                            "_id": "66b9b9f9a144233da399c75e",
                            "name": [
                              {
                                "code": "en",
                                "name": "Ambulance Operation Staff"
                              },
                              {
                                "code": "th",
                                "name": "‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏é‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"
                              }
                            ],
                            "en_name": "Ambulance Operation Staff",
                            "is_active": true,
                            "is_deleted": false,
                            "is_this_userform_user": true,
                            "created_at": "2024-08-12T07:30:01.617Z",
                            "updated_at": "2024-08-12T08:22:02.897Z",
                            "unique_id": 6,
                            "__v": 0
                          }
                        ],
                        "total": 6,
                        "data_type": "staff_types",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "h8i9j0k1-l2m3-4567-hijk-890123456789",
                      "timestamp": "2025-07-07T19:00:00.000Z"
                    }
                  },
                  "underlying_diseases_response": {
                    "summary": "Underlying diseases master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "6638b07a09ecee510e15924d",
                            "name": [
                              {
                                "code": "en",
                                "name": "Hypertension"
                              },
                              {
                                "code": "th",
                                "name": "Hypertension"
                              }
                            ],
                            "en_name": "Hypertension",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-05-06T10:27:06.626Z",
                            "updated_at": "2024-05-06T10:27:11.098Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "6638b09409ecee510e159281",
                            "name": [
                              {
                                "code": "en",
                                "name": "Diabetes Mellitus"
                              },
                              {
                                "code": "th",
                                "name": "Diabetes mellitus"
                              }
                            ],
                            "en_name": "Diabetes Mellitus",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-05-06T10:27:32.331Z",
                            "updated_at": "2024-05-08T14:42:54.113Z",
                            "unique_id": 2,
                            "__v": 0
                          },
                          {
                            "_id": "663b8f25db28c22e32c70c4c",
                            "name": [
                              {
                                "code": "en",
                                "name": "Chronic Kidney Disease"
                              },
                              {
                                "code": "th",
                                "name": "‡πÑ‡∏ï‡∏ß‡∏≤‡∏¢‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á"
                              }
                            ],
                            "en_name": "Chronic Kidney Disease",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-05-08T14:41:41.487Z",
                            "updated_at": "2024-05-08T14:43:14.498Z",
                            "unique_id": 6,
                            "__v": 0
                          }
                        ],
                        "total": 8,
                        "data_type": "underlying_diseases",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "i9j0k1l2-m3n4-5678-ijkl-901234567890",
                      "timestamp": "2025-07-07T19:00:00.000Z"
                    }
                  },
                  "ward_lists_response": {
                    "summary": "Hospital ward lists master data example",
                    "value": {
                      "success": true,
                      "message": "Master data retrieved successfully",
                      "data": {
                        "data": [
                          {
                            "_id": "667c12928cbee167c0a48b6f",
                            "name": [
                              {
                                "code": "en",
                                "name": "ER"
                              },
                              {
                                "code": "th",
                                "name": "‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"
                              }
                            ],
                            "en_name": "ER",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-06-26T13:07:30.355Z",
                            "updated_at": "2025-01-15T13:47:45.279Z",
                            "unique_id": 1,
                            "__v": 0
                          },
                          {
                            "_id": "667c12a38cbee167c0a48ba2",
                            "name": [
                              {
                                "code": "en",
                                "name": "OPD"
                              },
                              {
                                "code": "th",
                                "name": "‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏≠‡∏Å"
                              }
                            ],
                            "en_name": "OPD",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-06-26T13:07:47.248Z",
                            "updated_at": "2024-06-26T13:07:47.248Z",
                            "unique_id": 2,
                            "__v": 0
                          },
                          {
                            "_id": "668dfd03793e2577beebbf5d",
                            "name": [
                              {
                                "code": "en",
                                "name": "Home Ward"
                              },
                              {
                                "code": "th",
                                "name": "‡∏î‡∏π‡πÅ‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏ô"
                              }
                            ],
                            "en_name": "Home Ward",
                            "is_active": true,
                            "is_deleted": false,
                            "created_at": "2024-07-10T03:16:19.542Z",
                            "updated_at": "2024-07-10T03:16:19.542Z",
                            "unique_id": 4,
                            "__v": 0
                          }
                        ],
                        "total": 9,
                        "data_type": "ward_lists",
                        "limit": 100,
                        "skip": 0,
                        "filters": {}
                      },
                      "request_id": "j0k1l2m3-n4o5-6789-jklm-012345678901",
                      "timestamp": "2025-07-07T19:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data type",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error_count": 1,
                  "errors": [
                    {
                      "error_code": "INVALID_DATA_TYPE",
                      "error_type": "validation_error",
                      "message": "Invalid data type. Supported types: provinces, districts, sub_districts, hospitals, hospital_types, blood_groups, human_skin_colors, nations, ward_lists, staff_types, underlying_diseases",
                      "field": "data_type",
                      "value": "invalid_type",
                      "suggestion": "Please use one of the supported data types"
                    }
                  ],
                  "request_id": "h8i9j0k1-l2m3-4567-hijk-890123456789",
                  "timestamp": "2025-01-15T10:30:00.000Z"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Master Data Record",
        "description": "## Create Master Data Record\n\nCreate a new master data record for the specified data type.\n\n### Supported Data Types:\n- `blood_groups`, `nations`, `human_skin_colors`, `ward_lists`, `staff_types`, `underlying_diseases`\n\n### Request Body:\n```json\n{\n  \"name\": [\n    {\"code\": \"en\", \"name\": \"English Name\"},\n    {\"code\": \"th\", \"name\": \"Thai Name\"}\n  ],\n  \"en_name\": \"English Name\",\n  \"is_active\": true,\n  \"additional_fields\": {}\n}\n```\n\n### Features:\n- **Multilingual Support**: English and Thai names\n- **Validation**: Automatic field validation\n- **Audit Trail**: Automatic timestamps and user tracking\n- **Soft Delete**: Records are soft-deleted by default\n- **Unique Constraints**: Prevents duplicate entries\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "create_master_data_admin_master_data__data_type__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterDataCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Master data record created successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Master data record created successfully",
                  "data": {
                    "_id": "663220b2a9e900f9ded0a62f",
                    "name": [
                      {
                        "code": "en",
                        "name": "New Staff Type"
                      },
                      {
                        "code": "th",
                        "name": "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà"
                      }
                    ],
                    "en_name": "New Staff Type",
                    "is_active": true,
                    "is_deleted": false,
                    "created_at": "2024-05-01T11:00:02.415Z",
                    "updated_at": "2024-05-01T11:00:02.415Z",
                    "unique_id": 7,
                    "__v": 0
                  },
                  "request_id": "k1l2m3n4-o5p6-7890-klmn-123456789012",
                  "timestamp": "2025-07-07T19:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or invalid data type",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error_count": 1,
                  "errors": [
                    {
                      "error_code": "VALIDATION_ERROR",
                      "error_type": "validation_error",
                      "message": "Name is required for master data creation",
                      "field": "name",
                      "suggestion": "Please provide a valid name with English and Thai translations"
                    }
                  ],
                  "request_id": "l2m3n4o5-p6q7-8901-lmno-234567890123",
                  "timestamp": "2025-07-07T19:00:00.000Z"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/master-data/{data_type}/{record_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Master Data Record by ID",
        "description": "## Get Master Data Record by ID\n\nRetrieve a specific master data record by its ID.\n\n### Supported Data Types:\n- `hospitals`, `provinces`, `districts`, `sub_districts`\n- `blood_groups`, `nations`, `human_skin_colors`, `ward_lists`, `staff_types`, `underlying_diseases`\n\n### Features:\n- **Record Validation**: Validates ObjectId format\n- **Error Handling**: Comprehensive error responses\n- **Data Serialization**: Proper MongoDB ObjectId handling\n- **Audit Trail**: Request tracking with request_id\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "get_master_data_record_admin_master_data__data_type___record_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Master data record retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Master data record retrieved successfully",
                  "data": {
                    "record": {
                      "_id": "507f1f77bcf86cd799439011",
                      "name": [
                        {
                          "code": "en",
                          "name": "Bangkok General Hospital"
                        },
                        {
                          "code": "th",
                          "name": "‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û"
                        }
                      ],
                      "en_name": "Bangkok General Hospital",
                      "province_code": 10,
                      "is_active": true
                    },
                    "data_type": "hospitals"
                  },
                  "request_id": "master-data-001",
                  "timestamp": "2025-07-10T12:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid record ID format or data type"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Master data record not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Master Data Record",
        "description": "## Update Master Data Record\n\nUpdate an existing master data record by ID.\n\n### Supported Data Types:\n- `blood_groups`, `nations`, `human_skin_colors`, `ward_lists`, `staff_types`, `underlying_diseases`\n\n### Request Body:\n```json\n{\n  \"name\": [\n    {\"code\": \"en\", \"name\": \"Updated English Name\"},\n    {\"code\": \"th\", \"name\": \"Updated Thai Name\"}\n  ],\n  \"en_name\": \"Updated English Name\",\n  \"is_active\": true,\n  \"additional_fields\": {}\n}\n```\n\n### Features:\n- **Partial Updates**: Only provided fields are updated\n- **Validation**: Automatic field validation\n- **Audit Trail**: Automatic timestamp updates\n- **Soft Delete**: Records can be soft-deleted\n- **Multilingual Support**: English and Thai names\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "update_master_data_admin_master_data__data_type___record_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterDataUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Master data record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Master data record updated successfully",
                  "data": {
                    "_id": "663220b2a9e900f9ded0a62f",
                    "name": [
                      {
                        "code": "en",
                        "name": "Updated Staff Type"
                      },
                      {
                        "code": "th",
                        "name": "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï"
                      }
                    ],
                    "en_name": "Updated Staff Type",
                    "is_active": true,
                    "is_deleted": false,
                    "created_at": "2024-05-01T11:00:02.415Z",
                    "updated_at": "2025-07-07T19:00:00.000Z",
                    "unique_id": 1,
                    "__v": 1
                  },
                  "request_id": "m3n4o5p6-q7r8-9012-mnop-345678901234",
                  "timestamp": "2025-07-07T19:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or invalid data type"
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "404": {
            "description": "Record not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Partially Update Master Data Record",
        "description": "## Partially Update Master Data Record\n\nPartially update an existing master data record by ID.\n\n### Supported Data Types:\n- `blood_groups`, `nations`, `human_skin_colors`, `ward_lists`, `staff_types`, `underlying_diseases`\n\n### Request Body:\n```json\n{\n  \"name\": [\n    {\"code\": \"en\", \"name\": \"Updated English Name\"},\n    {\"code\": \"th\", \"name\": \"Updated Thai Name\"}\n  ],\n  \"is_active\": false\n}\n```\n\n### Features:\n- **Partial Updates**: Only provided fields are updated\n- **Validation**: Automatic field validation\n- **Audit Trail**: Automatic timestamp updates\n- **Soft Delete**: Records can be soft-deleted\n- **Multilingual Support**: English and Thai names\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "patch_master_data_admin_master_data__data_type___record_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterDataUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Master data record partially updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Master data record partially updated successfully",
                  "data": {
                    "_id": "663220b2a9e900f9ded0a62f",
                    "name": [
                      {
                        "code": "en",
                        "name": "Partially Updated Staff Type"
                      },
                      {
                        "code": "th",
                        "name": "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô"
                      }
                    ],
                    "en_name": "Partially Updated Staff Type",
                    "is_active": false,
                    "is_deleted": false,
                    "created_at": "2024-05-01T11:00:02.415Z",
                    "updated_at": "2025-07-07T19:00:00.000Z",
                    "unique_id": 1,
                    "__v": 2
                  },
                  "request_id": "n4o5p6q7-r8s9-0123-nopq-456789012345",
                  "timestamp": "2025-07-07T19:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or invalid data type"
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "404": {
            "description": "Record not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Master Data Record",
        "description": "## Delete Master Data Record\n\nSoft delete a master data record by ID.\n\n### Supported Data Types:\n- `blood_groups`, `nations`, `human_skin_colors`, `ward_lists`, `staff_types`, `underlying_diseases`\n\n### Features:\n- **Soft Delete**: Records are marked as deleted but not physically removed\n- **Audit Trail**: Automatic timestamp updates and user tracking\n- **Validation**: Checks if record exists before deletion\n- **Reversible**: Soft-deleted records can be restored\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "delete_master_data_admin_master_data__data_type___record_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Master data record deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Master data record deleted successfully",
                  "data": {
                    "_id": "663220b2a9e900f9ded0a62f",
                    "name": [
                      {
                        "code": "en",
                        "name": "Deleted Staff Type"
                      },
                      {
                        "code": "th",
                        "name": "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏•‡∏ö"
                      }
                    ],
                    "en_name": "Deleted Staff Type",
                    "is_active": false,
                    "is_deleted": true,
                    "deleted_at": "2025-07-07T19:00:00.000Z",
                    "deleted_by": "6638a496f7ce6d32b68120f1",
                    "created_at": "2024-05-01T11:00:02.415Z",
                    "updated_at": "2025-07-07T19:00:00.000Z",
                    "unique_id": 1,
                    "__v": 3
                  },
                  "request_id": "o5p6q7r8-s9t0-1234-opqr-567890123456",
                  "timestamp": "2025-07-07T19:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data type or record ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "404": {
            "description": "Record not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hospital-users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Hospital Users",
        "description": "Get hospital users with filtering and pagination",
        "operationId": "get_hospital_users_admin_hospital_users_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hospital Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hospital users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Hospital users retrieved successfully",
                  "data": {
                    "users": [
                      {
                        "_id": "6638a496f7ce6d32b68120f1",
                        "email": "kitkamon@tely360.com",
                        "first_name": "Kitkamon",
                        "last_name": "Maitree",
                        "user_title": "Mr.",
                        "phone": "813618766",
                        "country_phone_code": "+66",
                        "country_code": "Th",
                        "country_name": "Thailand",
                        "hospital_id": "6814838ae1b89fa275c66868",
                        "type": "663220b2a9e900f9ded0a62f",
                        "image_url": "user_profiles/6638bc8209ecee510e15a28844XQ.jpg",
                        "is_active": true,
                        "is_deleted": false,
                        "created_at": "2024-05-06T11:18:26.717Z",
                        "updated_at": "2025-06-24T02:37:38.939Z",
                        "unique_id": 2
                      }
                    ],
                    "total": 72,
                    "limit": 100,
                    "skip": 0,
                    "has_next": false,
                    "has_prev": false
                  },
                  "request_id": "h9i0j1k2-l3m4-5678-ijkl-901234567890",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Hospital User",
        "description": "Create a new hospital user",
        "operationId": "create_hospital_user_admin_hospital_users_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HospitalUserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hospital-users/{user_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Hospital User",
        "description": "Get a specific hospital user by ID",
        "operationId": "get_hospital_user_admin_hospital_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Hospital User",
        "description": "Update a hospital user",
        "operationId": "update_hospital_user_admin_hospital_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HospitalUserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Hospital User",
        "description": "Soft delete a hospital user",
        "operationId": "delete_hospital_user_admin_hospital_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hospital-users/search": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Search Hospital Users",
        "description": "Advanced search for hospital users",
        "operationId": "search_hospital_users_admin_hospital_users_search_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HospitalUserSearchQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hospital-users/stats/summary": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Hospital Users Stats",
        "description": "Get hospital users statistics",
        "operationId": "get_hospital_users_stats_admin_hospital_users_stats_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/audit-log": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Audit Logs",
        "description": "Get audit logs",
        "operationId": "get_audit_logs_admin_audit_log_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Type"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Audit Logs Admin Audit Log Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/analytics": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Analytics",
        "description": "Get dashboard analytics",
        "operationId": "get_analytics_admin_analytics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Analytics Admin Analytics Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/medical-history-management/{history_type}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Medical History Management",
        "description": "Get medical history records with comprehensive table view and filtering",
        "operationId": "get_medical_history_management_admin_medical_history_management__history_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Medical history records retrieved successfully with table view",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "success": true,
                  "message": "Medical history records retrieved successfully",
                  "data": {
                    "records": [
                      {
                        "_id": "64f1234567890abcdef12345",
                        "patient_id": "622035a5fd26d7b6d9b7730c",
                        "patient_name": "John Doe",
                        "device_id": "DEV001",
                        "device_type": "AVA4",
                        "data": [
                          {
                            "systolic": 120,
                            "diastolic": 80,
                            "pulse": 72,
                            "timestamp": "2024-01-15T10:30:00Z"
                          }
                        ],
                        "created_at": "2024-01-15T10:30:00Z",
                        "updated_at": "2024-01-15T10:30:00Z"
                      }
                    ],
                    "total": 2574,
                    "limit": 50,
                    "skip": 0,
                    "has_next": true,
                    "has_prev": false,
                    "collection_info": {
                      "display_name": "Blood Pressure History",
                      "record_count": 2574,
                      "data_fields": [
                        "systolic",
                        "diastolic",
                        "pulse",
                        "timestamp"
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Medical History Record",
        "description": "Create new medical history record",
        "operationId": "create_medical_history_record_admin_medical_history_management__history_type__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalHistoryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history-management/{history_type}/{record_id}": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update Medical History Record",
        "description": "Update medical history record",
        "operationId": "update_medical_history_record_admin_medical_history_management__history_type___record_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalHistoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Medical History Record",
        "description": "Delete medical history record",
        "operationId": "delete_medical_history_record_admin_medical_history_management__history_type___record_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Record Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history-management/{history_type}/search": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Search Medical History Records",
        "description": "Advanced search for medical history records",
        "operationId": "search_medical_history_records_admin_medical_history_management__history_type__search_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalHistorySearchQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/medical-history-management/stats/overview": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Medical History Stats",
        "description": "Get comprehensive medical history statistics",
        "operationId": "get_medical_history_stats_admin_medical_history_management_stats_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/hospitals-raw-documents": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Raw Hospital Documents",
        "description": "## Raw Hospital Document Analysis\n    \n    Access complete MongoDB hospital documents without serialization for analysis and debugging.\n    \n    ### Features:\n    - **Complete Raw Structure**: All hospital fields per document\n    - **Field Analysis**: Automatic data type detection and statistics\n    - **Sample Values**: Preview of actual field content\n    - **ObjectId Mapping**: MongoDB relationship identification\n    - **Pagination Support**: Handle large document sets efficiently\n    - **Filtering Options**: Hospital ID and deletion status filters\n    \n    ### Document Structure:\n    \n    #### **Core Hospital Information** (15+ fields):\n    - `_id`, `name`, `en_name`, `province_code`, `district_code`\n    - `sub_district_code`, `organizecode`, `hospital_area_code`\n    - `is_active`, `is_deleted`, `created_at`, `updated_at`\n    \n    #### **Enhanced Address Information** (10+ fields):\n    - `address`: Basic address string\n    - `address_details`: Detailed address structure\n    - `location`: Geographic coordinates and precision\n    \n    #### **Contact Information** (10+ fields):\n    - `contact`: Comprehensive contact details\n    - `phone`, `email`, `website`: Legacy contact fields\n    - `fax`, `mobile`, `emergency_phone`: Additional contact methods\n    \n    #### **Service Information** (10+ fields):\n    - `services`: Service and capacity details\n    - `bed_capacity`, `service_plan_type`: Legacy service fields\n    - `emergency_services`, `trauma_center`, `icu_beds`\n    \n    #### **Digital Integration** (10+ fields):\n    - `image_url`: Hospital image URL\n    - `auto_login_liff_id`, `disconnect_liff_id`, `login_liff_id`\n    - `mac_hv01_box`, `notifyToken`, `rich_menu_token`\n    - `telegram_Token`: Telegram notification token\n    \n    #### **Notification Settings** (5+ fields):\n    - `is_acknowledge`, `is_admit_discard`\n    - `is_body_data`, `is_lab_data`, `is_status_change`\n    \n    ### Query Parameters:\n    - `limit`: Number of documents to return (1-50, default: 5)\n    - `skip`: Number of documents to skip for pagination\n    - `hospital_id`: Filter by specific hospital ObjectId\n    - `include_deleted`: Include soft-deleted hospitals (default: false)\n    - `province_code`: Filter by province code\n    - `district_code`: Filter by district code\n    - `sub_district_code`: Filter by sub-district code\n    \n    ### Response Features:\n    - **Raw Documents**: Complete MongoDB structure preserved\n    - **Field Analysis**: Data type detection and usage statistics\n    - **Sample Values**: Up to 3 sample values per field\n    - **ObjectId Detection**: Automatic relationship mapping\n    - **Pagination Info**: Total count and navigation details\n    \n    ### Use Cases:\n    - **Database Analysis**: Understand complete hospital data structure\n    - **Integration Planning**: Map fields for external system integration\n    - **Data Migration**: Analyze field usage and data types\n    - **Debugging**: Inspect raw MongoDB documents\n    - **API Development**: Understand available hospital fields\n    \n    ### Authentication:\n    Requires valid JWT Bearer token with admin privileges.",
        "operationId": "get_raw_hospital_documents_admin_hospitals_raw_documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Number of raw documents to return",
              "default": 5,
              "title": "Limit"
            },
            "description": "Number of raw documents to return"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of documents to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of documents to skip"
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by specific hospital ID"
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include soft-deleted hospitals",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include soft-deleted hospitals"
          },
          {
            "name": "province_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by province code",
              "title": "Province Code"
            },
            "description": "Filter by province code"
          },
          {
            "name": "district_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by district code",
              "title": "District Code"
            },
            "description": "Filter by district code"
          },
          {
            "name": "sub_district_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by sub-district code",
              "title": "Sub District Code"
            },
            "description": "Filter by sub-district code"
          }
        ],
        "responses": {
          "200": {
            "description": "Raw hospital documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "success": true,
                  "message": "Raw hospital documents retrieved successfully",
                  "data": {
                    "raw_documents": [
                      {
                        "_id": {
                          "$oid": "507f1f77bcf86cd799439011"
                        },
                        "name": [
                          {
                            "code": "en",
                            "name": "Bangkok General Hospital"
                          },
                          {
                            "code": "th",
                            "name": "‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û"
                          }
                        ],
                        "en_name": "Bangkok General Hospital",
                        "province_code": 10,
                        "district_code": 1003,
                        "sub_district_code": 100301,
                        "organizecode": 1001,
                        "hospital_area_code": "10330",
                        "is_active": true,
                        "is_deleted": false,
                        "address": "123 Rama IV Road, Pathum Wan, Bangkok 10330",
                        "phone": "+66-2-123-4567",
                        "email": "info@bgh.co.th",
                        "website": "https://www.bgh.co.th",
                        "bed_capacity": 500,
                        "service_plan_type": "A",
                        "created_at": {
                          "$date": "2024-01-15T08:00:00.000Z"
                        },
                        "updated_at": {
                          "$date": "2024-01-15T10:30:00.000Z"
                        },
                        "__v": 2
                      }
                    ],
                    "total_count": 12350,
                    "returned_count": 1,
                    "field_analysis": {
                      "_id": {
                        "count": 1,
                        "data_types": [
                          "ObjectId"
                        ],
                        "sample_values": [
                          "507f1f77bcf86cd799439011"
                        ],
                        "is_object_id": true
                      },
                      "name": {
                        "count": 1,
                        "data_types": [
                          "array"
                        ],
                        "sample_values": [
                          {
                            "code": "en",
                            "name": "Bangkok General Hospital"
                          }
                        ],
                        "is_object_id": false
                      },
                      "province_code": {
                        "count": 1,
                        "data_types": [
                          "int"
                        ],
                        "sample_values": [
                          10
                        ],
                        "is_object_id": false
                      },
                      "bed_capacity": {
                        "count": 1,
                        "data_types": [
                          "int"
                        ],
                        "sample_values": [
                          500
                        ],
                        "is_object_id": false
                      }
                    },
                    "pagination": {
                      "limit": 5,
                      "skip": 0,
                      "has_more": true
                    },
                    "filters": {
                      "include_deleted": false
                    },
                    "metadata": {
                      "collection": "hospitals",
                      "query_filter": "{'is_deleted': {'$ne': True}}",
                      "timestamp": "2024-01-15T10:30:00.000000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid hospital ID format"
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin privileges required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/dropdown/provinces": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Provinces for Dropdown",
        "description": "## Province Dropdown Endpoint\n\nOptimized endpoint for province dropdown lists in forms with flexible filtering options.\n\n### Features:\n- **Lightweight Response**: Only essential fields (code, en_name, th_name)\n- **Fast Performance**: Minimal data transfer\n- **Sorted Results**: Alphabetically sorted by English name\n- **Flexible Filtering**: Optional inclusion of inactive/deleted records\n- **Search Support**: Optional text search across province names\n- **Pagination**: Optional limit for large datasets\n\n### Query Parameters:\n- `include_inactive` (optional): Include inactive provinces (default: false)\n- `include_deleted` (optional): Include soft-deleted provinces (default: false)\n- `search` (optional): Search text across English and Thai names\n- `limit` (optional): Maximum number of results (default: unlimited)\n- `sort_by` (optional): Sort field - 'en_name' or 'code' (default: 'en_name')\n\n### Response Format:\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"provinces\": [\n      {\"code\": 10, \"en_name\": \"Bangkok\", \"th_name\": \"‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£\", \"is_active\": true},\n      {\"code\": 11, \"en_name\": \"Samut Prakan\", \"th_name\": \"‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£\", \"is_active\": true}\n    ],\n    \"total\": 79,\n    \"filters_applied\": {\n      \"include_inactive\": false,\n      \"include_deleted\": false,\n      \"search\": null\n    }\n  }\n}\n```\n\n### Use Cases:\n- Province dropdown in patient registration forms\n- Hospital search filters\n- Address selection forms\n- Geographic filtering interfaces\n- Administrative management (with inactive/deleted records)\n\n### Authentication:\nRequires valid JWT Bearer token.",
        "operationId": "get_provinces_dropdown_admin_dropdown_provinces_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include inactive provinces",
              "default": false,
              "title": "Include Inactive"
            },
            "description": "Include inactive provinces"
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include soft-deleted provinces",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include soft-deleted provinces"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search text across province names",
              "title": "Search"
            },
            "description": "Search text across province names"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 1000,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum number of results",
              "title": "Limit"
            },
            "description": "Maximum number of results"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort field: 'en_name' or 'code'",
              "default": "en_name",
              "title": "Sort By"
            },
            "description": "Sort field: 'en_name' or 'code'"
          }
        ],
        "responses": {
          "200": {
            "description": "Provinces retrieved successfully for dropdown",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Provinces retrieved successfully for dropdown",
                  "data": {
                    "provinces": [
                      {
                        "code": 10,
                        "en_name": "Bangkok",
                        "th_name": "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£",
                        "is_active": true
                      },
                      {
                        "code": 11,
                        "en_name": "Samut Prakan",
                        "th_name": "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£",
                        "is_active": true
                      },
                      {
                        "code": 12,
                        "en_name": "Nonthaburi",
                        "th_name": "‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ",
                        "is_active": true
                      }
                    ],
                    "total": 6,
                    "filters_applied": {
                      "include_inactive": false,
                      "include_deleted": false
                    }
                  },
                  "request_id": "dropdown-001",
                  "timestamp": "2025-01-08T05:42:00.000Z"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/dropdown/districts": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Districts for Dropdown",
        "description": "## District Dropdown Endpoint\n\nOptimized endpoint for district dropdown lists in forms with province filtering and flexible options.\n\n### Features:\n- **Cascading Filter**: Filter by province_code for cascading dropdowns\n- **Lightweight Response**: Only essential fields (code, en_name, th_name)\n- **Fast Performance**: Minimal data transfer\n- **Sorted Results**: Alphabetically sorted by English name\n- **Flexible Filtering**: Optional inclusion of inactive/deleted records\n- **Search Support**: Optional text search across district names\n\n### Query Parameters:\n- `province_code` (required): Province code to filter districts\n- `include_inactive` (optional): Include inactive districts (default: false)\n- `include_deleted` (optional): Include soft-deleted districts (default: false)\n- `search` (optional): Search text across English and Thai names\n- `limit` (optional): Maximum number of results (default: unlimited)\n- `sort_by` (optional): Sort field - 'en_name' or 'code' (default: 'en_name')\n\n### Response Format:\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"districts\": [\n      {\"code\": 1003, \"en_name\": \"Khet Pathum Wan\", \"th_name\": \"‡πÄ‡∏Ç‡∏ï‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô\", \"is_active\": true},\n      {\"code\": 1008, \"en_name\": \"Khet Pom Prap Sattru Phai\", \"th_name\": \"‡πÄ‡∏Ç‡∏ï‡∏õ‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏≤‡∏ö‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏û‡πà‡∏≤‡∏¢\", \"is_active\": true}\n    ],\n    \"total\": 12,\n    \"province_code\": 10,\n    \"filters_applied\": {\n      \"include_inactive\": false,\n      \"include_deleted\": false,\n      \"search\": null\n    }\n  }\n}\n```\n\n### Use Cases:\n- District dropdown after province selection\n- Cascading geographic forms\n- Hospital location filtering\n- Address completion forms\n- Administrative management (with inactive/deleted records)\n\n### Authentication:\nRequires valid JWT Bearer token.",
        "operationId": "get_districts_dropdown_admin_dropdown_districts_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "province_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Province code to filter districts",
              "title": "Province Code"
            },
            "description": "Province code to filter districts"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include inactive districts",
              "default": false,
              "title": "Include Inactive"
            },
            "description": "Include inactive districts"
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include soft-deleted districts",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include soft-deleted districts"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search text across district names",
              "title": "Search"
            },
            "description": "Search text across district names"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 1000,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum number of results",
              "title": "Limit"
            },
            "description": "Maximum number of results"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort field: 'en_name' or 'code'",
              "default": "en_name",
              "title": "Sort By"
            },
            "description": "Sort field: 'en_name' or 'code'"
          }
        ],
        "responses": {
          "200": {
            "description": "Districts retrieved successfully for dropdown",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Districts retrieved successfully for dropdown",
                  "data": {
                    "districts": [
                      {
                        "code": 1003,
                        "en_name": "Khet Pathum Wan",
                        "th_name": "‡πÄ‡∏Ç‡∏ï‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô",
                        "is_active": true
                      },
                      {
                        "code": 1008,
                        "en_name": "Khet Pom Prap Sattru Phai",
                        "th_name": "‡πÄ‡∏Ç‡∏ï‡∏õ‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏≤‡∏ö‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏û‡πà‡∏≤‡∏¢",
                        "is_active": true
                      }
                    ],
                    "total": 12,
                    "province_code": 10,
                    "filters_applied": {
                      "include_inactive": false,
                      "include_deleted": false
                    }
                  },
                  "request_id": "dropdown-002",
                  "timestamp": "2025-01-08T05:42:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Province code is required"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Province not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/dropdown/sub-districts": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Sub-Districts for Dropdown",
        "description": "## Sub-District Dropdown Endpoint\n\nOptimized endpoint for sub-district dropdown lists in forms with province and district filtering.\n\n### Features:\n- **Cascading Filter**: Filter by province_code and district_code for cascading dropdowns\n- **Lightweight Response**: Only essential fields (code, en_name, th_name)\n- **Fast Performance**: Minimal data transfer\n- **Sorted Results**: Alphabetically sorted by English name\n- **Active Only**: Returns only active, non-deleted sub-districts\n\n### Query Parameters:\n- `province_code` (required): Province code to filter sub-districts\n- `district_code` (required): District code to filter sub-districts\n\n### Response Format:\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"sub_districts\": [\n      {\"code\": 100301, \"en_name\": \"Khwaeng Lumphini\", \"th_name\": \"‡πÅ‡∏Ç‡∏ß‡∏á‡∏•‡∏∏‡∏°‡∏û‡∏¥‡∏ô‡∏µ\"},\n      {\"code\": 100302, \"en_name\": \"Khwaeng Pathum Wan\", \"th_name\": \"‡πÅ‡∏Ç‡∏ß‡∏á‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô\"}\n    ],\n    \"total\": 6,\n    \"province_code\": 10,\n    \"district_code\": 1003\n  }\n}\n```\n\n### Use Cases:\n- Sub-district dropdown after district selection\n- Complete cascading geographic forms\n- Detailed address forms\n- Hospital location specification\n\n### Authentication:\nRequires valid JWT Bearer token.",
        "operationId": "get_sub_districts_dropdown_admin_dropdown_sub_districts_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "province_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Province code to filter sub-districts",
              "title": "Province Code"
            },
            "description": "Province code to filter sub-districts"
          },
          {
            "name": "district_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "District code to filter sub-districts",
              "title": "District Code"
            },
            "description": "District code to filter sub-districts"
          }
        ],
        "responses": {
          "200": {
            "description": "Sub-districts retrieved successfully for dropdown",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Sub-districts retrieved successfully for dropdown",
                  "data": {
                    "sub_districts": [
                      {
                        "code": 100301,
                        "en_name": "Khwaeng Lumphini",
                        "th_name": "‡πÅ‡∏Ç‡∏ß‡∏á‡∏•‡∏∏‡∏°‡∏û‡∏¥‡∏ô‡∏µ"
                      },
                      {
                        "code": 100302,
                        "en_name": "Khwaeng Pathum Wan",
                        "th_name": "‡πÅ‡∏Ç‡∏ß‡∏á‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô"
                      }
                    ],
                    "total": 6,
                    "province_code": 10,
                    "district_code": 1003
                  },
                  "request_id": "dropdown-003",
                  "timestamp": "2025-01-08T05:42:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Province code and district code are required"
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Province or district not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/rate-limit/whitelist": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Ip Whitelist",
        "description": "Get current IP whitelist with detailed information",
        "operationId": "get_ip_whitelist_admin_rate_limit_whitelist_get",
        "responses": {
          "200": {
            "description": "Whitelist retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Retrieved whitelist with 3 IP addresses",
                  "data": {
                    "total_count": 3,
                    "whitelist": [
                      {
                        "ip_address": "127.0.0.1",
                        "reason": "Local development",
                        "added_by": "system",
                        "timestamp": "2025-07-09T06:30:00.000000Z"
                      },
                      {
                        "ip_address": "49.0.81.155",
                        "reason": "Admin access",
                        "added_by": "admin",
                        "timestamp": "2025-07-09T06:30:00.000000Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Add Ip To Whitelist",
        "description": "Add IP address to whitelist",
        "operationId": "add_ip_to_whitelist_admin_rate_limit_whitelist_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object",
                "title": "Ip Data"
              },
              "example": {
                "ip_address": "203.0.113.45",
                "reason": "Office network access"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "IP successfully added to whitelist",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "IP 203.0.113.45 successfully added to whitelist",
                  "data": {
                    "ip_address": "203.0.113.45",
                    "reason": "Office network",
                    "added_by": "admin",
                    "timestamp": "2025-07-09T06:30:00.000000Z",
                    "total_whitelisted": 4
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/rate-limit/whitelist/{ip_address}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Remove Ip From Whitelist",
        "description": "Remove IP address from whitelist",
        "operationId": "remove_ip_from_whitelist_admin_rate_limit_whitelist__ip_address__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IP successfully removed from whitelist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "IP 203.0.113.45 successfully removed from whitelist",
                  "data": {
                    "ip_address": "203.0.113.45",
                    "removed_by": "admin",
                    "timestamp": "2025-07-09T06:30:00.000000Z",
                    "total_whitelisted": 3
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/rate-limit/blacklist": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Add Ip To Blacklist",
        "description": "Add IP address to blacklist",
        "operationId": "add_ip_to_blacklist_admin_rate_limit_blacklist_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object",
                "title": "Ip Data"
              },
              "example": {
                "ip_address": "192.0.2.100",
                "reason": "Suspicious activity detected"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "IP successfully added to blacklist",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "IP 192.0.2.100 successfully added to blacklist",
                  "data": {
                    "ip_address": "192.0.2.100",
                    "reason": "Suspicious activity",
                    "added_by": "admin",
                    "timestamp": "2025-07-09T06:30:00.000000Z",
                    "total_blacklisted": 5
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/master-data/{data_type}/bulk-export": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Bulk Export Master Data",
        "description": "## Bulk Export Master Data\n\nExport large datasets of master data without pagination limits for data migration and analysis.\n\n### Features:\n- **No Pagination Limits**: Export entire datasets in one request\n- **Large Dataset Support**: Handles datasets with 10,000+ records\n- **Filtering Support**: All standard filters available\n- **Performance Optimized**: Uses streaming for large exports\n- **Memory Efficient**: Processes data in chunks\n\n### Query Parameters:\n- `search`: Search across data fields\n- `is_active`: Filter by active status (true/false, optional)\n- `province_code`: Filter by province code (for geographic data)\n- `district_code`: Filter by district code (for geographic data)\n- `sub_district_code`: Filter by sub-district code (for geographic data)\n- `format`: Export format - 'json' or 'csv' (default: 'json')\n\n### Use Cases:\n- Data migration to external systems\n- Bulk data analysis\n- Database backups\n- Integration with reporting tools\n- Complete dataset exports\n\n### Authentication:\nRequires valid JWT Bearer token with admin privileges.",
        "operationId": "bulk_export_master_data_admin_master_data__data_type__bulk_export_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "data_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Type"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "province_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Province Code"
            }
          },
          {
            "name": "district_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "District Code"
            }
          },
          {
            "name": "sub_district_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sub District Code"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Export format: json or csv",
              "default": "json",
              "title": "Format"
            },
            "description": "Export format: json or csv"
          }
        ],
        "responses": {
          "200": {
            "description": "Bulk export completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Bulk export completed successfully",
                  "data": {
                    "data_type": "hospitals",
                    "total_records": 12350,
                    "exported_records": 12350,
                    "format": "json",
                    "filters_applied": {
                      "is_active": true
                    },
                    "export_metadata": {
                      "export_id": "bulk-export-001",
                      "exported_at": "2025-07-10T03:30:00.000Z",
                      "processing_time_ms": 1250
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data type or format"
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/devices/data": {
      "post": {
        "tags": [
          "device-crud"
        ],
        "summary": "Create Device Data",
        "description": "Create new device data entry",
        "operationId": "create_device_data_api_devices_data_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDataCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "device-crud"
        ],
        "summary": "Get Device Data",
        "description": "Get device data with filtering",
        "operationId": "get_device_data_api_devices_data_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "data_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Type"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/devices/data/{observation_id}": {
      "get": {
        "tags": [
          "device-crud"
        ],
        "summary": "Get Device Data Record",
        "description": "Get specific device data record",
        "operationId": "get_device_data_record_api_devices_data__observation_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Observation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "device-crud"
        ],
        "summary": "Update Device Data",
        "description": "Update device data record",
        "operationId": "update_device_data_api_devices_data__observation_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Observation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceDataUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "device-crud"
        ],
        "summary": "Delete Device Data",
        "description": "Soft delete device data record",
        "operationId": "delete_device_data_api_devices_data__observation_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Observation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/devices/": {
      "post": {
        "tags": [
          "device-crud"
        ],
        "summary": "Api Create Device",
        "description": "Create new device",
        "operationId": "api_create_device_api_devices__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routes__device_crud__DeviceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "device-crud"
        ],
        "summary": "Get Devices",
        "description": "Get devices with filtering",
        "operationId": "get_devices_api_devices__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hospital Id"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/devices/{device_id}": {
      "get": {
        "tags": [
          "device-crud"
        ],
        "summary": "Api Get Device",
        "description": "Get specific device",
        "operationId": "api_get_device_api_devices__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "device-crud"
        ],
        "summary": "Api Update Device",
        "description": "Update device",
        "operationId": "api_update_device_api_devices__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routes__device_crud__DeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "device-crud"
        ],
        "summary": "Api Delete Device",
        "description": "Soft delete device",
        "operationId": "api_delete_device_api_devices__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type: ava4, kati, qube-vital",
              "title": "Device Type"
            },
            "description": "Device type: ava4, kati, qube-vital"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/device-types": {
      "get": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Get Device Types",
        "description": "Get available device types with their descriptions",
        "operationId": "get_device_types_admin_device_mapping_device_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Device Types Admin Device Mapping Device Types Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/device-mapping/available/ava4-boxes": {
      "get": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Get Available Ava4 Boxes",
        "description": "Get available AVA4 boxes (not assigned to any patient)",
        "operationId": "get_available_ava4_boxes_admin_device_mapping_available_ava4_boxes_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Available Ava4 Boxes Admin Device Mapping Available Ava4 Boxes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/available/kati-watches": {
      "get": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Get Available Kati Watches",
        "description": "Get available Kati watches (not assigned to any patient)",
        "operationId": "get_available_kati_watches_admin_device_mapping_available_kati_watches_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Available Kati Watches Admin Device Mapping Available Kati Watches Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/": {
      "get": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Get Device Mappings",
        "description": "Get device mappings with filtering and pagination",
        "operationId": "get_device_mappings_admin_device_mapping__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by patient ID",
              "title": "Patient Id"
            },
            "description": "Filter by patient ID"
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by device type",
              "title": "Device Type"
            },
            "description": "Filter by device type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Device Mappings Admin Device Mapping  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/{patient_id}": {
      "get": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Get Patient Device Mapping",
        "description": "Get device mapping for a specific patient",
        "operationId": "get_patient_device_mapping_admin_device_mapping__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Patient Device Mapping Admin Device Mapping  Patient Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/ava4-box": {
      "post": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Assign Ava4 Box",
        "description": "Assign AVA4 box to patient",
        "operationId": "assign_ava4_box_admin_device_mapping_ava4_box_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AVA4BoxAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Assign Ava4 Box Admin Device Mapping Ava4 Box Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/device-mapping/kati-watch": {
      "post": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Assign Kati Watch",
        "description": "Assign Kati watch to patient",
        "operationId": "assign_kati_watch_admin_device_mapping_kati_watch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KatiWatchAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Assign Kati Watch Admin Device Mapping Kati Watch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/device-mapping/medical-device": {
      "post": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Assign Medical Device",
        "description": "Assign medical device to patient",
        "operationId": "assign_medical_device_admin_device_mapping_medical_device_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalDeviceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Assign Medical Device Admin Device Mapping Medical Device Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/device-mapping/medical-device/{device_id}": {
      "put": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Update Medical Device",
        "description": "Update medical device assignment",
        "operationId": "update_medical_device_admin_device_mapping_medical_device__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalDeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Medical Device Admin Device Mapping Medical Device  Device Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Remove Medical Device",
        "description": "Remove medical device assignment",
        "operationId": "remove_medical_device_admin_device_mapping_medical_device__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device type to remove",
              "title": "Device Type"
            },
            "description": "Device type to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Remove Medical Device Admin Device Mapping Medical Device  Device Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/ava4-box/{box_id}": {
      "delete": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Unassign Ava4 Box",
        "description": "Unassign AVA4 box from patient",
        "operationId": "unassign_ava4_box_admin_device_mapping_ava4_box__box_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Box Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Unassign Ava4 Box Admin Device Mapping Ava4 Box  Box Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/device-mapping/kati-watch/{watch_id}": {
      "delete": {
        "tags": [
          "device-mapping"
        ],
        "summary": "Unassign Kati Watch",
        "description": "Unassign Kati watch from patient",
        "operationId": "unassign_kati_watch_admin_device_mapping_kati_watch__watch_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "watch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Watch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Unassign Kati Watch Admin Device Mapping Kati Watch  Watch Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/patients/{patient_id}/medical-devices": {
      "get": {
        "tags": [
          "patient-devices"
        ],
        "summary": "Get Patient Medical Devices",
        "description": "Get all medical devices registered to a specific patient",
        "operationId": "get_patient_medical_devices_api_patients__patient_id__medical_devices_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "include_device_info",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Device Info"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "patient-devices"
        ],
        "summary": "Register Patient Medical Devices",
        "description": "Register medical devices to a patient (create new registry)",
        "operationId": "register_patient_medical_devices_api_patients__patient_id__medical_devices_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientDeviceRegistry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "patient-devices"
        ],
        "summary": "Update Patient Medical Devices",
        "description": "Update medical devices registry for a patient",
        "operationId": "update_patient_medical_devices_api_patients__patient_id__medical_devices_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientDeviceRegistryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/patients/{patient_id}/medical-devices/{device_type}": {
      "delete": {
        "tags": [
          "patient-devices"
        ],
        "summary": "Unregister Patient Device",
        "description": "Unregister a specific device type from a patient",
        "operationId": "unregister_patient_device_api_patients__patient_id__medical_devices__device_type__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "device_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/patients/medical-devices/table": {
      "get": {
        "tags": [
          "patient-devices"
        ],
        "summary": "Get Patient Devices Table",
        "description": "Get patient medical device registries in table format",
        "operationId": "get_patient_devices_table_api_patients_medical_devices_table_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "columns",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Columns"
            }
          },
          {
            "name": "export_format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Export Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/medical-devices/patient/{mac_address}": {
      "get": {
        "tags": [
          "device-lookup"
        ],
        "summary": "Find Patient By Device Mac",
        "description": "Find which patient a medical device belongs to by MAC address",
        "operationId": "find_patient_by_device_mac_api_medical_devices_patient__mac_address__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mac_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Mac Address"
            }
          },
          {
            "name": "include_patient_info",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Patient Info"
            }
          },
          {
            "name": "include_device_details",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Device Details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/performance/cache/stats": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Cache Statistics",
        "description": "Get Redis cache statistics",
        "operationId": "get_cache_statistics_admin_performance_cache_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Cache Statistics Admin Performance Cache Stats Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/performance/cache/clear": {
      "post": {
        "tags": [
          "performance"
        ],
        "summary": "Clear Cache",
        "description": "Clear cache entries matching pattern",
        "operationId": "clear_cache_admin_performance_cache_clear_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pattern",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "*",
              "title": "Pattern"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Clear Cache Admin Performance Cache Clear Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/performance/indexes/{collection_name}": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Index Usage",
        "description": "Get index usage statistics for a collection",
        "operationId": "get_index_usage_admin_performance_indexes__collection_name__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Index Usage Admin Performance Indexes  Collection Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/performance/slow-queries": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Slow Queries",
        "description": "Get recent slow queries from MongoDB profiler",
        "operationId": "get_slow_queries_admin_performance_slow_queries_get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Slow Queries Admin Performance Slow Queries Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/performance/indexes/recommend": {
      "post": {
        "tags": [
          "performance"
        ],
        "summary": "Recommend Indexes",
        "description": "Get index recommendations based on slow queries",
        "operationId": "recommend_indexes_admin_performance_indexes_recommend_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Recommend Indexes Admin Performance Indexes Recommend Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/performance/database/stats": {
      "get": {
        "tags": [
          "performance"
        ],
        "summary": "Get Database Statistics",
        "description": "Get overall database performance statistics",
        "operationId": "get_database_statistics_admin_performance_database_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Database Statistics Admin Performance Database Stats Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/realtime/events": {
      "get": {
        "tags": [
          "realtime"
        ],
        "summary": "Sse Endpoint",
        "description": "Server-Sent Events endpoint for real-time updates\n\nReturns all system-wide events",
        "operationId": "sse_endpoint_realtime_events_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/realtime/events/patient/{patient_id}": {
      "get": {
        "tags": [
          "realtime"
        ],
        "summary": "Patient Sse Endpoint",
        "description": "Server-Sent Events endpoint for patient-specific updates\n\nReturns events related to a specific patient",
        "operationId": "patient_sse_endpoint_realtime_events_patient__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/realtime/events/hospital/{hospital_id}": {
      "get": {
        "tags": [
          "realtime"
        ],
        "summary": "Hospital Sse Endpoint",
        "description": "Server-Sent Events endpoint for hospital-specific updates\n\nReturns events related to a specific hospital",
        "operationId": "hospital_sse_endpoint_realtime_events_hospital__hospital_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hospital Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/realtime/events/device/{device_type}/{device_id}": {
      "get": {
        "tags": [
          "realtime"
        ],
        "summary": "Device Sse Endpoint",
        "description": "Server-Sent Events endpoint for device-specific updates\n\nReturns events related to a specific device",
        "operationId": "device_sse_endpoint_realtime_events_device__device_type___device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Type"
            }
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/realtime/stats": {
      "get": {
        "tags": [
          "realtime"
        ],
        "summary": "Get Websocket Stats",
        "description": "Get WebSocket connection statistics",
        "operationId": "get_websocket_stats_realtime_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/realtime/test/publish": {
      "post": {
        "tags": [
          "realtime"
        ],
        "summary": "Test Publish Event",
        "description": "Test endpoint to publish events (development only)\n\nExample payload:\n{\n    \"event_type\": \"patient.vitals.update\",\n    \"patient_id\": \"507f1f77bcf86cd799439011\",\n    \"vitals\": {\n        \"blood_pressure\": {\"systolic\": 120, \"diastolic\": 80},\n        \"heart_rate\": 72,\n        \"temperature\": 36.5\n    }\n}",
        "operationId": "test_publish_event_realtime_test_publish_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Event Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/security/audit/events": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Security Events",
        "description": "Get security audit events",
        "operationId": "get_security_events_admin_security_audit_events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Type"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Severity"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/security/audit/summary": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Security Summary",
        "description": "Get security events summary",
        "operationId": "get_security_summary_admin_security_audit_summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/security/alerts/active": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Active Alerts",
        "description": "Get active security alerts",
        "operationId": "get_active_alerts_admin_security_alerts_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/security/alerts/{alert_id}/acknowledge": {
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Acknowledge Alert",
        "description": "Acknowledge a security alert",
        "operationId": "acknowledge_alert_admin_security_alerts__alert_id__acknowledge_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/security/alerts/{alert_id}/resolve": {
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Resolve Alert",
        "description": "Resolve a security alert",
        "operationId": "resolve_alert_admin_security_alerts__alert_id__resolve_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Id"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resolution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/security/rate-limits/{identifier}": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Rate Limit Status",
        "description": "Get rate limit status for an identifier",
        "operationId": "get_rate_limit_status_admin_security_rate_limits__identifier__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Identifier"
            }
          },
          {
            "name": "limit_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(global|user|api_key)$",
              "default": "global",
              "title": "Limit Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/security/rate-limits/{identifier}/reset": {
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Reset Rate Limit",
        "description": "Reset rate limit for an identifier",
        "operationId": "reset_rate_limit_admin_security_rate_limits__identifier__reset_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Identifier"
            }
          },
          {
            "name": "limit_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(global|user|api_key)$",
              "default": "global",
              "title": "Limit Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/security/blacklist/{ip_address}": {
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Add To Blacklist",
        "description": "Add IP address to blacklist",
        "operationId": "add_to_blacklist_admin_security_blacklist__ip_address__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip Address"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Reason for blacklisting",
              "title": "Reason"
            },
            "description": "Reason for blacklisting"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "security"
        ],
        "summary": "Remove From Blacklist",
        "description": "Remove IP address from blacklist",
        "operationId": "remove_from_blacklist_admin_security_blacklist__ip_address__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/security/encryption/generate-api-key": {
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Generate Api Key",
        "description": "Generate new API key",
        "operationId": "generate_api_key_admin_security_encryption_generate_api_key_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Description for the API key",
              "title": "Description"
            },
            "description": "Description for the API key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/security/encryption/rotate-keys": {
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Rotate Encryption Keys",
        "description": "Rotate encryption keys (requires superadmin)",
        "operationId": "rotate_encryption_keys_admin_security_encryption_rotate_keys_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/security/config": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get Security Config",
        "description": "Get current security configuration",
        "operationId": "get_security_config_admin_security_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/analytics/patients/statistics": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Patient Statistics",
        "description": "Get comprehensive patient statistics and analytics",
        "operationId": "get_patient_statistics_admin_analytics_patients_statistics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analysis",
              "title": "Start Date"
            },
            "description": "Start date for analysis"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analysis",
              "title": "End Date"
            },
            "description": "End date for analysis"
          }
        ],
        "responses": {
          "200": {
            "description": "Patient statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/analytics/vitals/{patient_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Vital Signs Analytics",
        "description": "Get vital signs analytics for a patient",
        "operationId": "get_vital_signs_analytics_admin_analytics_vitals__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "vital_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type of vital sign (blood_pressure, heart_rate, temperature, spo2)",
              "title": "Vital Type"
            },
            "description": "Type of vital sign (blood_pressure, heart_rate, temperature, spo2)"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Analysis period (daily, weekly, monthly, quarterly, yearly)",
              "default": "weekly",
              "title": "Period"
            },
            "description": "Analysis period (daily, weekly, monthly, quarterly, yearly)"
          }
        ],
        "responses": {
          "200": {
            "description": "Vital signs analytics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Patient not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/analytics/devices/utilization": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Device Utilization",
        "description": "Get device utilization analytics",
        "operationId": "get_device_utilization_admin_analytics_devices_utilization_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by device type",
              "title": "Device Type"
            },
            "description": "Filter by device type"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Analysis period",
              "default": "monthly",
              "title": "Period"
            },
            "description": "Analysis period"
          }
        ],
        "responses": {
          "200": {
            "description": "Device utilization analytics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/analytics/health-risks/{patient_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Health Risk Predictions",
        "description": "Get health risk predictions for a patient",
        "operationId": "get_health_risk_predictions_admin_analytics_health_risks__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "include_recommendations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include health recommendations",
              "default": true,
              "title": "Include Recommendations"
            },
            "description": "Include health recommendations"
          }
        ],
        "responses": {
          "200": {
            "description": "Health risk predictions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Patient not found"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/analytics/trends/vitals": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Vital Trends",
        "description": "Get vital signs trends analysis\n\n**Required Parameters:**\n- vital_type: Type of vital sign to analyze (heart_rate, blood_pressure, temperature, spo2, respiratory_rate)\n\n**Optional Parameters:**\n- patient_id: Analyze trends for specific patient\n- hospital_id: Filter by hospital\n- days: Number of days to include in analysis (1-365)\n\n**Example Usage:**\n- `/analytics/trends/vitals?vital_type=heart_rate&days=7`\n- `/analytics/trends/vitals?vital_type=blood_pressure&patient_id=123&days=30`",
        "operationId": "get_vital_trends_admin_analytics_trends_vitals_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "vital_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of vital sign (required): heart_rate, blood_pressure, temperature, spo2, respiratory_rate",
              "title": "Vital Type"
            },
            "description": "Type of vital sign (required): heart_rate, blood_pressure, temperature, spo2, respiratory_rate"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific patient ID",
              "title": "Patient Id"
            },
            "description": "Filter by specific patient ID"
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Number of days to analyze",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Vital signs trends retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Missing required parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/analytics/anomalies/detect": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Detect Anomalies",
        "description": "Detect anomalies in vital signs data",
        "operationId": "detect_anomalies_admin_analytics_anomalies_detect_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by patient ID",
              "title": "Patient Id"
            },
            "description": "Filter by patient ID"
          },
          {
            "name": "threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 4.0,
              "minimum": 1.0,
              "description": "Z-score threshold for anomaly detection",
              "default": 2.0,
              "title": "Threshold"
            },
            "description": "Z-score threshold for anomaly detection"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 30,
              "minimum": 1,
              "description": "Number of days to analyze",
              "default": 7,
              "title": "Days"
            },
            "description": "Number of days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Anomalies detected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/analytics/reports/summary/{report_type}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Generate Summary Report",
        "description": "Generate summary analytics reports",
        "operationId": "generate_summary_report_admin_analytics_reports_summary__report_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "report_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Report Type"
            }
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for report",
              "title": "Start Date"
            },
            "description": "Start date for report"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for report",
              "title": "End Date"
            },
            "description": "End date for report"
          }
        ],
        "responses": {
          "200": {
            "description": "Summary report generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Invalid report type"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/analytics/export/{format}": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Export Analytics Data",
        "description": "Export analytics data in various formats",
        "operationId": "export_analytics_data_admin_analytics_export__format__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Format"
            }
          },
          {
            "name": "report_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of report to export",
              "title": "Report Type"
            },
            "description": "Type of report to export"
          },
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for export",
              "title": "Start Date"
            },
            "description": "Start date for export"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for export",
              "title": "End Date"
            },
            "description": "End date for export"
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics data exported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Invalid export format"
          },
          "500": {
            "description": "Internal server error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/visualization/charts/patient-demographics": {
      "get": {
        "tags": [
          "visualization"
        ],
        "summary": "Get Patient Demographics Chart",
        "description": "Get patient demographics data formatted for charts",
        "operationId": "get_patient_demographics_chart_visualization_charts_patient_demographics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "chart_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Chart type (bar, pie, donut)",
              "default": "bar",
              "title": "Chart Type"
            },
            "description": "Chart type (bar, pie, donut)"
          }
        ],
        "responses": {
          "200": {
            "description": "Patient demographics chart data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/visualization/charts/vital-trends/{patient_id}": {
      "get": {
        "tags": [
          "visualization"
        ],
        "summary": "Get Vital Trends Chart",
        "description": "Get vital signs trends formatted for time-series charts",
        "operationId": "get_vital_trends_chart_visualization_charts_vital_trends__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "vital_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of vital sign",
              "title": "Vital Type"
            },
            "description": "Type of vital sign"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 90,
              "minimum": 1,
              "description": "Number of days to display",
              "default": 7,
              "title": "Days"
            },
            "description": "Number of days to display"
          },
          {
            "name": "chart_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Chart type (line, area)",
              "default": "line",
              "title": "Chart Type"
            },
            "description": "Chart type (line, area)"
          }
        ],
        "responses": {
          "200": {
            "description": "Vital signs trend chart data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/visualization/charts/risk-distribution": {
      "get": {
        "tags": [
          "visualization"
        ],
        "summary": "Get Risk Distribution Chart",
        "description": "Get patient risk distribution formatted for charts",
        "operationId": "get_risk_distribution_chart_visualization_charts_risk_distribution_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "chart_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Chart type (pie, donut, bar)",
              "default": "pie",
              "title": "Chart Type"
            },
            "description": "Chart type (pie, donut, bar)"
          }
        ],
        "responses": {
          "200": {
            "description": "Risk distribution chart data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/visualization/charts/device-utilization": {
      "get": {
        "tags": [
          "visualization"
        ],
        "summary": "Get Device Utilization Chart",
        "description": "Get device utilization data formatted for charts",
        "operationId": "get_device_utilization_chart_visualization_charts_device_utilization_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hospital_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by hospital ID",
              "title": "Hospital Id"
            },
            "description": "Filter by hospital ID"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Analysis period",
              "default": "weekly",
              "title": "Period"
            },
            "description": "Analysis period"
          },
          {
            "name": "chart_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Chart type (bar, line, area)",
              "default": "bar",
              "title": "Chart Type"
            },
            "description": "Chart type (bar, line, area)"
          }
        ],
        "responses": {
          "200": {
            "description": "Device utilization chart data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/visualization/charts/anomaly-scatter/{patient_id}": {
      "get": {
        "tags": [
          "visualization"
        ],
        "summary": "Get Anomaly Scatter Chart",
        "description": "Get vital signs anomaly data formatted for scatter plot charts",
        "operationId": "get_anomaly_scatter_chart_visualization_charts_anomaly_scatter__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          },
          {
            "name": "vital_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of vital sign",
              "title": "Vital Type"
            },
            "description": "Type of vital sign"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 90,
              "minimum": 1,
              "description": "Number of days to analyze",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Anomaly scatter plot data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/visualization/charts/risk-gauge/{patient_id}": {
      "get": {
        "tags": [
          "visualization"
        ],
        "summary": "Get Risk Gauge Chart",
        "description": "Get patient risk score formatted for gauge chart",
        "operationId": "get_risk_gauge_chart_visualization_charts_risk_gauge__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Patient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Risk gauge chart data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/visualization/charts/system-overview": {
      "get": {
        "tags": [
          "visualization"
        ],
        "summary": "Get System Overview Charts",
        "description": "Get system overview data for dashboard",
        "operationId": "get_system_overview_charts_visualization_charts_system_overview_get",
        "responses": {
          "200": {
            "description": "System overview dashboard data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/reports/templates": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Create Report Template",
        "description": "Create a new report template",
        "operationId": "create_report_template_admin_reports_templates_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Report template created successfully"
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "List Report Templates",
        "description": "List all report templates",
        "operationId": "list_report_templates_admin_reports_templates_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show only active templates",
              "default": true,
              "title": "Active Only"
            },
            "description": "Show only active templates"
          }
        ],
        "responses": {
          "200": {
            "description": "Report templates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/reports/templates/{template_id}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Report Template",
        "description": "Get a specific report template",
        "operationId": "get_report_template_admin_reports_templates__template_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report template retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "reports"
        ],
        "summary": "Update Report Template",
        "description": "Update an existing report template",
        "operationId": "update_report_template_admin_reports_templates__template_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reports"
        ],
        "summary": "Delete Report Template",
        "description": "Delete a report template",
        "operationId": "delete_report_template_admin_reports_templates__template_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report template deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/reports/generate/{template_id}": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Generate Report",
        "description": "Generate a report immediately",
        "operationId": "generate_report_admin_reports_generate__template_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "202": {
            "description": "Report generation started"
          },
          "404": {
            "description": "Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/reports/jobs": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "List Report Jobs",
        "description": "List report generation jobs",
        "operationId": "list_report_jobs_admin_reports_jobs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by template ID",
              "title": "Template Id"
            },
            "description": "Filter by template ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of jobs to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of jobs to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Report jobs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/reports/jobs/{job_id}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Report Job",
        "description": "Get a specific report job",
        "operationId": "get_report_job_admin_reports_jobs__job_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report job retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/reports/jobs/{job_id}/output": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Report Output",
        "description": "Get the output of a completed report job",
        "operationId": "get_report_output_admin_reports_jobs__job_id__output_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report output retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job or output not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/reports/types": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Get Report Types",
        "description": "Get available report types, formats, and frequencies",
        "operationId": "get_report_types_admin_reports_types_get",
        "responses": {
          "200": {
            "description": "Report types retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/reports/schedule/check": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Check Scheduled Reports",
        "description": "Manually trigger scheduled report check (for testing)",
        "operationId": "check_scheduled_reports_admin_reports_schedule_check_post",
        "responses": {
          "200": {
            "description": "Scheduled reports checked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__models__base__SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/audit/hash/logs": {
      "get": {
        "tags": [
          "hash-audit"
        ],
        "summary": "Query Audit Logs",
        "description": "Query audit logs with comprehensive filtering options",
        "operationId": "query_audit_logs_api_v1_audit_hash_logs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (ISO format)",
              "title": "Start Date"
            },
            "description": "Start date (ISO format)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (ISO format)",
              "title": "End Date"
            },
            "description": "End date (ISO format)"
          },
          {
            "name": "operation_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated operation types",
              "title": "Operation Types"
            },
            "description": "Comma-separated operation types"
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated status values",
              "title": "Status Filter"
            },
            "description": "Comma-separated status values"
          },
          {
            "name": "severity_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated severity levels",
              "title": "Severity Filter"
            },
            "description": "Comma-separated severity levels"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID",
              "title": "User Id"
            },
            "description": "User ID"
          },
          {
            "name": "fhir_resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "FHIR resource type",
              "title": "Fhir Resource Type"
            },
            "description": "FHIR resource type"
          },
          {
            "name": "fhir_resource_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "FHIR resource ID",
              "title": "Fhir Resource Id"
            },
            "description": "FHIR resource ID"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient ID",
              "title": "Patient Id"
            },
            "description": "Patient ID"
          },
          {
            "name": "blockchain_hash",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Blockchain hash",
              "title": "Blockchain Hash"
            },
            "description": "Blockchain hash"
          },
          {
            "name": "has_errors_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show only error logs",
              "default": false,
              "title": "Has Errors Only"
            },
            "description": "Show only error logs"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Limit results",
              "default": 100,
              "title": "Limit"
            },
            "description": "Limit results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset for pagination",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset for pagination"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort field",
              "default": "timestamp",
              "title": "Sort By"
            },
            "description": "Sort field"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Sort order",
              "default": -1,
              "title": "Sort Order"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/hash/statistics": {
      "get": {
        "tags": [
          "hash-audit"
        ],
        "summary": "Get Audit Statistics",
        "description": "Get comprehensive audit log statistics and analytics",
        "operationId": "get_audit_statistics_api_v1_audit_hash_statistics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for statistics",
              "title": "Start Date"
            },
            "description": "Start date for statistics"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for statistics",
              "title": "End Date"
            },
            "description": "End date for statistics"
          },
          {
            "name": "group_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Group statistics by field",
              "default": "operation_type",
              "title": "Group By"
            },
            "description": "Group statistics by field"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/hash/users/{user_id}/trail": {
      "get": {
        "tags": [
          "hash-audit"
        ],
        "summary": "Get User Audit Trail",
        "description": "Get comprehensive audit trail for a specific user",
        "operationId": "get_user_audit_trail_api_v1_audit_hash_users__user_id__trail_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User ID to get audit trail for",
              "title": "User Id"
            },
            "description": "User ID to get audit trail for"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for trail",
              "title": "Start Date"
            },
            "description": "Start date for trail"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for trail",
              "title": "End Date"
            },
            "description": "End date for trail"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of results",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/hash/resources/{resource_type}/{resource_id}/trail": {
      "get": {
        "tags": [
          "hash-audit"
        ],
        "summary": "Get Resource Audit Trail",
        "description": "Get complete audit trail for a specific FHIR resource",
        "operationId": "get_resource_audit_trail_api_v1_audit_hash_resources__resource_type___resource_id__trail_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resource_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "FHIR resource type",
              "title": "Resource Type"
            },
            "description": "FHIR resource type"
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "FHIR resource ID",
              "title": "Resource Id"
            },
            "description": "FHIR resource ID"
          },
          {
            "name": "include_verification_history",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include verification history",
              "default": true,
              "title": "Include Verification History"
            },
            "description": "Include verification history"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/hash/cleanup": {
      "post": {
        "tags": [
          "hash-audit"
        ],
        "summary": "Cleanup Old Audit Logs",
        "description": "Clean up old audit logs according to retention policy",
        "operationId": "cleanup_audit_logs_api_v1_audit_hash_cleanup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CleanupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/audit/hash/recent": {
      "get": {
        "tags": [
          "hash-audit"
        ],
        "summary": "Get Recent Audit Activity",
        "description": "Get recent audit activity for monitoring and alerting",
        "operationId": "get_recent_audit_activity_api_v1_audit_hash_recent_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "minutes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1440,
              "minimum": 1,
              "description": "Look back time in minutes",
              "default": 60,
              "title": "Minutes"
            },
            "description": "Look back time in minutes"
          },
          {
            "name": "operation_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by operation types",
              "title": "Operation Types"
            },
            "description": "Filter by operation types"
          },
          {
            "name": "severity_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by severity levels",
              "title": "Severity Filter"
            },
            "description": "Filter by severity levels"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Maximum results",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/hash/health": {
      "get": {
        "tags": [
          "hash-audit"
        ],
        "summary": "Get Audit System Health",
        "description": "Get health status of the audit logging system",
        "operationId": "get_audit_system_health_api_v1_audit_hash_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/audit/hash/export": {
      "get": {
        "tags": [
          "hash-audit"
        ],
        "summary": "Export Audit Logs",
        "description": "Export audit logs in various formats for compliance and analysis",
        "operationId": "export_audit_logs_api_v1_audit_hash_export_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Export start date",
              "title": "Start Date"
            },
            "description": "Export start date"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Export end date",
              "title": "End Date"
            },
            "description": "Export end date"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Export format: json, csv",
              "default": "json",
              "title": "Format"
            },
            "description": "Export format: json, csv"
          },
          {
            "name": "operation_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by operation types",
              "title": "Operation Types"
            },
            "description": "Filter by operation types"
          },
          {
            "name": "max_records",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100000,
              "minimum": 1,
              "description": "Maximum records to export",
              "default": 10000,
              "title": "Max Records"
            },
            "description": "Maximum records to export"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/metadata": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "FHIR R5 Capability Statement",
        "description": "Get FHIR R5 Capability Statement",
        "operationId": "get_capability_statement_fhir_R5_metadata_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/Patient": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create Patient",
        "description": "Create a new FHIR R5 Patient resource",
        "operationId": "create_patient_fhir_R5_Patient_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Patient Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search Patients",
        "description": "Search FHIR R5 Patient resources",
        "operationId": "search_patients_fhir_R5_Patient_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient identifier",
              "title": "Identifier"
            },
            "description": "Patient identifier"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient name",
              "title": "Name"
            },
            "description": "Patient name"
          },
          {
            "name": "birthdate",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Birth date",
              "title": "Birthdate"
            },
            "description": "Birth date"
          },
          {
            "name": "gender",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Gender",
              "title": "Gender"
            },
            "description": "Gender"
          },
          {
            "name": "organization",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Managing organization",
              "title": "Organization"
            },
            "description": "Managing organization"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Patient/{patient_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get Patient by ID",
        "description": "Get a FHIR R5 Patient resource by ID",
        "operationId": "get_patient_fhir_R5_Patient__patient_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Patient ID",
              "title": "Patient Id"
            },
            "description": "Patient ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update Patient",
        "description": "Update a FHIR R5 Patient resource",
        "operationId": "update_patient_fhir_R5_Patient__patient_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Patient ID",
              "title": "Patient Id"
            },
            "description": "Patient ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Patient Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete Patient",
        "description": "Delete a FHIR R5 Patient resource",
        "operationId": "delete_patient_fhir_R5_Patient__patient_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Patient ID",
              "title": "Patient Id"
            },
            "description": "Patient ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Observation": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create Observation",
        "description": "Create a new FHIR R5 Observation resource",
        "operationId": "create_observation_fhir_R5_Observation_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Observation Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search Observations",
        "description": "Search FHIR R5 Observation resources",
        "operationId": "search_observations_fhir_R5_Observation_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Observation code",
              "title": "Code"
            },
            "description": "Observation code"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Observation category",
              "title": "Category"
            },
            "description": "Observation category"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date range",
              "title": "Date"
            },
            "description": "Date range"
          },
          {
            "name": "device",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Device reference",
              "title": "Device"
            },
            "description": "Device reference"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Observation status",
              "title": "Status"
            },
            "description": "Observation status"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Observation/{observation_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get Observation by ID",
        "description": "Get a FHIR R5 Observation resource by ID",
        "operationId": "get_observation_fhir_R5_Observation__observation_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Observation ID",
              "title": "Observation Id"
            },
            "description": "Observation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update Observation",
        "description": "Update a FHIR R5 Observation resource",
        "operationId": "update_observation_fhir_R5_Observation__observation_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Observation ID",
              "title": "Observation Id"
            },
            "description": "Observation ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Observation Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete Observation",
        "description": "Delete a FHIR R5 Observation resource",
        "operationId": "delete_observation_fhir_R5_Observation__observation_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Observation ID",
              "title": "Observation Id"
            },
            "description": "Observation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Device": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create Device",
        "description": "Create a new FHIR R5 Device resource",
        "operationId": "create_device_fhir_R5_Device_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Device Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search Devices",
        "description": "Search FHIR R5 Device resources",
        "operationId": "search_devices_fhir_R5_Device_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Device identifier",
              "title": "Identifier"
            },
            "description": "Device identifier"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Device type",
              "title": "Type"
            },
            "description": "Device type"
          },
          {
            "name": "manufacturer",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Manufacturer",
              "title": "Manufacturer"
            },
            "description": "Manufacturer"
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Model number",
              "title": "Model"
            },
            "description": "Model number"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Device status",
              "title": "Status"
            },
            "description": "Device status"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Device/{device_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get Device by ID",
        "description": "Get a FHIR R5 Device resource by ID",
        "operationId": "get_device_fhir_R5_Device__device_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device ID",
              "title": "Device Id"
            },
            "description": "Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update Device",
        "description": "Update a FHIR R5 Device resource",
        "operationId": "update_device_fhir_R5_Device__device_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device ID",
              "title": "Device Id"
            },
            "description": "Device ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Device Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete Device",
        "description": "Delete a FHIR R5 Device resource",
        "operationId": "delete_device_fhir_R5_Device__device_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device ID",
              "title": "Device Id"
            },
            "description": "Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Organization": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create Organization",
        "description": "Create a new FHIR R5 Organization resource",
        "operationId": "create_organization_fhir_R5_Organization_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Organization Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search Organizations",
        "description": "Search FHIR R5 Organization resources",
        "operationId": "search_organizations_fhir_R5_Organization_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Organization identifier",
              "title": "Identifier"
            },
            "description": "Organization identifier"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Organization name",
              "title": "Name"
            },
            "description": "Organization name"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Organization type",
              "title": "Type"
            },
            "description": "Organization type"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Organization/{organization_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get Organization by ID",
        "description": "Get a FHIR R5 Organization resource by ID",
        "operationId": "get_organization_fhir_R5_Organization__organization_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Organization ID",
              "title": "Organization Id"
            },
            "description": "Organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update Organization",
        "description": "Update a FHIR R5 Organization resource",
        "operationId": "update_organization_fhir_R5_Organization__organization_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Organization ID",
              "title": "Organization Id"
            },
            "description": "Organization ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Organization Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Observation/from-mqtt": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create Observation from AVA4 MQTT",
        "description": "Create FHIR R5 Observations from AVA4 MQTT data",
        "operationId": "create_observation_from_mqtt_fhir_R5_Observation_from_mqtt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_observation_from_mqtt_fhir_R5_Observation_from_mqtt_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/MedicationStatement": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create MedicationStatement",
        "description": "Create a FHIR R5 MedicationStatement resource",
        "operationId": "create_medication_statement_fhir_R5_MedicationStatement_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Medication Statement Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search MedicationStatements",
        "description": "Search FHIR R5 MedicationStatement resources",
        "operationId": "search_medication_statements_fhir_R5_MedicationStatement_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "MedicationStatement status",
              "title": "Status"
            },
            "description": "MedicationStatement status"
          },
          {
            "name": "medication",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Medication reference",
              "title": "Medication"
            },
            "description": "Medication reference"
          },
          {
            "name": "effective",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date range when medication was taken",
              "title": "Effective"
            },
            "description": "Date range when medication was taken"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Information source",
              "title": "Source"
            },
            "description": "Information source"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/MedicationStatement/{medication_statement_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get MedicationStatement by ID",
        "description": "Get a FHIR R5 MedicationStatement by ID",
        "operationId": "get_medication_statement_fhir_R5_MedicationStatement__medication_statement_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "medication_statement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "MedicationStatement ID",
              "title": "Medication Statement Id"
            },
            "description": "MedicationStatement ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update MedicationStatement",
        "description": "Update a FHIR R5 MedicationStatement",
        "operationId": "update_medication_statement_fhir_R5_MedicationStatement__medication_statement_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "medication_statement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "MedicationStatement ID",
              "title": "Medication Statement Id"
            },
            "description": "MedicationStatement ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Medication Statement Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete MedicationStatement",
        "description": "Delete a FHIR R5 MedicationStatement",
        "operationId": "delete_medication_statement_fhir_R5_MedicationStatement__medication_statement_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "medication_statement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "MedicationStatement ID",
              "title": "Medication Statement Id"
            },
            "description": "MedicationStatement ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/DiagnosticReport": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create DiagnosticReport",
        "description": "Create a FHIR R5 DiagnosticReport resource",
        "operationId": "create_diagnostic_report_fhir_R5_DiagnosticReport_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Diagnostic Report Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search DiagnosticReports",
        "description": "Search FHIR R5 DiagnosticReport resources",
        "operationId": "search_diagnostic_reports_fhir_R5_DiagnosticReport_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Report category",
              "title": "Category"
            },
            "description": "Report category"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Report code",
              "title": "Code"
            },
            "description": "Report code"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date range",
              "title": "Date"
            },
            "description": "Date range"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Report status",
              "title": "Status"
            },
            "description": "Report status"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/DiagnosticReport/{diagnostic_report_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get DiagnosticReport by ID",
        "description": "Get a FHIR R5 DiagnosticReport by ID",
        "operationId": "get_diagnostic_report_fhir_R5_DiagnosticReport__diagnostic_report_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "diagnostic_report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "DiagnosticReport ID",
              "title": "Diagnostic Report Id"
            },
            "description": "DiagnosticReport ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update DiagnosticReport",
        "description": "Update a FHIR R5 DiagnosticReport",
        "operationId": "update_diagnostic_report_fhir_R5_DiagnosticReport__diagnostic_report_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "diagnostic_report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "DiagnosticReport ID",
              "title": "Diagnostic Report Id"
            },
            "description": "DiagnosticReport ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Diagnostic Report Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete DiagnosticReport",
        "description": "Delete a FHIR R5 DiagnosticReport",
        "operationId": "delete_diagnostic_report_fhir_R5_DiagnosticReport__diagnostic_report_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "diagnostic_report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "DiagnosticReport ID",
              "title": "Diagnostic Report Id"
            },
            "description": "DiagnosticReport ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/DocumentReference": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create DocumentReference",
        "description": "Create a FHIR R5 DocumentReference resource",
        "operationId": "create_document_reference_fhir_R5_DocumentReference_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Document Reference Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search DocumentReferences",
        "description": "Search FHIR R5 DocumentReference resources",
        "operationId": "search_document_references_fhir_R5_DocumentReference_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Document type",
              "title": "Type"
            },
            "description": "Document type"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Document category",
              "title": "Category"
            },
            "description": "Document category"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date range",
              "title": "Date"
            },
            "description": "Date range"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Document status",
              "title": "Status"
            },
            "description": "Document status"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/DocumentReference/{document_reference_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get DocumentReference by ID",
        "description": "Get a FHIR R5 DocumentReference by ID",
        "operationId": "get_document_reference_fhir_R5_DocumentReference__document_reference_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "document_reference_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "DocumentReference ID",
              "title": "Document Reference Id"
            },
            "description": "DocumentReference ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update DocumentReference",
        "description": "Update a FHIR R5 DocumentReference",
        "operationId": "update_document_reference_fhir_R5_DocumentReference__document_reference_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "document_reference_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "DocumentReference ID",
              "title": "Document Reference Id"
            },
            "description": "DocumentReference ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Document Reference Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete DocumentReference",
        "description": "Delete a FHIR R5 DocumentReference",
        "operationId": "delete_document_reference_fhir_R5_DocumentReference__document_reference_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "document_reference_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "DocumentReference ID",
              "title": "Document Reference Id"
            },
            "description": "DocumentReference ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/migration/amy/medication-history": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Migrate AMY Medication History",
        "description": "Migrate AMY medication history to FHIR R5 MedicationStatement resources",
        "operationId": "migrate_amy_medication_history_fhir_R5_migration_amy_medication_history_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Patient Id",
                "description": "Patient ObjectId from AMY"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/migration/amy/allergy-history": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Migrate AMY Allergy History",
        "description": "Migrate AMY allergy history to FHIR R5 AllergyIntolerance resources",
        "operationId": "migrate_amy_allergy_history_fhir_R5_migration_amy_allergy_history_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Patient Id",
                "description": "Patient ObjectId from AMY"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/migration/amy/body-data": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Migrate AMY Body Data",
        "description": "Migrate AMY body data to FHIR R5 Observation resources",
        "operationId": "migrate_amy_body_data_fhir_R5_migration_amy_body_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Patient Id",
                "description": "Patient ObjectId from AMY"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/analytics/summary": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "FHIR R5 Resources Summary",
        "description": "Get summary analytics of all FHIR R5 resources",
        "operationId": "get_fhir_summary_fhir_R5_analytics_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/Goal": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create Goal",
        "description": "Create a new FHIR R5 Goal resource",
        "operationId": "create_goal_fhir_R5_Goal_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Goal Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search Goals",
        "description": "Search FHIR R5 Goal resources",
        "operationId": "search_goals_fhir_R5_Goal_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Goal category",
              "title": "Category"
            },
            "description": "Goal category"
          },
          {
            "name": "lifecycle-status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Goal lifecycle status",
              "title": "Lifecycle-Status"
            },
            "description": "Goal lifecycle status"
          },
          {
            "name": "achievement-status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Goal achievement status",
              "title": "Achievement-Status"
            },
            "description": "Goal achievement status"
          },
          {
            "name": "start-date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Goal start date",
              "title": "Start-Date"
            },
            "description": "Goal start date"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Goal/{goal_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get Goal by ID",
        "description": "Get a FHIR R5 Goal resource by ID",
        "operationId": "get_goal_fhir_R5_Goal__goal_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Goal ID",
              "title": "Goal Id"
            },
            "description": "Goal ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update Goal",
        "description": "Update a FHIR R5 Goal resource",
        "operationId": "update_goal_fhir_R5_Goal__goal_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Goal ID",
              "title": "Goal Id"
            },
            "description": "Goal ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Goal Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete Goal",
        "description": "Delete a FHIR R5 Goal resource",
        "operationId": "delete_goal_fhir_R5_Goal__goal_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Goal ID",
              "title": "Goal Id"
            },
            "description": "Goal ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/RelatedPerson": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create RelatedPerson",
        "description": "Create a new FHIR R5 RelatedPerson resource",
        "operationId": "create_related_person_fhir_R5_RelatedPerson_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Related Person Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search RelatedPersons",
        "description": "Search FHIR R5 RelatedPerson resources",
        "operationId": "search_related_persons_fhir_R5_RelatedPerson_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "relationship",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Relationship type",
              "title": "Relationship"
            },
            "description": "Relationship type"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Related person name",
              "title": "Name"
            },
            "description": "Related person name"
          },
          {
            "name": "telecom",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Contact information",
              "title": "Telecom"
            },
            "description": "Contact information"
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Active status",
              "title": "Active"
            },
            "description": "Active status"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/RelatedPerson/{related_person_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get RelatedPerson by ID",
        "description": "Get a FHIR R5 RelatedPerson resource by ID",
        "operationId": "get_related_person_fhir_R5_RelatedPerson__related_person_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "related_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "RelatedPerson ID",
              "title": "Related Person Id"
            },
            "description": "RelatedPerson ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update RelatedPerson",
        "description": "Update a FHIR R5 RelatedPerson resource",
        "operationId": "update_related_person_fhir_R5_RelatedPerson__related_person_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "related_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "RelatedPerson ID",
              "title": "Related Person Id"
            },
            "description": "RelatedPerson ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Related Person Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete RelatedPerson",
        "description": "Delete a FHIR R5 RelatedPerson resource",
        "operationId": "delete_related_person_fhir_R5_RelatedPerson__related_person_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "related_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "RelatedPerson ID",
              "title": "Related Person Id"
            },
            "description": "RelatedPerson ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Flag": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create Flag",
        "description": "Create a new FHIR R5 Flag resource",
        "operationId": "create_flag_fhir_R5_Flag_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Flag Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search Flags",
        "description": "Search FHIR R5 Flag resources",
        "operationId": "search_flags_fhir_R5_Flag_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Flag category",
              "title": "Category"
            },
            "description": "Flag category"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Flag code",
              "title": "Code"
            },
            "description": "Flag code"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Flag status",
              "title": "Status"
            },
            "description": "Flag status"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date range",
              "title": "Date"
            },
            "description": "Date range"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Flag/{flag_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get Flag by ID",
        "description": "Get a FHIR R5 Flag resource by ID",
        "operationId": "get_flag_fhir_R5_Flag__flag_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "flag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Flag ID",
              "title": "Flag Id"
            },
            "description": "Flag ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update Flag",
        "description": "Update a FHIR R5 Flag resource",
        "operationId": "update_flag_fhir_R5_Flag__flag_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "flag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Flag ID",
              "title": "Flag Id"
            },
            "description": "Flag ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Flag Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete Flag",
        "description": "Delete a FHIR R5 Flag resource",
        "operationId": "delete_flag_fhir_R5_Flag__flag_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "flag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Flag ID",
              "title": "Flag Id"
            },
            "description": "Flag ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/RiskAssessment": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create RiskAssessment",
        "description": "Create a new FHIR R5 RiskAssessment resource",
        "operationId": "create_risk_assessment_fhir_R5_RiskAssessment_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Risk Assessment Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search RiskAssessments",
        "description": "Search FHIR R5 RiskAssessment resources",
        "operationId": "search_risk_assessments_fhir_R5_RiskAssessment_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Assessment method",
              "title": "Method"
            },
            "description": "Assessment method"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Assessment code",
              "title": "Code"
            },
            "description": "Assessment code"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Assessment status",
              "title": "Status"
            },
            "description": "Assessment status"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date range",
              "title": "Date"
            },
            "description": "Date range"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/RiskAssessment/{risk_assessment_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get RiskAssessment by ID",
        "description": "Get a FHIR R5 RiskAssessment resource by ID",
        "operationId": "get_risk_assessment_fhir_R5_RiskAssessment__risk_assessment_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_assessment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "RiskAssessment ID",
              "title": "Risk Assessment Id"
            },
            "description": "RiskAssessment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update RiskAssessment",
        "description": "Update a FHIR R5 RiskAssessment resource",
        "operationId": "update_risk_assessment_fhir_R5_RiskAssessment__risk_assessment_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_assessment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "RiskAssessment ID",
              "title": "Risk Assessment Id"
            },
            "description": "RiskAssessment ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Risk Assessment Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete RiskAssessment",
        "description": "Delete a FHIR R5 RiskAssessment resource",
        "operationId": "delete_risk_assessment_fhir_R5_RiskAssessment__risk_assessment_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_assessment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "RiskAssessment ID",
              "title": "Risk Assessment Id"
            },
            "description": "RiskAssessment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/ServiceRequest": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create ServiceRequest",
        "description": "Create a new FHIR R5 ServiceRequest resource",
        "operationId": "create_service_request_fhir_R5_ServiceRequest_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Service Request Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search ServiceRequests",
        "description": "Search FHIR R5 ServiceRequest resources",
        "operationId": "search_service_requests_fhir_R5_ServiceRequest_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Service category",
              "title": "Category"
            },
            "description": "Service category"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Service code",
              "title": "Code"
            },
            "description": "Service code"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Request status",
              "title": "Status"
            },
            "description": "Request status"
          },
          {
            "name": "intent",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Request intent",
              "title": "Intent"
            },
            "description": "Request intent"
          },
          {
            "name": "authored",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date authored",
              "title": "Authored"
            },
            "description": "Date authored"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/ServiceRequest/{service_request_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get ServiceRequest by ID",
        "description": "Get a FHIR R5 ServiceRequest resource by ID",
        "operationId": "get_service_request_fhir_R5_ServiceRequest__service_request_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ServiceRequest ID",
              "title": "Service Request Id"
            },
            "description": "ServiceRequest ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update ServiceRequest",
        "description": "Update a FHIR R5 ServiceRequest resource",
        "operationId": "update_service_request_fhir_R5_ServiceRequest__service_request_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ServiceRequest ID",
              "title": "Service Request Id"
            },
            "description": "ServiceRequest ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Service Request Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete ServiceRequest",
        "description": "Delete a FHIR R5 ServiceRequest resource",
        "operationId": "delete_service_request_fhir_R5_ServiceRequest__service_request_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ServiceRequest ID",
              "title": "Service Request Id"
            },
            "description": "ServiceRequest ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/CarePlan": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create CarePlan",
        "description": "Create a new FHIR R5 CarePlan resource",
        "operationId": "create_care_plan_fhir_R5_CarePlan_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Care Plan Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search CarePlans",
        "description": "Search FHIR R5 CarePlan resources",
        "operationId": "search_care_plans_fhir_R5_CarePlan_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Care plan category",
              "title": "Category"
            },
            "description": "Care plan category"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Care plan status",
              "title": "Status"
            },
            "description": "Care plan status"
          },
          {
            "name": "intent",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Care plan intent",
              "title": "Intent"
            },
            "description": "Care plan intent"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date range",
              "title": "Date"
            },
            "description": "Date range"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/CarePlan/{care_plan_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get CarePlan by ID",
        "description": "Get a FHIR R5 CarePlan resource by ID",
        "operationId": "get_care_plan_fhir_R5_CarePlan__care_plan_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "care_plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CarePlan ID",
              "title": "Care Plan Id"
            },
            "description": "CarePlan ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update CarePlan",
        "description": "Update a FHIR R5 CarePlan resource",
        "operationId": "update_care_plan_fhir_R5_CarePlan__care_plan_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "care_plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CarePlan ID",
              "title": "Care Plan Id"
            },
            "description": "CarePlan ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Care Plan Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete CarePlan",
        "description": "Delete a FHIR R5 CarePlan resource",
        "operationId": "delete_care_plan_fhir_R5_CarePlan__care_plan_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "care_plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CarePlan ID",
              "title": "Care Plan Id"
            },
            "description": "CarePlan ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Specimen": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Create Specimen",
        "description": "Create a new FHIR R5 Specimen resource",
        "operationId": "create_specimen_fhir_R5_Specimen_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Specimen Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Search Specimens",
        "description": "Search FHIR R5 Specimen resources",
        "operationId": "search_specimens_fhir_R5_Specimen_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Patient reference",
              "title": "Patient"
            },
            "description": "Patient reference"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specimen type",
              "title": "Type"
            },
            "description": "Specimen type"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specimen status",
              "title": "Status"
            },
            "description": "Specimen status"
          },
          {
            "name": "collected",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Collection date",
              "title": "Collected"
            },
            "description": "Collection date"
          },
          {
            "name": "accession",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Accession identifier",
              "title": "Accession"
            },
            "description": "Accession identifier"
          },
          {
            "name": "_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results",
              "default": 10,
              "title": " Count"
            },
            "description": "Number of results"
          },
          {
            "name": "_offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search offset",
              "default": 0,
              "title": " Offset"
            },
            "description": "Search offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/Specimen/{specimen_id}": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get Specimen by ID",
        "description": "Get a FHIR R5 Specimen resource by ID",
        "operationId": "get_specimen_fhir_R5_Specimen__specimen_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specimen_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specimen ID",
              "title": "Specimen Id"
            },
            "description": "Specimen ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Update Specimen",
        "description": "Update a FHIR R5 Specimen resource",
        "operationId": "update_specimen_fhir_R5_Specimen__specimen_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specimen_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specimen ID",
              "title": "Specimen Id"
            },
            "description": "Specimen ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Specimen Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Delete Specimen",
        "description": "Delete a FHIR R5 Specimen resource",
        "operationId": "delete_specimen_fhir_R5_Specimen__specimen_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "specimen_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specimen ID",
              "title": "Specimen Id"
            },
            "description": "Specimen ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/migration/amy/comprehensive-patient": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Comprehensive AMY Patient Migration",
        "description": "Comprehensive migration of AMY patient data to all relevant FHIR R5 resources",
        "operationId": "migrate_amy_comprehensive_patient_fhir_R5_migration_amy_comprehensive_patient_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Patient Id",
                "description": "Patient ObjectId from AMY"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/migration/amy/patient-goals": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Migrate AMY Patient Goals",
        "description": "Migrate AMY patient goal data to FHIR Goal resources",
        "operationId": "migrate_amy_patient_goals_fhir_R5_migration_amy_patient_goals_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Patient Id",
                "description": "Patient ObjectId from AMY"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/migration/amy/emergency-contacts": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Migrate AMY Emergency Contacts",
        "description": "Migrate AMY emergency contact data to FHIR RelatedPerson resources",
        "operationId": "migrate_amy_emergency_contacts_fhir_R5_migration_amy_emergency_contacts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Patient Id",
                "description": "Patient ObjectId from AMY"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/migration/amy/patient-alerts": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Migrate AMY Patient Alerts",
        "description": "Migrate AMY patient alert data to FHIR Flag resources",
        "operationId": "migrate_amy_patient_alerts_fhir_R5_migration_amy_patient_alerts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Patient Id",
                "description": "Patient ObjectId from AMY"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/migration/amy/patient-devices": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Migrate AMY Patient Devices",
        "description": "Migrate AMY patient device data to FHIR Device resources",
        "operationId": "migrate_amy_patient_devices_fhir_R5_migration_amy_patient_devices_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Patient Id",
                "description": "Patient ObjectId from AMY"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/{resource_type}/{resource_id}/$verify": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Verify Resource Blockchain Hash",
        "description": "Verify the blockchain hash integrity of a specific FHIR resource",
        "operationId": "verify_resource_blockchain_hash_fhir_R5__resource_type___resource_id___verify_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resource_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "FHIR resource type",
              "title": "Resource Type"
            },
            "description": "FHIR resource type"
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Resource ID",
              "title": "Resource Id"
            },
            "description": "Resource ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/{resource_type}/$verify-batch": {
      "post": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Verify Batch Resource Blockchain Hashes",
        "description": "Verify the blockchain hash integrity of multiple FHIR resources",
        "operationId": "verify_batch_blockchain_hashes_fhir_R5__resource_type___verify_batch_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resource_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "FHIR resource type",
              "title": "Resource Type"
            },
            "description": "FHIR resource type"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of resource IDs to verify",
                "title": "Resource Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/R5/blockchain/$chain-info": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get Blockchain Chain Information",
        "description": "Get comprehensive information about the FHIR blockchain hash chain",
        "operationId": "get_blockchain_chain_info_fhir_R5_blockchain__chain_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/blockchain/$chain-verify": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Verify Blockchain Chain Integrity",
        "description": "Verify the integrity of the entire blockchain hash chain",
        "operationId": "verify_blockchain_chain_integrity_fhir_R5_blockchain__chain_verify_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/blockchain/$chain-export": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Export Blockchain Chain",
        "description": "Export the complete blockchain hash chain for backup or analysis",
        "operationId": "export_blockchain_chain_fhir_R5_blockchain__chain_export_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fhir/R5/blockchain/$statistics": {
      "get": {
        "tags": [
          "fhir-r5"
        ],
        "summary": "Get Blockchain Statistics",
        "description": "Get comprehensive blockchain and FHIR resource statistics",
        "operationId": "get_blockchain_statistics_fhir_R5_blockchain__statistics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_resource_details",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include detailed per-resource statistics",
              "default": false,
              "title": "Include Resource Details"
            },
            "description": "Include detailed per-resource statistics"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Health check successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Service is healthy",
                  "data": {
                    "status": "healthy",
                    "mongodb": "connected",
                    "version": "1.0.0",
                    "environment": "production",
                    "active_alerts": 0,
                    "alert_summary": {
                      "total_active": 0,
                      "by_level": {
                        "low": 0,
                        "medium": 0,
                        "high": 0,
                        "critical": 0
                      },
                      "total_historical": 0,
                      "last_24h": 0
                    }
                  },
                  "request_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error_count": 1,
                  "errors": [
                    {
                      "error_code": "SERVICE_UNAVAILABLE",
                      "error_type": "system_error",
                      "message": "MongoDB connection is unhealthy",
                      "suggestion": "Please try again later"
                    }
                  ],
                  "request_id": "b2c3d4e5-f6g7-8901-bcde-f23456789012",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "API information and endpoints",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "My FirstCare Opera Panel API",
                  "data": {
                    "version": "1.0.0",
                    "docs": "/docs",
                    "health": "/health",
                    "endpoints": {
                      "authentication": "/auth",
                      "device_mapping": "/admin/device-mapping",
                      "admin": "/admin",
                      "ava4": "/ava4",
                      "kati": "/kati",
                      "qube_vital": "/qube-vital",
                      "patient_devices": "/api/patients",
                      "device_lookup": "/api/medical-devices"
                    }
                  },
                  "request_id": "c3d4e5f6-g7h8-9012-cdef-345678901234",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          }
        }
      }
    },
    "/test-schema": {
      "get": {
        "summary": "Test Schema Endpoint",
        "description": "Test endpoint to force registration of response models in OpenAPI schema",
        "operationId": "test_schema_endpoint_test_schema_get",
        "responses": {
          "200": {
            "description": "Schema test endpoint response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__utils__error_definitions__SuccessResponse"
                },
                "example": {
                  "success": true,
                  "message": "Schema test endpoint - this forces FastAPI to register SuccessResponse in OpenAPI",
                  "data": {
                    "schema_registered": true
                  },
                  "request_id": "test-schema-endpoint",
                  "timestamp": "2025-07-07T07:08:07.633870Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/recent-medical-data": {
      "get": {
        "tags": [
          "medical-monitor"
        ],
        "summary": "Get Recent Medical Data",
        "description": "Get recent medical data from the medical_data collection with AP55 batch vital signs support",
        "operationId": "get_recent_medical_data",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            },
            "description": "Number of records to return"
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by device ID"
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by patient ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Recent medical data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "recent_medical_data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "device_id": {
                                "type": "string"
                              },
                              "patient_name": {
                                "type": "string"
                              },
                              "medical_values": {
                                "type": "object"
                              },
                              "batch_data": {
                                "type": "array"
                              },
                              "batch_count": {
                                "type": "integer"
                              },
                              "data_type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "total_count": {
                          "type": "integer"
                        },
                        "last_updated": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "recent_medical_data": [
                      {
                        "device_id": "861265061481799",
                        "patient_name": "Adisak Inthanomkit",
                        "medical_values": {
                          "heart_rate": 80,
                          "systolic": 118,
                          "diastolic": 77,
                          "spO2": 97,
                          "temperature": 36.8,
                          "battery": 92,
                          "signal_gsm": 80,
                          "steps": 5080
                        },
                        "batch_data": [
                          {
                            "heartRate": 80,
                            "bloodPressure": {
                              "bp_sys": 118,
                              "bp_dia": 77
                            },
                            "spO2": 97,
                            "bodyTemperature": 36.8,
                            "timestamp": 1752787955
                          }
                        ],
                        "batch_count": 2,
                        "data_type": "batch_vital_signs"
                      }
                    ],
                    "total_count": 100,
                    "last_updated": "2025-07-17T15:30:00Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/data-flow/events": {
      "get": {
        "tags": [
          "data-flow"
        ],
        "summary": "Get Data Flow Events",
        "description": "Get data flow events for monitoring system performance",
        "operationId": "get_data_flow_events",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Number of events to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Data flow events retrieved successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/data-flow/emit": {
      "post": {
        "tags": [
          "data-flow"
        ],
        "summary": "Emit Data Flow Event",
        "description": "Emit a new data flow event for monitoring",
        "operationId": "emit_data_flow_event",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "step": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "device_type": {
                    "type": "string"
                  },
                  "topic": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event emitted successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/emergency-alerts": {
      "get": {
        "tags": [
          "emergency"
        ],
        "summary": "Get Emergency Alerts",
        "description": "Get emergency alerts and notifications",
        "operationId": "get_emergency_alerts",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "Number of alerts to return"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "processed",
                "all"
              ]
            },
            "description": "Filter by alert status"
          }
        ],
        "responses": {
          "200": {
            "description": "Emergency alerts retrieved successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/emergency-stats": {
      "get": {
        "tags": [
          "emergency"
        ],
        "summary": "Get Emergency Statistics",
        "description": "Get emergency alert statistics and metrics",
        "operationId": "get_emergency_stats",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Emergency statistics retrieved successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/mark-processed/{alert_id}": {
      "post": {
        "tags": [
          "emergency"
        ],
        "summary": "Mark Alert as Processed",
        "description": "Mark an emergency alert as processed",
        "operationId": "mark_alert_processed",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Alert ID to mark as processed"
          }
        ],
        "responses": {
          "200": {
            "description": "Alert marked as processed successfully"
          },
          "404": {
            "description": "Alert not found"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/event-log": {
      "get": {
        "tags": [
          "event-log"
        ],
        "summary": "Get Event Logs",
        "description": "Get system event logs with filtering and pagination",
        "operationId": "get_event_logs",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Number of logs to return"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of logs to skip"
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by event type"
          }
        ],
        "responses": {
          "200": {
            "description": "Event logs retrieved successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      },
      "post": {
        "tags": [
          "event-log"
        ],
        "summary": "Add Event Log",
        "description": "Add a new event log entry",
        "operationId": "add_event_log",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_type": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event log added successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/streaming/events": {
      "get": {
        "tags": [
          "streaming"
        ],
        "summary": "Get Streaming Events",
        "description": "Get real-time streaming events",
        "operationId": "get_streaming_events",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Number of events to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming events retrieved successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/redis/events": {
      "get": {
        "tags": [
          "redis"
        ],
        "summary": "Get Redis Events",
        "description": "Get Redis event cache data",
        "operationId": "get_redis_events",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Number of events to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Redis events retrieved successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/redis/stats": {
      "get": {
        "tags": [
          "redis"
        ],
        "summary": "Get Redis Statistics",
        "description": "Get Redis cache statistics and metrics",
        "operationId": "get_redis_stats",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Redis statistics retrieved successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/ava4-status": {
      "get": {
        "tags": [
          "ava4-status"
        ],
        "summary": "Get AVA4 Device Status",
        "description": "Get status of all AVA4 devices",
        "operationId": "get_ava4_status",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "AVA4 status retrieved successfully"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    },
    "/api/ava4-status/{ava4_mac}": {
      "get": {
        "tags": [
          "ava4-status"
        ],
        "summary": "Get Specific AVA4 Device Status",
        "description": "Get status for a specific AVA4 device by MAC address",
        "operationId": "get_ava4_device_status",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ava4_mac",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "AVA4 device MAC address"
          }
        ],
        "responses": {
          "200": {
            "description": "AVA4 device status retrieved successfully"
          },
          "404": {
            "description": "Device not found"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AVA4BoxAssignment": {
        "properties": {
          "patient_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Patient Id",
            "description": "Patient ID"
          },
          "box_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Box Id",
            "description": "AVA4 Box ID"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Installation location"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Assignment notes"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "box_id"
        ],
        "title": "AVA4BoxAssignment"
      },
      "ApproveRequestRequest": {
        "properties": {
          "approved": {
            "type": "boolean",
            "title": "Approved"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "approved"
        ],
        "title": "ApproveRequestRequest"
      },
      "Ava4DataRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "device_id",
          "type",
          "data"
        ],
        "title": "Ava4DataRequest"
      },
      "Ava4DataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "observation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observation Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "Ava4DataResponse"
      },
      "Ava4DeviceCreate": {
        "properties": {
          "mac_address": {
            "type": "string",
            "maxLength": 17,
            "minLength": 17,
            "title": "Mac Address",
            "description": "MAC address of the AVA4 device"
          },
          "box_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Box Name",
            "description": "Display name for the AVA4 box"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "Device model",
            "default": "AVA4"
          },
          "imei": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 15,
                "minLength": 15
              },
              {
                "type": "null"
              }
            ],
            "title": "Imei",
            "description": "IMEI of the device"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number",
            "description": "Serial number of the device"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version",
            "description": "Firmware version"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Physical location of the device"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Device status",
            "default": "inactive"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id",
            "description": "Patient ID to assign the device to"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the device is active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "mac_address",
          "box_name"
        ],
        "title": "Ava4DeviceCreate",
        "description": "Model for creating a new AVA4 device"
      },
      "Ava4DeviceUpdate": {
        "properties": {
          "box_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Box Name",
            "description": "Display name for the AVA4 box"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Device model"
          },
          "imei": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 15,
                "minLength": 15
              },
              {
                "type": "null"
              }
            ],
            "title": "Imei",
            "description": "IMEI of the device"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number",
            "description": "Serial number of the device"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version",
            "description": "Firmware version"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Physical location of the device"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Device status"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id",
            "description": "Patient ID to assign the device to"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether the device is active"
          }
        },
        "type": "object",
        "title": "Ava4DeviceUpdate",
        "description": "Model for updating an AVA4 device"
      },
      "Body_create_observation_from_mqtt_fhir_R5_Observation_from_mqtt_post": {
        "properties": {
          "mqtt_payload": {
            "type": "object",
            "title": "Mqtt Payload",
            "description": "AVA4 MQTT payload"
          },
          "patient_id": {
            "type": "string",
            "title": "Patient Id",
            "description": "Patient ID"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id",
            "description": "Device ID"
          }
        },
        "type": "object",
        "required": [
          "mqtt_payload",
          "patient_id",
          "device_id"
        ],
        "title": "Body_create_observation_from_mqtt_fhir_R5_Observation_from_mqtt_post"
      },
      "Body_upload_profile_photo_auth_me_photo_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_profile_photo_auth_me_photo_post"
      },
      "ChangePasswordRequest": {
        "properties": {
          "old_password": {
            "type": "string",
            "title": "Old Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "old_password",
          "new_password"
        ],
        "title": "ChangePasswordRequest"
      },
      "CleanupRequest": {
        "properties": {
          "retention_days": {
            "type": "integer",
            "maximum": 3650.0,
            "minimum": 1.0,
            "title": "Retention Days",
            "description": "Retention period in days (default 7 years)",
            "default": 2555
          },
          "dry_run": {
            "type": "boolean",
            "title": "Dry Run",
            "description": "Perform dry run without actual deletion",
            "default": true
          }
        },
        "type": "object",
        "title": "CleanupRequest",
        "description": "Request for audit log cleanup"
      },
      "CreateReportTemplateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": ""
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "format": {
            "type": "string",
            "title": "Format"
          },
          "frequency": {
            "type": "string",
            "title": "Frequency"
          },
          "recipients": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipients",
            "default": []
          },
          "filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "default": {}
          },
          "template_config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Config",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "format",
          "frequency"
        ],
        "title": "CreateReportTemplateRequest"
      },
      "DeviceDataCreate": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "data_type": {
            "type": "string",
            "title": "Data Type"
          },
          "values": {
            "type": "object",
            "title": "Values"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "device_id",
          "device_type",
          "data_type",
          "values"
        ],
        "title": "DeviceDataCreate"
      },
      "DeviceDataUpdate": {
        "properties": {
          "values": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Values"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "DeviceDataUpdate"
      },
      "ErrorDetail": {
        "properties": {
          "error_code": {
            "type": "string",
            "title": "Error Code",
            "description": "Unique error code"
          },
          "error_type": {
            "type": "string",
            "title": "Error Type",
            "description": "Type of error"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Human-readable error message"
          },
          "field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field",
            "description": "Field that caused the error"
          },
          "value": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "Value that caused the error"
          },
          "suggestion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggestion",
            "description": "Suggestion to fix the error"
          }
        },
        "type": "object",
        "required": [
          "error_code",
          "error_type",
          "message"
        ],
        "title": "ErrorDetail"
      },
      "ErrorResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": false
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count",
            "description": "Number of errors"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "type": "array",
            "title": "Errors",
            "description": "List of error details"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id",
            "description": "Request ID for tracking"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "Error timestamp"
          }
        },
        "type": "object",
        "required": [
          "error_count",
          "errors",
          "timestamp"
        ],
        "title": "ErrorResponse"
      },
      "ForgotPasswordRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "ForgotPasswordRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HospitalUserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "user_title": {
            "type": "string",
            "title": "User Title",
            "description": "Title: Mr., Mrs., Miss, Dr., other",
            "default": "Mr."
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "country_phone_code": {
            "type": "string",
            "title": "Country Phone Code",
            "default": "+66"
          },
          "country_code": {
            "type": "string",
            "title": "Country Code",
            "default": "Th"
          },
          "country_name": {
            "type": "string",
            "title": "Country Name",
            "default": "Thailand"
          },
          "hospital_id": {
            "type": "string",
            "format": "object-id",
            "title": "Hospital Id"
          },
          "type": {
            "type": "string",
            "format": "object-id",
            "title": "Type"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "default": ""
          },
          "server_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Token",
            "default": ""
          },
          "device_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Token",
            "default": ""
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type",
            "default": ""
          },
          "app_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Version",
            "default": ""
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "title": "Password",
            "description": "Password (will be hashed)"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name",
          "phone",
          "hospital_id",
          "type",
          "password"
        ],
        "title": "HospitalUserCreate",
        "description": "Model for creating a new hospital user"
      },
      "HospitalUserSearchQuery": {
        "properties": {
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted"
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search"
          }
        },
        "type": "object",
        "title": "HospitalUserSearchQuery",
        "description": "Model for hospital user search parameters"
      },
      "HospitalUserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "user_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Title"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "country_phone_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Phone Code"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code"
          },
          "country_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Name"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "object-id"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "format": "object-id"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "server_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Token"
          },
          "device_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Token"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "app_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Version"
          }
        },
        "type": "object",
        "title": "HospitalUserUpdate",
        "description": "Model for updating hospital user"
      },
      "KatiDataRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "device_id",
          "type",
          "data"
        ],
        "title": "KatiDataRequest"
      },
      "KatiDataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "observation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observation Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "KatiDataResponse"
      },
      "KatiWatchAssignment": {
        "properties": {
          "patient_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Patient Id",
            "description": "Patient ID"
          },
          "watch_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Watch Id",
            "description": "Kati Watch ID"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Assignment notes"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "watch_id"
        ],
        "title": "KatiWatchAssignment"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest"
      },
      "MasterDataCreate": {
        "properties": {
          "data_type": {
            "type": "string",
            "title": "Data Type"
          },
          "name": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "province_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province Code"
          },
          "district_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "District Code"
          },
          "sub_district_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub District Code"
          },
          "additional_fields": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Fields"
          }
        },
        "type": "object",
        "required": [
          "data_type"
        ],
        "title": "MasterDataCreate"
      },
      "MasterDataUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "province_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province Code"
          },
          "district_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "District Code"
          },
          "sub_district_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub District Code"
          },
          "additional_fields": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Fields"
          }
        },
        "type": "object",
        "title": "MasterDataUpdate"
      },
      "MedicalAnalyticsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Medical analytics data"
          }
        },
        "type": "object",
        "required": [
          "message",
          "data"
        ],
        "title": "MedicalAnalyticsResponse",
        "description": "Response model for medical analytics"
      },
      "MedicalDeviceCreate": {
        "properties": {
          "patient_id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "title": "Patient Id",
            "description": "Patient ID"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type",
            "description": "Device type (mac_gw, mac_dusun_bps, mac_oxymeter, etc.)"
          },
          "mac_address": {
            "type": "string",
            "maxLength": 17,
            "minLength": 1,
            "title": "Mac Address",
            "description": "Device MAC address"
          },
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name",
            "description": "Device name"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "device_type",
          "mac_address"
        ],
        "title": "MedicalDeviceCreate"
      },
      "MedicalDeviceUpdate": {
        "properties": {
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type",
            "description": "Device type"
          },
          "mac_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 17,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Address",
            "description": "Device MAC address"
          },
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name",
            "description": "Device name"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          }
        },
        "type": "object",
        "title": "MedicalDeviceUpdate"
      },
      "MedicalHistoryCollectionsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Collections data"
          }
        },
        "type": "object",
        "required": [
          "message",
          "data"
        ],
        "title": "MedicalHistoryCollectionsResponse",
        "description": "Response model for medical history collections overview"
      },
      "MedicalHistoryCreate": {
        "properties": {
          "patient_id": {
            "type": "string",
            "title": "Patient Id",
            "description": "Patient ID reference"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "description": "Device ID that recorded the data"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type",
            "description": "Type of device (AVA4, Kati, Qube-Vital)"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp",
            "description": "When the measurement was taken"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          },
          "history_type": {
            "type": "string",
            "title": "History Type",
            "description": "Type of medical history (blood_pressure, blood_sugar, etc.)"
          },
          "values": {
            "type": "object",
            "title": "Values",
            "description": "Medical data values specific to history type"
          }
        },
        "type": "object",
        "required": [
          "patient_id",
          "history_type",
          "values"
        ],
        "title": "MedicalHistoryCreate"
      },
      "MedicalHistorySearchQuery": {
        "properties": {
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search",
            "description": "General search across data fields"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id",
            "description": "Filter by patient ID"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "description": "Filter by device ID"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type",
            "description": "Filter by device type"
          },
          "date_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date From",
            "description": "Start date filter"
          },
          "date_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date To",
            "description": "End date filter"
          },
          "value_min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value Min",
            "description": "Minimum value filter (for numeric data)"
          },
          "value_max": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value Max",
            "description": "Maximum value filter (for numeric data)"
          }
        },
        "type": "object",
        "title": "MedicalHistorySearchQuery"
      },
      "MedicalHistoryUpdate": {
        "properties": {
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "values": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Values"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "MedicalHistoryUpdate"
      },
      "MedicalTrendsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Medical trends data with analytics"
          }
        },
        "type": "object",
        "required": [
          "message",
          "data"
        ],
        "title": "MedicalTrendsResponse",
        "description": "Response model for medical trends analysis"
      },
      "PatientCreate": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "id_card": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Card"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "province_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province Code"
          },
          "district_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "District Code"
          },
          "sub_district_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub District Code"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "emergency_contact_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Name"
          },
          "emergency_contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Phone"
          },
          "emergency_contact_relationship": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Relationship"
          },
          "blood_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blood Type"
          },
          "height": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "bmi": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bmi"
          },
          "watch_mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Watch Mac Address"
          },
          "ava_mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ava Mac Address"
          },
          "new_hospital_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Hospital Ids"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "gender"
        ],
        "title": "PatientCreate"
      },
      "PatientDeviceRegistry": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Healthcare provider managing this patient's devices"
          },
          "patient_id": {
            "type": "string",
            "title": "Patient Id",
            "description": "Patient ID these devices belong to"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group",
            "description": "Device group/organization"
          },
          "mac_gw": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Gw",
            "description": "Gateway MAC address (AVA4 box)"
          },
          "mac_bps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Bps",
            "description": "Blood pressure monitor MAC address"
          },
          "mac_body_temp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Body Temp",
            "description": "Body temperature sensor MAC address"
          },
          "mac_watch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Watch",
            "description": "Smart watch MAC address"
          },
          "mac_oxymeter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Oxymeter",
            "description": "Oximeter MAC address"
          },
          "mac_weight": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Weight",
            "description": "Weight scale MAC address"
          },
          "mac_gluc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Gluc",
            "description": "Glucose meter MAC address"
          },
          "mac_chol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Chol",
            "description": "Cholesterol meter MAC address"
          },
          "mac_ua": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Ua",
            "description": "Uric acid meter MAC address"
          },
          "mac_dusun_bps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Dusun Bps",
            "description": "Dusun blood pressure monitor MAC address"
          },
          "mac_mgss_oxymeter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Mgss Oxymeter",
            "description": "MGSS oximeter MAC address"
          },
          "mac_salt_meter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Salt Meter",
            "description": "Salt meter MAC address"
          }
        },
        "type": "object",
        "required": [
          "patient_id"
        ],
        "title": "PatientDeviceRegistry",
        "description": "Model for patient medical device registry"
      },
      "PatientDeviceRegistryUpdate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Healthcare provider managing this patient's devices"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group",
            "description": "Device group/organization"
          },
          "mac_gw": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Gw",
            "description": "Gateway MAC address (AVA4 box)"
          },
          "mac_bps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Bps",
            "description": "Blood pressure monitor MAC address"
          },
          "mac_body_temp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Body Temp",
            "description": "Body temperature sensor MAC address"
          },
          "mac_watch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Watch",
            "description": "Smart watch MAC address"
          },
          "mac_oxymeter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Oxymeter",
            "description": "Oximeter MAC address"
          },
          "mac_weight": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Weight",
            "description": "Weight scale MAC address"
          },
          "mac_gluc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Gluc",
            "description": "Glucose meter MAC address"
          },
          "mac_chol": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Chol",
            "description": "Cholesterol meter MAC address"
          },
          "mac_ua": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Ua",
            "description": "Uric acid meter MAC address"
          },
          "mac_dusun_bps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Dusun Bps",
            "description": "Dusun blood pressure monitor MAC address"
          },
          "mac_mgss_oxymeter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Mgss Oxymeter",
            "description": "MGSS oximeter MAC address"
          },
          "mac_salt_meter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Salt Meter",
            "description": "Salt meter MAC address"
          }
        },
        "type": "object",
        "title": "PatientDeviceRegistryUpdate",
        "description": "Model for updating patient medical device registry"
      },
      "PatientMedicalHistoryResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Patient medical history data"
          }
        },
        "type": "object",
        "required": [
          "message",
          "data"
        ],
        "title": "PatientMedicalHistoryResponse",
        "description": "Response model for patient medical history"
      },
      "PatientUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "id_card": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Card"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "province_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Province Code"
          },
          "district_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "District Code"
          },
          "sub_district_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub District Code"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "emergency_contact_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Name"
          },
          "emergency_contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Phone"
          },
          "emergency_contact_relationship": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Contact Relationship"
          },
          "blood_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blood Type"
          },
          "height": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "bmi": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bmi"
          },
          "watch_mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Watch Mac Address"
          },
          "ava_mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ava Mac Address"
          },
          "new_hospital_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Hospital Ids"
          }
        },
        "type": "object",
        "title": "PatientUpdate"
      },
      "QubeVitalDataRequest": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "device_id",
          "type",
          "data"
        ],
        "title": "QubeVitalDataRequest"
      },
      "QubeVitalDataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "observation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observation Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "QubeVitalDataResponse"
      },
      "QubeVitalDeviceCreate": {
        "properties": {
          "imei_of_hv01_box": {
            "type": "string",
            "maxLength": 15,
            "minLength": 15,
            "title": "Imei Of Hv01 Box",
            "description": "IMEI of the Qube-Vital HV01 box"
          },
          "device_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Device Name",
            "description": "Display name for the device"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "Device model",
            "default": "HV01"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id",
            "description": "Hospital ID to assign the device to"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Physical location of the device"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Device status",
            "default": "inactive"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the device is active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "imei_of_hv01_box",
          "device_name"
        ],
        "title": "QubeVitalDeviceCreate",
        "description": "Model for creating a new Qube-Vital device"
      },
      "QubeVitalDeviceUpdate": {
        "properties": {
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name",
            "description": "Display name for the device"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Device model"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id",
            "description": "Hospital ID to assign the device to"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Physical location of the device"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Device status"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether the device is active"
          }
        },
        "type": "object",
        "title": "QubeVitalDeviceUpdate",
        "description": "Model for updating a Qube-Vital device"
      },
      "RefreshRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshRequest"
      },
      "RegisterRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "email",
          "full_name"
        ],
        "title": "RegisterRequest"
      },
      "RegisterRequestRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "full_name"
        ],
        "title": "RegisterRequestRequest"
      },
      "ResetPasswordRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "ResetPasswordRequest"
      },
      "TokenResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "user": {
            "type": "object",
            "title": "User",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "access_token",
          "token_type"
        ],
        "title": "TokenResponse"
      },
      "UpdateProfileRequest": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "type": "object",
        "title": "UpdateProfileRequest"
      },
      "UpdateReportTemplateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format"
          },
          "frequency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency"
          },
          "recipients": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipients"
          },
          "filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "template_config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Config"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          }
        },
        "type": "object",
        "title": "UpdateReportTemplateRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__models__base__SuccessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "SuccessResponse",
        "description": "Standard success response model"
      },
      "app__routes__admin__DeviceCreate": {
        "properties": {
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "mac_address": {
            "type": "string",
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "active"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "device_type",
          "mac_address"
        ],
        "title": "DeviceCreate"
      },
      "app__routes__admin__DeviceUpdate": {
        "properties": {
          "mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "DeviceUpdate"
      },
      "app__routes__device_crud__DeviceCreate": {
        "properties": {
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "mac_address": {
            "type": "string",
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "active"
          },
          "configuration": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          }
        },
        "type": "object",
        "required": [
          "device_type",
          "mac_address"
        ],
        "title": "DeviceCreate"
      },
      "app__routes__device_crud__DeviceUpdate": {
        "properties": {
          "mac_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mac Address"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "hospital_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hospital Id"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "configuration": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          }
        },
        "type": "object",
        "title": "DeviceUpdate"
      },
      "app__utils__error_definitions__SuccessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "description": "Response data"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id",
            "description": "Request ID for tracking"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "Response timestamp"
          }
        },
        "type": "object",
        "required": [
          "message",
          "timestamp"
        ],
        "title": "SuccessResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}