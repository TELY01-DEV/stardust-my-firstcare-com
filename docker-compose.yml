services:
  # ========================================
  # MAIN STARDUST API SERVICE
  # ========================================
  stardust-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stardust-my-firstcare-com
    ports:
      - "5054:5054"
    environment:
      - ENVIRONMENT=development
      - MONGODB_URI=mongodb://opera_admin:Sim!443355@coruscant.my-firstcare.com:27023/admin?ssl=true&authSource=admin
      - MONGODB_HOST=coruscant.my-firstcare.com
      - MONGODB_PORT=27023
      - MONGODB_USERNAME=opera_admin
      - MONGODB_PASSWORD=Sim!443355
      - MONGODB_AUTH_DB=admin
      - MONGODB_SSL=true
      - MONGODB_MAIN_DB=AMY
      - MONGODB_FHIR_DB=MFC_FHIR_R5
      - JWT_AUTH_BASE_URL=https://stardust-v1.my-firstcare.com
      - ENABLE_JWT_AUTH=false
      - DEBUG=false
      - DEV_MODE=false
      - PORT=5054
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6374/0
      - ENABLE_CACHE=true
      - ENCRYPTION_MASTER_KEY=mg409-8dtxc4WOTPr0Q0VYSDhIVFaTVcqYGxfchBUJw=
    volumes:
      - ./logs:/app/logs
      - ./ssl:/app/ssl:ro
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:5054/health').read()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - stardust-network

  # ========================================
  # REDIS SERVICE
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: stardust-redis
    command: redis-server --port 6374 --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6374:6374"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - stardust-network
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6374", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # MQTT LISTENER SERVICES
  # ========================================
  
  # AVA4 MQTT Listener
  ava4-listener:
    build: 
      context: ./services/mqtt-listeners
      dockerfile: ava4-listener/Dockerfile
    container_name: stardust-ava4-listener
    environment:
      # MQTT Configuration
      - MQTT_ENABLED=true
      - MQTT_BROKER_HOST=adam.amy.care
      - MQTT_BROKER_PORT=1883
      - MQTT_USERNAME=webapi
      - MQTT_PASSWORD=Sim!4433
      - MQTT_QOS=1
      - MQTT_RETAIN=false
      - MQTT_KEEPALIVE=60
      - MQTT_CONNECTION_TIMEOUT=10
      - MQTT_TOPICS=ESP32_BLE_GW_TX,dusun_pub
      
      # MongoDB Configuration with SSL
      - MONGODB_URI=mongodb://opera_admin:Sim!443355@coruscant.my-firstcare.com:27023/admin?ssl=true&authSource=admin&tlsAllowInvalidCertificates=true&tlsAllowInvalidHostnames=true&tlsCAFile=/app/ssl/ca-latest.pem&tlsCertificateKeyFile=/app/ssl/client-combined-latest.pem
      - MONGODB_DATABASE=AMY
      - MONGODB_HOST=coruscant.my-firstcare.com
      - MONGODB_PORT=27023
      - MONGODB_USERNAME=opera_admin
      - MONGODB_PASSWORD=Sim!443355
      - MONGODB_AUTH_DB=admin
      - MONGODB_SSL=true
      - MONGODB_SSL_CA_FILE=/app/ssl/ca-latest.pem
      - MONGODB_SSL_CLIENT_FILE=/app/ssl/client-combined-latest.pem
      
      # Redis Configuration
      - REDIS_URL=redis://redis:6374/2
      
      # Service Configuration
      - SERVICE_NAME=ava4-listener
      - LOG_LEVEL=INFO
      - MAX_RETRIES=3
      - RETRY_DELAY=5
    volumes:
      - ./ssl:/app/ssl:ro
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - stardust-network

  # Kati Watch MQTT Listener
  kati-listener:
    build: 
      context: ./services/mqtt-listeners
      dockerfile: kati-listener/Dockerfile
    container_name: stardust-kati-listener
    environment:
      # MQTT Configuration
      - MQTT_ENABLED=true
      - MQTT_BROKER_HOST=adam.amy.care
      - MQTT_BROKER_PORT=1883
      - MQTT_USERNAME=webapi
      - MQTT_PASSWORD=Sim!4433
      - MQTT_QOS=1
      - MQTT_RETAIN=false
      - MQTT_KEEPALIVE=60
      - MQTT_CONNECTION_TIMEOUT=10
      - MQTT_TOPICS=iMEDE_watch/VitalSign,iMEDE_watch/AP55,iMEDE_watch/hb,iMEDE_watch/location,iMEDE_watch/sleepdata,iMEDE_watch/sos,iMEDE_watch/fallDown,iMEDE_watch/onlineTrigger
      
      # MongoDB Configuration with SSL
      - MONGODB_URI=mongodb://opera_admin:Sim!443355@coruscant.my-firstcare.com:27023/admin?ssl=true&authSource=admin&tlsAllowInvalidCertificates=true&tlsAllowInvalidHostnames=true&tlsCAFile=/app/ssl/ca-latest.pem&tlsCertificateKeyFile=/app/ssl/client-combined-latest.pem
      - MONGODB_DATABASE=AMY
      - MONGODB_HOST=coruscant.my-firstcare.com
      - MONGODB_PORT=27023
      - MONGODB_USERNAME=opera_admin
      - MONGODB_PASSWORD=Sim!443355
      - MONGODB_AUTH_DB=admin
      - MONGODB_SSL=true
      - MONGODB_SSL_CA_FILE=/app/ssl/ca-latest.pem
      - MONGODB_SSL_CLIENT_FILE=/app/ssl/client-combined-latest.pem
      
      # Redis Configuration
      - REDIS_URL=redis://redis:6374/3
      
      # Service Configuration
      - SERVICE_NAME=kati-listener
      - LOG_LEVEL=INFO
      - MAX_RETRIES=3
      - RETRY_DELAY=5
    volumes:
      - ./ssl:/app/ssl:ro
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - stardust-network

  # Qube-Vital MQTT Listener
  qube-listener:
    build: 
      context: ./services/mqtt-listeners
      dockerfile: qube-listener/Dockerfile
    container_name: stardust-qube-listener
    environment:
      # MQTT Configuration
      - MQTT_ENABLED=true
      - MQTT_BROKER_HOST=adam.amy.care
      - MQTT_BROKER_PORT=1883
      - MQTT_USERNAME=webapi
      - MQTT_PASSWORD=Sim!4433
      - MQTT_QOS=1
      - MQTT_RETAIN=false
      - MQTT_KEEPALIVE=60
      - MQTT_CONNECTION_TIMEOUT=10
      - MQTT_TOPICS=CM4_BLE_GW_TX
      
      # MongoDB Configuration with SSL
      - MONGODB_URI=mongodb://opera_admin:Sim!443355@coruscant.my-firstcare.com:27023/admin?ssl=true&authSource=admin&tlsAllowInvalidCertificates=true&tlsAllowInvalidHostnames=true&tlsCAFile=/app/ssl/ca-latest.pem&tlsCertificateKeyFile=/app/ssl/client-combined-latest.pem
      - MONGODB_DATABASE=AMY
      - MONGODB_HOST=coruscant.my-firstcare.com
      - MONGODB_PORT=27023
      - MONGODB_USERNAME=opera_admin
      - MONGODB_PASSWORD=Sim!443355
      - MONGODB_AUTH_DB=admin
      - MONGODB_SSL=true
      - MONGODB_SSL_CA_FILE=/app/ssl/ca-latest.pem
      - MONGODB_SSL_CLIENT_FILE=/app/ssl/client-combined-latest.pem
      
      # Redis Configuration
      - REDIS_URL=redis://redis:6374/4
      
      # Service Configuration
      - SERVICE_NAME=qube-listener
      - LOG_LEVEL=INFO
      - MAX_RETRIES=3
      - RETRY_DELAY=5
    volumes:
      - ./ssl:/app/ssl:ro
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - stardust-network

  # ========================================
  # MQTT MONITORING SERVICES
  # ========================================
  
  # MQTT Monitor WebSocket Server
  mqtt-websocket:
    build: 
      context: ./services/mqtt-monitor
      dockerfile: websocket-server/Dockerfile
    container_name: stardust-mqtt-websocket
    ports:
      - "8097:8097"
    environment:
      # MQTT Configuration
      - MQTT_ENABLED=true
      - MQTT_BROKER_HOST=adam.amy.care
      - MQTT_BROKER_PORT=1883
      - MQTT_USERNAME=webapi
      - MQTT_PASSWORD=Sim!4433
      - MQTT_QOS=1
      - MQTT_RETAIN=false
      - MQTT_KEEPALIVE=60
      - MQTT_CONNECTION_TIMEOUT=10
      - MQTT_TOPICS=ESP32_BLE_GW_TX,dusun_sub,iMEDE_watch/#,CM4_BLE_GW_TX
      
      # MongoDB Configuration with SSL
      - MONGODB_URI=mongodb://opera_admin:Sim!443355@coruscant.my-firstcare.com:27023/admin?ssl=true&authSource=admin&tlsAllowInvalidCertificates=true&tlsAllowInvalidHostnames=true&tlsCAFile=/app/ssl/ca-latest.pem&tlsCertificateKeyFile=/app/ssl/client-combined-latest.pem
      - MONGODB_DATABASE=AMY
      - MONGODB_HOST=coruscant.my-firstcare.com
      - MONGODB_PORT=27023
      - MONGODB_USERNAME=opera_admin
      - MONGODB_PASSWORD=Sim!443355
      - MONGODB_AUTH_DB=admin
      - MONGODB_SSL=true
      - MONGODB_SSL_CA_FILE=/app/ssl/ca-latest.pem
      - MONGODB_SSL_CLIENT_FILE=/app/ssl/client-combined-latest.pem
      
      # WebSocket Configuration
      - WS_PORT=8097
      - WS_HOST=0.0.0.0
      - LOG_LEVEL=INFO
    volumes:
      - ./ssl:/app/ssl:ro
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - stardust-network

  # MQTT Monitor Web Panel
  mqtt-panel:
    build: 
      context: ./services/mqtt-monitor
      dockerfile: web-panel/Dockerfile
    container_name: stardust-mqtt-panel
    ports:
      - "8098:8098"
    environment:
      # MQTT Configuration
      - MQTT_ENABLED=true
      - MQTT_BROKER_HOST=adam.amy.care
      - MQTT_BROKER_PORT=1883
      - MQTT_USERNAME=webapi
      - MQTT_PASSWORD=Sim!4433
      - MQTT_QOS=1
      - MQTT_RETAIN=false
      - MQTT_KEEPALIVE=60
      - MQTT_CONNECTION_TIMEOUT=10
      - MQTT_TOPICS=ESP32_BLE_GW_TX,dusun_sub,iMEDE_watch/#,CM4_BLE_GW_TX
      
      # MongoDB Configuration with SSL
      - MONGODB_URI=mongodb://opera_admin:Sim!443355@coruscant.my-firstcare.com:27023/admin?ssl=true&authSource=admin&tlsAllowInvalidCertificates=true&tlsAllowInvalidHostnames=true&tlsCAFile=/app/ssl/ca-latest.pem&tlsCertificateKeyFile=/app/ssl/client-combined-latest.pem
      - MONGODB_DATABASE=AMY
      - MONGODB_HOST=coruscant.my-firstcare.com
      - MONGODB_PORT=27023
      - MONGODB_USERNAME=opera_admin
      - MONGODB_PASSWORD=Sim!443355
      - MONGODB_AUTH_DB=admin
      - MONGODB_SSL=true
      - MONGODB_SSL_CA_FILE=/app/ssl/ca-latest.pem
      - MONGODB_SSL_CLIENT_FILE=/app/ssl/client-combined-latest.pem
      
      # Redis Configuration
      - REDIS_URL=redis://redis:6374/1
      
      # Web Panel Configuration
      - WEB_PORT=8098
      - WEB_HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - MAX_HISTORY=1000
      
      # JWT Authentication Configuration
      - JWT_AUTH_BASE_URL=https://stardust-v1.my-firstcare.com
      - JWT_LOGIN_ENDPOINT=/auth/login
      - JWT_ME_ENDPOINT=/auth/me
    volumes:
      - ./ssl:/app/ssl:ro
    restart: unless-stopped
    depends_on:
      - redis
      - mqtt-websocket
    networks:
      - stardust-network

networks:
  stardust-network:
    driver: bridge

volumes:
  redis-data:
    driver: local 